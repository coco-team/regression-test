-- This file has been generated by cocoSim


-- System nodes




node POINT__To__TOP_A_2_Condition_Action(a_1:int)

returns (a:int);


var 	a_2:int;


let



	a_2 
	=  a_1 +1;
	

	(a) 
	= (a_2);
	

tel





node POINT__To__TOP_A_2_Transition_Action(a_1:int;
	b_1:int)

returns (a:int;
	b:int);


var 	b_2:int;


let



	b_2 
	=  b_1 +1;
	

	(a, b) 
	= (a_1, b_2);
	

tel






node POINT__To__TOP_A_1_Condition_Action(a_1:int)

returns (a:int);


var 	a_2:int;


let



	a_2 
	=  a_1 +10;
	

	(a) 
	= (a_2);
	

tel





node POINT__To__TOP_A_1_Transition_Action(a_1:int;
	b_1:int)

returns (a:int;
	b:int);


var 	b_2:int;


let



	b_2 
	=  b_1 +10;
	

	(a, b) 
	= (a_1, b_2);
	

tel






node Junctions4_Junctions4Junction703__To__TOP_B_2_Condition_Action(a_1:int)

returns (a:int);


var 	a_2:int;


let



	a_2 
	=  a_1 +10000;
	

	(a) 
	= (a_2);
	

tel





node Junctions4_Junctions4Junction703__To__TOP_B_2_Transition_Action(a_1:int;
	b_1:int)

returns (a:int;
	b:int);


var 	b_2:int;


let



	b_2 
	=  b_1 +10000;
	

	(a, b) 
	= (a_1, b_2);
	

tel






node TOP_A__To__Junctions4_Junctions4Junction703_1_Condition_Action(a_1:int)

returns (a:int);


var 	a_2:int;


let



	a_2 
	=  a_1 +1000;
	

	(a) 
	= (a_2);
	

tel







node Junctions4_Junctions4Junction703__To__TOP_B_1_Condition_Action(a_1:int)

returns (a:int);


var 	a_2:int;


let



	a_2 
	=  a_1 +100000;
	

	(a) 
	= (a_2);
	

tel





node Junctions4_Junctions4Junction703__To__TOP_B_1_Transition_Action(a_1:int;
	b_1:int)

returns (a:int;
	b:int);


var 	b_2:int;


let



	b_2 
	=  b_1 +100000;
	

	(a, b) 
	= (a_1, b_2);
	

tel






node TOP_A__To__Junctions4_Junctions4Junction703_2_Condition_Action(a_1:int)

returns (a:int);


var 	a_2:int;


let



	a_2 
	=  a_1 +100;
	

	(a) 
	= (a_2);
	

tel







-- Entry action for state :TOP_A
node TOP_A_en(idJunctions4_TOP_1:int;
	c_1:int;
	isInner:bool)

returns (idJunctions4_TOP:int;
	c:int);


var 	idJunctions4_TOP_2:int;
	c_2:int;


let



	-- set state as active 
	idJunctions4_TOP_2 
	= 700;
	

	c_2 
	= if (not isInner) then  c_1 +1
	 else c_1;
	

	(idJunctions4_TOP, c) 
	= (idJunctions4_TOP_2, c_2);
	

tel





-- Exit action for state :TOP_A
node TOP_A_ex(c_1:int;
	idJunctions4_TOP_1:int;
	isInner:bool)

returns (c:int;
	idJunctions4_TOP:int);


var 	c_2:int;
	idJunctions4_TOP_2:int;


let



	c_2 
	= if (not isInner) then  c_1 +10
	 else c_1;
	

	-- set state as inactive 
	idJunctions4_TOP_2
	 = if (not isInner) then 0 else idJunctions4_TOP_1;


	(c, idJunctions4_TOP) 
	= (c_2, idJunctions4_TOP_2);
	

tel






-- Entry action for state :TOP_B
node TOP_B_en(idJunctions4_TOP_1:int;
	c_1:int;
	isInner:bool)

returns (idJunctions4_TOP:int;
	c:int);


var 	idJunctions4_TOP_2:int;
	c_2:int;


let



	-- set state as active 
	idJunctions4_TOP_2 
	= 701;
	

	c_2 
	= if (not isInner) then  c_1 +100
	 else c_1;
	

	(idJunctions4_TOP, c) 
	= (idJunctions4_TOP_2, c_2);
	

tel





--During action for state :TOP_B
node TOP_B_du(c_1:int)

returns (c:int);


var 	c_2:int;


let



	c_2 
	=  c_1 +1000;
	

	(c) 
	= (c_2);
	

tel





-- Exit action for state :TOP_B
node TOP_B_ex(idJunctions4_TOP_1:int;
	isInner:bool)

returns (idJunctions4_TOP:int);


var 	idJunctions4_TOP_2:int;


let



	-- set state as inactive 
	idJunctions4_TOP_2
	 = if (not isInner) then 0 else idJunctions4_TOP_1;


	(idJunctions4_TOP) 
	= (idJunctions4_TOP_2);
	

tel






-- Entry action for state :Junctions4_TOP
node Junctions4_TOP_en(idJunctions4_TOP_1:int;
	idJunctions4_Junctions4_1:int;
	x:int;
	a_1:int;
	b_1:int;
	c_1:int;
	isInner:bool)

returns (idJunctions4_TOP:int;
	idJunctions4_Junctions4:int;
	a:int;
	b:int;
	c:int);


var 	idJunctions4_TOP_2, idJunctions4_TOP_3, idJunctions4_TOP_4, idJunctions4_TOP_5, idJunctions4_TOP_6, idJunctions4_TOP_7:int;
	idJunctions4_Junctions4_2, idJunctions4_Junctions4_3, idJunctions4_Junctions4_4:int;
	a_2, a_3, a_4, a_5, a_6, a_7:int;
	b_2, b_3, b_4, b_5:int;
	c_2, c_3, c_4, c_5, c_6, c_7:int;


let



	-- set state as active 
	idJunctions4_Junctions4_2 
	= 702;
	

	
-- transition trace :
	--POINT__To__TOP_A_1
		-- condition Action : a+=10
		
		(a_2) 
	= 
		 if (( x!=0 )) then 
		POINT__To__TOP_A_1_Condition_Action(a_1)
		 else (a_1);
		

		(a_3, b_2) 
	= 
		 if (( x!=0 )) then 
		POINT__To__TOP_A_1_Transition_Action(a_2, b_1)
		 else (a_2, b_1);
		

		(idJunctions4_TOP_2, c_2) 
	= 
		 if (( x!=0 )) then 
		TOP_A_en(idJunctions4_TOP_1, c_1, false)
		 else (idJunctions4_TOP_1, c_1);
		

-- transition trace :
	--POINT__To__TOP_A_2
		-- condition Action : a+=1
		
		(a_4) 
	= 
		 if (( x=0 )) then 
		POINT__To__TOP_A_2_Condition_Action(a_3)
		 else (a_3);
		

		(a_5, b_3) 
	= 
		 if (( x=0 )) then 
		POINT__To__TOP_A_2_Transition_Action(a_4, b_2)
		 else (a_4, b_2);
		

		(idJunctions4_TOP_3, c_3) 
	= 
		 if (( x=0 )) then 
		TOP_A_en(idJunctions4_TOP_2, c_2, false)
		 else (idJunctions4_TOP_2, c_2);
		

	(idJunctions4_TOP_4, idJunctions4_Junctions4_3, a_6, b_4, c_4) 
	= 

	if ( idJunctions4_TOP_1 = 0) then

	
		 if (( x!=0 )) then 
		(idJunctions4_TOP_2, idJunctions4_Junctions4_2, a_3, b_2, c_2)
		 else
		 if (( x=0 )) then 
		(idJunctions4_TOP_3, idJunctions4_Junctions4_2, a_5, b_3, c_3)
		 else (idJunctions4_TOP_1, idJunctions4_Junctions4_2, a_1, b_1, c_1)

	 else(idJunctions4_TOP_1, idJunctions4_Junctions4_2, a_1, b_1, c_1);

	

	(idJunctions4_TOP_5, c_5) 
	= 
	if ( idJunctions4_TOP_1 = 700) then
	TOP_A_en(idJunctions4_TOP_1, c_1, false)
	 else (idJunctions4_TOP_1, c_1);

	

	(idJunctions4_TOP_6, c_6) 
	= 
	if ( idJunctions4_TOP_1 = 701) then
	TOP_B_en(idJunctions4_TOP_1, c_1, false)
	 else (idJunctions4_TOP_1, c_1);

	

	(idJunctions4_TOP_7, idJunctions4_Junctions4_4, a_7, b_5, c_7) 
	= 
		 if ( idJunctions4_TOP_1 = 0) then 
		(idJunctions4_TOP_4, idJunctions4_Junctions4_3, a_6, b_4, c_4)
		 else
		 if ( idJunctions4_TOP_1 = 700) then 
		(idJunctions4_TOP_5, idJunctions4_Junctions4_3, a_6, b_4, c_5)
		 else
		 if ( idJunctions4_TOP_1 = 701) then 
		(idJunctions4_TOP_6, idJunctions4_Junctions4_3, a_6, b_4, c_6)
		 else (idJunctions4_TOP_1, idJunctions4_Junctions4_2, a_1, b_1, c_1);


	(idJunctions4_TOP, idJunctions4_Junctions4, a, b, c) 
	= (idJunctions4_TOP_7, idJunctions4_Junctions4_4, a_7, b_5, c_7);
	

tel





-- Exit action for state :Junctions4_TOP
node Junctions4_TOP_ex(c_1:int;
	idJunctions4_TOP_1:int;
	idJunctions4_Junctions4_1:int;
	isInner:bool)

returns (c:int;
	idJunctions4_TOP:int;
	idJunctions4_Junctions4:int);


var 	c_2, c_3:int;
	idJunctions4_TOP_2, idJunctions4_TOP_3, idJunctions4_TOP_4, idJunctions4_TOP_5:int;
	idJunctions4_Junctions4_2:int;


let



	
	(c_2, idJunctions4_TOP_2) 
	= 
	if ( idJunctions4_TOP_1 = 700) then
	TOP_A_ex(c_1, idJunctions4_TOP_1, false)
	 else (c_1, idJunctions4_TOP_1);

	

	(idJunctions4_TOP_3) 
	= 
	if ( idJunctions4_TOP_1 = 701) then
	TOP_B_ex(idJunctions4_TOP_1, false)
	 else (idJunctions4_TOP_1);

	

	(c_3, idJunctions4_TOP_4) 
	= 
		 if ( idJunctions4_TOP_1 = 700) then 
		(c_2, idJunctions4_TOP_2)
		 else
		 if ( idJunctions4_TOP_1 = 701) then 
		(c_2, idJunctions4_TOP_3)
		 else (c_1, idJunctions4_TOP_1);


	-- set state as inactive 
	idJunctions4_Junctions4_2
	 = if (not isInner) then 0 else idJunctions4_Junctions4_1;

	idJunctions4_TOP_5 
	= 0;
	

	(c, idJunctions4_TOP, idJunctions4_Junctions4) 
	= (c_3, idJunctions4_TOP_5, idJunctions4_Junctions4_2);
	

tel


--***************************************************State :Junctions4_TOP Automaton***************************************************

node Junctions4_TOP_node(idJunctions4_TOP_1:int;
	x:int;
	a_1:int;
	b_1:int;
	c_1:int;
	idJunctions4_Junctions4_1:int)

returns (idJunctions4_TOP:int;
	a:int;
	b:int;
	c:int;
	idJunctions4_Junctions4:int);


let

	 automaton junctions4_top

	state POINTJunctions4_TOP:
	unless (idJunctions4_TOP_1=0) and ( x!=0 ) restart POINT__TO__TOP_A_1



	unless (idJunctions4_TOP_1=0) and ( x=0 ) restart POINT__TO__TOP_A_2



	unless (idJunctions4_TOP_1=700) and ( x>=4 ) restart TOP_A__TO__JUNCTIONS4_JUNCTIONS4JUNCTION703_1



	unless (idJunctions4_TOP_1=700) and ( x<4 ) restart TOP_A__TO__JUNCTIONS4_JUNCTIONS4JUNCTION703_2



	unless (idJunctions4_TOP_1=701) restart TOP_B__TO__JUNCTIONS4_TOP_1



	unless (idJunctions4_TOP_1=700) restart TOP_A_IDL

	unless (idJunctions4_TOP_1=701) restart TOP_B_IDL

	let

		(idJunctions4_TOP, a, b, c, idJunctions4_Junctions4) 
	= (idJunctions4_TOP_1, a_1, b_1, c_1, idJunctions4_Junctions4_1);
	

	tel



	state POINT__TO__TOP_A_1:

	 var 	idJunctions4_TOP_2:int;
	a_2, a_3:int;
	b_2:int;
	c_2:int;
	let

		-- transition trace :
	--POINT__To__TOP_A_1
		-- condition Action : a+=10
		
		(a_2) 
	= POINT__To__TOP_A_1_Condition_Action(a_1);
		

		(a_3, b_2) 
	= POINT__To__TOP_A_1_Transition_Action(a_2, b_1);
		

		(idJunctions4_TOP_2, c_2) 
	= TOP_A_en(idJunctions4_TOP_1, c_1, false);
		

	(idJunctions4_TOP, a, b, c) 
	=  (idJunctions4_TOP_2, a_3, b_2, c_2);

	--add unused variables
	(idJunctions4_Junctions4) 
	= (idJunctions4_Junctions4_1);
	

	tel

	until true restart POINTJunctions4_TOP



	state POINT__TO__TOP_A_2:

	 var 	idJunctions4_TOP_2:int;
	a_2, a_3:int;
	b_2:int;
	c_2:int;
	let

		-- transition trace :
	--POINT__To__TOP_A_2
		-- condition Action : a+=1
		
		(a_2) 
	= POINT__To__TOP_A_2_Condition_Action(a_1);
		

		(a_3, b_2) 
	= POINT__To__TOP_A_2_Transition_Action(a_2, b_1);
		

		(idJunctions4_TOP_2, c_2) 
	= TOP_A_en(idJunctions4_TOP_1, c_1, false);
		

	(idJunctions4_TOP, a, b, c) 
	=  (idJunctions4_TOP_2, a_3, b_2, c_2);

	--add unused variables
	(idJunctions4_Junctions4) 
	= (idJunctions4_Junctions4_1);
	

	tel

	until true restart POINTJunctions4_TOP



	state TOP_A__TO__JUNCTIONS4_JUNCTIONS4JUNCTION703_1:

	 var 	idJunctions4_TOP_2, idJunctions4_TOP_3, idJunctions4_TOP_4, idJunctions4_TOP_5:int;
	a_2, a_3, a_4, a_5, a_6, a_7:int;
	b_2, b_3:int;
	c_2, c_3, c_4, c_5:int;
	let

		

-- transition trace :
	--TOP_A__To__Junction703_1, Junction703__To__TOP_B_1
		-- condition Action : a+=1000
		
		(a_2) 
	= TOP_A__To__Junctions4_Junctions4Junction703_1_Condition_Action(a_1);
		

		-- condition Action : a+=100000
		
		(a_3) 
	= 
		 if (( x mod 3=1 )) then 
		Junctions4_Junctions4Junction703__To__TOP_B_1_Condition_Action(a_2)
		 else (a_2);
		

		(c_2, idJunctions4_TOP_2) 
	= 
		 if (( x mod 3=1 )) then 
		TOP_A_ex(c_1, idJunctions4_TOP_1, false)
		 else (c_1, idJunctions4_TOP_1);
		

		(a_4, b_2) 
	= 
		 if (( x mod 3=1 )) then 
		Junctions4_Junctions4Junction703__To__TOP_B_1_Transition_Action(a_3, b_1)
		 else (a_3, b_1);
		

		(idJunctions4_TOP_3, c_3) 
	= 
		 if (( x mod 3=1 )) then 
		TOP_B_en(idJunctions4_TOP_2, c_2, false)
		 else (idJunctions4_TOP_2, c_2);
		


-- transition trace :
	--TOP_A__To__Junction703_1, Junction703__To__TOP_B_2
		-- condition Action : a+=1000
		
		(a_5) 
	= TOP_A__To__Junctions4_Junctions4Junction703_1_Condition_Action(a_1);
		

		-- condition Action : a+=10000
		
		(a_6) 
	= 
		 if (( x mod 3=0 )) then 
		Junctions4_Junctions4Junction703__To__TOP_B_2_Condition_Action(a_5)
		 else (a_5);
		

		(c_4, idJunctions4_TOP_4) 
	= 
		 if (( x mod 3=0 )) then 
		TOP_A_ex(c_3, idJunctions4_TOP_3, false)
		 else (c_3, idJunctions4_TOP_3);
		

		(a_7, b_3) 
	= 
		 if (( x mod 3=0 )) then 
		Junctions4_Junctions4Junction703__To__TOP_B_2_Transition_Action(a_6, b_2)
		 else (a_6, b_2);
		

		(idJunctions4_TOP_5, c_5) 
	= 
		 if (( x mod 3=0 )) then 
		TOP_B_en(idJunctions4_TOP_4, c_4, false)
		 else (idJunctions4_TOP_4, c_4);
		

	(idJunctions4_TOP, a, b, c) 
	= 
		 if (( x mod 3=1 )) then 
		(idJunctions4_TOP_3, a_4, b_2, c_3)
		 else
		 if (( x mod 3=0 )) then 
		(idJunctions4_TOP_5, a_7, b_3, c_5)
		 else (idJunctions4_TOP_3, a_5, b_2, c_3);

	--add unused variables
	(idJunctions4_Junctions4) 
	= (idJunctions4_Junctions4_1);
	

	tel

	until true restart POINTJunctions4_TOP



	state TOP_A__TO__JUNCTIONS4_JUNCTIONS4JUNCTION703_2:

	 var 	idJunctions4_TOP_2, idJunctions4_TOP_3, idJunctions4_TOP_4, idJunctions4_TOP_5:int;
	a_2, a_3, a_4, a_5, a_6, a_7:int;
	b_2, b_3:int;
	c_2, c_3, c_4, c_5:int;
	let

		

-- transition trace :
	--TOP_A__To__Junction703_2, Junction703__To__TOP_B_1
		-- condition Action : a+=100
		
		(a_2) 
	= TOP_A__To__Junctions4_Junctions4Junction703_2_Condition_Action(a_1);
		

		-- condition Action : a+=100000
		
		(a_3) 
	= 
		 if (( x mod 3=1 )) then 
		Junctions4_Junctions4Junction703__To__TOP_B_1_Condition_Action(a_2)
		 else (a_2);
		

		(c_2, idJunctions4_TOP_2) 
	= 
		 if (( x mod 3=1 )) then 
		TOP_A_ex(c_1, idJunctions4_TOP_1, false)
		 else (c_1, idJunctions4_TOP_1);
		

		(a_4, b_2) 
	= 
		 if (( x mod 3=1 )) then 
		Junctions4_Junctions4Junction703__To__TOP_B_1_Transition_Action(a_3, b_1)
		 else (a_3, b_1);
		

		(idJunctions4_TOP_3, c_3) 
	= 
		 if (( x mod 3=1 )) then 
		TOP_B_en(idJunctions4_TOP_2, c_2, false)
		 else (idJunctions4_TOP_2, c_2);
		


-- transition trace :
	--TOP_A__To__Junction703_2, Junction703__To__TOP_B_2
		-- condition Action : a+=100
		
		(a_5) 
	= TOP_A__To__Junctions4_Junctions4Junction703_2_Condition_Action(a_1);
		

		-- condition Action : a+=10000
		
		(a_6) 
	= 
		 if (( x mod 3=0 )) then 
		Junctions4_Junctions4Junction703__To__TOP_B_2_Condition_Action(a_5)
		 else (a_5);
		

		(c_4, idJunctions4_TOP_4) 
	= 
		 if (( x mod 3=0 )) then 
		TOP_A_ex(c_3, idJunctions4_TOP_3, false)
		 else (c_3, idJunctions4_TOP_3);
		

		(a_7, b_3) 
	= 
		 if (( x mod 3=0 )) then 
		Junctions4_Junctions4Junction703__To__TOP_B_2_Transition_Action(a_6, b_2)
		 else (a_6, b_2);
		

		(idJunctions4_TOP_5, c_5) 
	= 
		 if (( x mod 3=0 )) then 
		TOP_B_en(idJunctions4_TOP_4, c_4, false)
		 else (idJunctions4_TOP_4, c_4);
		

	(idJunctions4_TOP, a, b, c) 
	= 
		 if (( x mod 3=1 )) then 
		(idJunctions4_TOP_3, a_4, b_2, c_3)
		 else
		 if (( x mod 3=0 )) then 
		(idJunctions4_TOP_5, a_7, b_3, c_5)
		 else (idJunctions4_TOP_3, a_5, b_2, c_3);

	--add unused variables
	(idJunctions4_Junctions4) 
	= (idJunctions4_Junctions4_1);
	

	tel

	until true restart POINTJunctions4_TOP



	state TOP_B__TO__JUNCTIONS4_TOP_1:

	 var 	idJunctions4_TOP_2, idJunctions4_TOP_3, idJunctions4_TOP_4:int;
	a_2:int;
	b_2:int;
	c_2:int;
	idJunctions4_Junctions4_2:int;
	let

		-- transition trace :
	--TOP_B__To__Junctions4_TOP_1
		(idJunctions4_TOP_2) 
	= TOP_B_ex(idJunctions4_TOP_1, false);
		

		idJunctions4_TOP_3 
	= 0;
	
		(idJunctions4_TOP_4, idJunctions4_Junctions4_2, a_2, b_2, c_2) 
	= Junctions4_TOP_en(idJunctions4_TOP_3, idJunctions4_Junctions4_1, x, a_1, b_1, c_1, true);
		

	(idJunctions4_TOP, a, b, c, idJunctions4_Junctions4) 
	=  (idJunctions4_TOP_4, a_2, b_2, c_2, idJunctions4_Junctions4_2);


	tel

	until true restart POINTJunctions4_TOP



	state TOP_A_IDL:

	 	let

		

	(idJunctions4_TOP, a, b, c, idJunctions4_Junctions4) 
	= (idJunctions4_TOP_1, a_1, b_1, c_1, idJunctions4_Junctions4_1);
	

	tel

	until true restart POINTJunctions4_TOP



	state TOP_B_IDL:

	 var 	c_2:int;
	let

		
	(c_2) 
	= TOP_B_du(c_1);

		


	(idJunctions4_TOP, a, b, c, idJunctions4_Junctions4) 
	= (idJunctions4_TOP_1, a_1, b_1, c_2, idJunctions4_Junctions4_1);
	

	tel

	until true restart POINTJunctions4_TOP



tel


--***************************************************State :Junctions4_Junctions4 Automaton***************************************************

node Junctions4_Junctions4_node(idJunctions4_Junctions4_1:int;
	a_1:int;
	b_1:int;
	c_1:int;
	idJunctions4_TOP_1:int;
	x:int)

returns (idJunctions4_Junctions4:int;
	a:int;
	b:int;
	c:int;
	idJunctions4_TOP:int);


let

	 automaton junctions4_junctions4

	state POINTJunctions4_Junctions4:
	unless (idJunctions4_Junctions4_1=0) restart POINT__TO__JUNCTIONS4_TOP_1



	unless (idJunctions4_Junctions4_1=702) restart JUNCTIONS4_TOP_IDL

	let

		(idJunctions4_Junctions4, a, b, c, idJunctions4_TOP) 
	= (idJunctions4_Junctions4_1, a_1, b_1, c_1, idJunctions4_TOP_1);
	

	tel



	state POINT__TO__JUNCTIONS4_TOP_1:

	 var 	idJunctions4_Junctions4_2:int;
	a_2:int;
	b_2:int;
	c_2:int;
	idJunctions4_TOP_2:int;
	let

		-- transition trace :
	--POINT__To__Junctions4_TOP_1
		(idJunctions4_TOP_2, idJunctions4_Junctions4_2, a_2, b_2, c_2) 
	= Junctions4_TOP_en(idJunctions4_TOP_1, idJunctions4_Junctions4_1, x, a_1, b_1, c_1, false);
		

	(idJunctions4_Junctions4, a, b, c, idJunctions4_TOP) 
	=  (idJunctions4_Junctions4_2, a_2, b_2, c_2, idJunctions4_TOP_2);


	tel

	until true restart POINTJunctions4_Junctions4



	state JUNCTIONS4_TOP_IDL:

	 var 	idJunctions4_Junctions4_2:int;
	a_2:int;
	b_2:int;
	c_2:int;
	idJunctions4_TOP_2:int;
	let

		
	(idJunctions4_TOP_2, a_2, b_2, c_2, idJunctions4_Junctions4_2) 
	= Junctions4_TOP_node(idJunctions4_TOP_1, x, a_1, b_1, c_1, idJunctions4_Junctions4_1);

		


	(idJunctions4_Junctions4, a, b, c, idJunctions4_TOP) 
	= (idJunctions4_Junctions4_2, a_2, b_2, c_2, idJunctions4_TOP_2);
	

	tel

	until true restart POINTJunctions4_Junctions4



tel


--***************************************************State :Junctions4_Junctions4 Automaton***************************************************

node Junctions4_Junctions4(x:int)

returns (a:int;
	b:int;
	c:int);


var a_1: int;

	b_1: int;

	c_1: int;

	idJunctions4_Junctions4, idJunctions4_Junctions4_1: int;

	idJunctions4_TOP, idJunctions4_TOP_1: int;

	let

	a_1 = 111111 -> pre a;

	b_1 = 111111 -> pre b;

	c_1 = 111111 -> pre c;

	idJunctions4_Junctions4_1 = 0 -> pre idJunctions4_Junctions4;

	idJunctions4_TOP_1 = 0 -> pre idJunctions4_TOP;

	



	(idJunctions4_Junctions4, a, b, c, idJunctions4_TOP)
	 = Junctions4_Junctions4_node(idJunctions4_Junctions4_1, a_1, b_1, c_1, idJunctions4_TOP_1, x);


--unused outputs
	

tel



node Junctions4 (x_1_1 : int)
returns (a_1_1 : int;
	b_2_1 : int;
	c_3_1 : int); 
var
	Junctions4_1_1 : int; Junctions4_2_1 : int; Junctions4_3_1 : int;
let 
	(Junctions4_1_1, Junctions4_2_1, Junctions4_3_1) =  Junctions4_Junctions4(x_1_1);
	a_1_1 = Junctions4_1_1;
	b_2_1 = Junctions4_2_1;
	c_3_1 = Junctions4_3_1;
tel

