-- This file has been generated by cocoSim


-- System nodes










-- Entry action for state :SetResetWaitOut_Wait
node SetResetWaitOut_Wait_en(idSetResetWaitOut_SetResetWaitOut_1:int;
	suspended_1:int;
	isInner:bool)

returns (idSetResetWaitOut_SetResetWaitOut:int;
	suspended:int);


var 	idSetResetWaitOut_SetResetWaitOut_2:int;
	suspended_2:int;


let



	-- set state as active 
	idSetResetWaitOut_SetResetWaitOut_2 
	= 581;
	

	suspended_2 
	= if (not isInner) then 1
	 else suspended_1;
	

	(idSetResetWaitOut_SetResetWaitOut, suspended) 
	= (idSetResetWaitOut_SetResetWaitOut_2, suspended_2);
	

tel





-- Exit action for state :SetResetWaitOut_Wait
node SetResetWaitOut_Wait_ex(suspended_1:int;
	idSetResetWaitOut_SetResetWaitOut_1:int;
	isInner:bool)

returns (suspended:int;
	idSetResetWaitOut_SetResetWaitOut:int);


var 	suspended_2:int;
	idSetResetWaitOut_SetResetWaitOut_2:int;


let



	suspended_2 
	= if (not isInner) then 0
	 else suspended_1;
	

	-- set state as inactive 
	idSetResetWaitOut_SetResetWaitOut_2
	 = if (not isInner) then 0 else idSetResetWaitOut_SetResetWaitOut_1;


	(suspended, idSetResetWaitOut_SetResetWaitOut) 
	= (suspended_2, idSetResetWaitOut_SetResetWaitOut_1);
	

tel






-- Entry action for state :SetResetWaitOut_Off
node SetResetWaitOut_Off_en(idSetResetWaitOut_SetResetWaitOut_1:int;
	on_off_1:int;
	isInner:bool)

returns (idSetResetWaitOut_SetResetWaitOut:int;
	on_off:int);


var 	idSetResetWaitOut_SetResetWaitOut_2:int;
	on_off_2:int;


let



	-- set state as active 
	idSetResetWaitOut_SetResetWaitOut_2 
	= 582;
	

	on_off_2 
	= if (not isInner) then 0
	 else on_off_1;
	

	(idSetResetWaitOut_SetResetWaitOut, on_off) 
	= (idSetResetWaitOut_SetResetWaitOut_2, on_off_2);
	

tel





-- Exit action for state :SetResetWaitOut_Off
node SetResetWaitOut_Off_ex(idSetResetWaitOut_SetResetWaitOut_1:int;
	isInner:bool)

returns (idSetResetWaitOut_SetResetWaitOut:int);


var 	idSetResetWaitOut_SetResetWaitOut_2:int;


let



	-- set state as inactive 
	idSetResetWaitOut_SetResetWaitOut_2
	 = if (not isInner) then 0 else idSetResetWaitOut_SetResetWaitOut_1;


	(idSetResetWaitOut_SetResetWaitOut) 
	= (idSetResetWaitOut_SetResetWaitOut_1);
	

tel






-- Entry action for state :SetResetWaitOut_On
node SetResetWaitOut_On_en(idSetResetWaitOut_SetResetWaitOut_1:int;
	on_off_1:int;
	isInner:bool)

returns (idSetResetWaitOut_SetResetWaitOut:int;
	on_off:int);


var 	idSetResetWaitOut_SetResetWaitOut_2:int;
	on_off_2:int;


let



	-- set state as active 
	idSetResetWaitOut_SetResetWaitOut_2 
	= 583;
	

	on_off_2 
	= if (not isInner) then 1
	 else on_off_1;
	

	(idSetResetWaitOut_SetResetWaitOut, on_off) 
	= (idSetResetWaitOut_SetResetWaitOut_2, on_off_2);
	

tel





-- Exit action for state :SetResetWaitOut_On
node SetResetWaitOut_On_ex(idSetResetWaitOut_SetResetWaitOut_1:int;
	isInner:bool)

returns (idSetResetWaitOut_SetResetWaitOut:int);


var 	idSetResetWaitOut_SetResetWaitOut_2:int;


let



	-- set state as inactive 
	idSetResetWaitOut_SetResetWaitOut_2
	 = if (not isInner) then 0 else idSetResetWaitOut_SetResetWaitOut_1;


	(idSetResetWaitOut_SetResetWaitOut) 
	= (idSetResetWaitOut_SetResetWaitOut_1);
	

tel


--***************************************************State :SetResetWaitOut_SetResetWaitOut Automaton***************************************************

node SetResetWaitOut_SetResetWaitOut_node(idSetResetWaitOut_SetResetWaitOut_1:int;
	on_off_1:int;
	Clear:bool;
	suspended_1:int;
	Set:bool;
	Suspend:bool;
	Reset:bool)

returns (idSetResetWaitOut_SetResetWaitOut:int;
	on_off:int;
	suspended:int);


let

	 automaton setresetwaitout_setresetwaitout

	state POINTSetResetWaitOut_SetResetWaitOut:
	unless (idSetResetWaitOut_SetResetWaitOut_1=0) restart POINT__TO__SETRESETWAITOUT_OFF_1



	unless (idSetResetWaitOut_SetResetWaitOut_1=581) and Clear restart SETRESETWAITOUT_WAIT__TO__SETRESETWAITOUT_OFF_1



	unless (idSetResetWaitOut_SetResetWaitOut_1=582) and Set restart SETRESETWAITOUT_OFF__TO__SETRESETWAITOUT_ON_1



	unless (idSetResetWaitOut_SetResetWaitOut_1=582) and Suspend restart SETRESETWAITOUT_OFF__TO__SETRESETWAITOUT_WAIT_2



	unless (idSetResetWaitOut_SetResetWaitOut_1=583) and Suspend restart SETRESETWAITOUT_ON__TO__SETRESETWAITOUT_WAIT_1



	unless (idSetResetWaitOut_SetResetWaitOut_1=583) and Reset restart SETRESETWAITOUT_ON__TO__SETRESETWAITOUT_OFF_2



	unless (idSetResetWaitOut_SetResetWaitOut_1=581) restart SETRESETWAITOUT_WAIT_IDL

	unless (idSetResetWaitOut_SetResetWaitOut_1=582) restart SETRESETWAITOUT_OFF_IDL

	unless (idSetResetWaitOut_SetResetWaitOut_1=583) restart SETRESETWAITOUT_ON_IDL

	let

		(idSetResetWaitOut_SetResetWaitOut, on_off, suspended) 
	= (idSetResetWaitOut_SetResetWaitOut_1, on_off_1, suspended_1);
	

	tel



	state POINT__TO__SETRESETWAITOUT_OFF_1:

	 var 	idSetResetWaitOut_SetResetWaitOut_2:int;
	on_off_2:int;
	let

		-- transition trace :
	--POINT__To__SetResetWaitOut_Off_1
		(idSetResetWaitOut_SetResetWaitOut_2, on_off_2) 
	= SetResetWaitOut_Off_en(idSetResetWaitOut_SetResetWaitOut_1, on_off_1, false);
		

	(idSetResetWaitOut_SetResetWaitOut, on_off) 
	=  (idSetResetWaitOut_SetResetWaitOut_2, on_off_2);

	--add unused variables
	(suspended) 
	= (suspended_1);
	

	tel

	until true restart POINTSetResetWaitOut_SetResetWaitOut



	state SETRESETWAITOUT_WAIT__TO__SETRESETWAITOUT_OFF_1:

	 var 	idSetResetWaitOut_SetResetWaitOut_2, idSetResetWaitOut_SetResetWaitOut_3:int;
	on_off_2:int;
	suspended_2:int;
	let

		-- transition trace :
	--SetResetWaitOut_Wait__To__SetResetWaitOut_Off_1
		(suspended_2, idSetResetWaitOut_SetResetWaitOut_2) 
	= SetResetWaitOut_Wait_ex(suspended_1, idSetResetWaitOut_SetResetWaitOut_1, false);
		

		(idSetResetWaitOut_SetResetWaitOut_3, on_off_2) 
	= SetResetWaitOut_Off_en(idSetResetWaitOut_SetResetWaitOut_2, on_off_1, false);
		

	(idSetResetWaitOut_SetResetWaitOut, on_off, suspended) 
	=  (idSetResetWaitOut_SetResetWaitOut_3, on_off_2, suspended_2);


	tel

	until true restart POINTSetResetWaitOut_SetResetWaitOut



	state SETRESETWAITOUT_OFF__TO__SETRESETWAITOUT_ON_1:

	 var 	idSetResetWaitOut_SetResetWaitOut_2, idSetResetWaitOut_SetResetWaitOut_3:int;
	on_off_2:int;
	let

		-- transition trace :
	--SetResetWaitOut_Off__To__SetResetWaitOut_On_1
		(idSetResetWaitOut_SetResetWaitOut_2) 
	= SetResetWaitOut_Off_ex(idSetResetWaitOut_SetResetWaitOut_1, false);
		

		(idSetResetWaitOut_SetResetWaitOut_3, on_off_2) 
	= SetResetWaitOut_On_en(idSetResetWaitOut_SetResetWaitOut_2, on_off_1, false);
		

	(idSetResetWaitOut_SetResetWaitOut, on_off, suspended) 
	=  (idSetResetWaitOut_SetResetWaitOut_3, on_off_2, suspended_1);


	tel

	until true restart POINTSetResetWaitOut_SetResetWaitOut



	state SETRESETWAITOUT_OFF__TO__SETRESETWAITOUT_WAIT_2:

	 var 	idSetResetWaitOut_SetResetWaitOut_2, idSetResetWaitOut_SetResetWaitOut_3:int;
	suspended_2:int;
	let

		-- transition trace :
	--SetResetWaitOut_Off__To__SetResetWaitOut_Wait_2
		(idSetResetWaitOut_SetResetWaitOut_2) 
	= SetResetWaitOut_Off_ex(idSetResetWaitOut_SetResetWaitOut_1, false);
		

		(idSetResetWaitOut_SetResetWaitOut_3, suspended_2) 
	= SetResetWaitOut_Wait_en(idSetResetWaitOut_SetResetWaitOut_2, suspended_1, false);
		

	(idSetResetWaitOut_SetResetWaitOut, on_off, suspended) 
	=  (idSetResetWaitOut_SetResetWaitOut_3, on_off_1, suspended_2);


	tel

	until true restart POINTSetResetWaitOut_SetResetWaitOut



	state SETRESETWAITOUT_ON__TO__SETRESETWAITOUT_WAIT_1:

	 var 	idSetResetWaitOut_SetResetWaitOut_2, idSetResetWaitOut_SetResetWaitOut_3:int;
	suspended_2:int;
	let

		-- transition trace :
	--SetResetWaitOut_On__To__SetResetWaitOut_Wait_1
		(idSetResetWaitOut_SetResetWaitOut_2) 
	= SetResetWaitOut_On_ex(idSetResetWaitOut_SetResetWaitOut_1, false);
		

		(idSetResetWaitOut_SetResetWaitOut_3, suspended_2) 
	= SetResetWaitOut_Wait_en(idSetResetWaitOut_SetResetWaitOut_2, suspended_1, false);
		

	(idSetResetWaitOut_SetResetWaitOut, on_off, suspended) 
	=  (idSetResetWaitOut_SetResetWaitOut_3, on_off_1, suspended_2);


	tel

	until true restart POINTSetResetWaitOut_SetResetWaitOut



	state SETRESETWAITOUT_ON__TO__SETRESETWAITOUT_OFF_2:

	 var 	idSetResetWaitOut_SetResetWaitOut_2, idSetResetWaitOut_SetResetWaitOut_3:int;
	on_off_2:int;
	let

		-- transition trace :
	--SetResetWaitOut_On__To__SetResetWaitOut_Off_2
		(idSetResetWaitOut_SetResetWaitOut_2) 
	= SetResetWaitOut_On_ex(idSetResetWaitOut_SetResetWaitOut_1, false);
		

		(idSetResetWaitOut_SetResetWaitOut_3, on_off_2) 
	= SetResetWaitOut_Off_en(idSetResetWaitOut_SetResetWaitOut_2, on_off_1, false);
		

	(idSetResetWaitOut_SetResetWaitOut, on_off, suspended) 
	=  (idSetResetWaitOut_SetResetWaitOut_3, on_off_2, suspended_1);


	tel

	until true restart POINTSetResetWaitOut_SetResetWaitOut



	state SETRESETWAITOUT_WAIT_IDL:

	 	let

		

	(idSetResetWaitOut_SetResetWaitOut, on_off, suspended) 
	= (idSetResetWaitOut_SetResetWaitOut_1, on_off_1, suspended_1);
	

	tel

	until true restart POINTSetResetWaitOut_SetResetWaitOut



	state SETRESETWAITOUT_OFF_IDL:

	 	let

		

	(idSetResetWaitOut_SetResetWaitOut, on_off, suspended) 
	= (idSetResetWaitOut_SetResetWaitOut_1, on_off_1, suspended_1);
	

	tel

	until true restart POINTSetResetWaitOut_SetResetWaitOut



	state SETRESETWAITOUT_ON_IDL:

	 	let

		

	(idSetResetWaitOut_SetResetWaitOut, on_off, suspended) 
	= (idSetResetWaitOut_SetResetWaitOut_1, on_off_1, suspended_1);
	

	tel

	until true restart POINTSetResetWaitOut_SetResetWaitOut



tel


--***************************************************State :SetResetWaitOut_SetResetWaitOut Automaton***************************************************

node SetResetWaitOut_SetResetWaitOut(off_val:int;
	on_val:int;
	Clear:bool;
	Reset:bool;
	Set:bool;
	Suspend:bool)

returns (on_off:int;
	suspended:int);


var on_off_1: int;

	suspended_1: int;

	idSetResetWaitOut_SetResetWaitOut, idSetResetWaitOut_SetResetWaitOut_1: int;

		idSetResetWaitOut_SetResetWaitOut_2, idSetResetWaitOut_SetResetWaitOut_3, idSetResetWaitOut_SetResetWaitOut_4:int;
	on_off_2, on_off_3, on_off_4:int;
	suspended_2, suspended_3, suspended_4:int;
let

	on_off_1 = 0 -> pre on_off;

	suspended_1 = 0 -> pre suspended;

	idSetResetWaitOut_SetResetWaitOut_1 = 0 -> pre idSetResetWaitOut_SetResetWaitOut;

	



	(idSetResetWaitOut_SetResetWaitOut_2, on_off_2, suspended_2)
	 = 

	 if Clear then SetResetWaitOut_SetResetWaitOut_node(idSetResetWaitOut_SetResetWaitOut_1, on_off_1, Clear, suspended_1, false, false, false)

	 else (idSetResetWaitOut_SetResetWaitOut_1, on_off_1, suspended_1);

	



	(idSetResetWaitOut_SetResetWaitOut_3, on_off_3, suspended_3)
	 = 

	 if Reset then SetResetWaitOut_SetResetWaitOut_node(idSetResetWaitOut_SetResetWaitOut_2, on_off_2, false, suspended_2, false, false, Reset)

	 else (idSetResetWaitOut_SetResetWaitOut_2, on_off_2, suspended_2);

	



	(idSetResetWaitOut_SetResetWaitOut_4, on_off_4, suspended_4)
	 = 

	 if Set then SetResetWaitOut_SetResetWaitOut_node(idSetResetWaitOut_SetResetWaitOut_3, on_off_3, false, suspended_3, Set, false, false)

	 else (idSetResetWaitOut_SetResetWaitOut_3, on_off_3, suspended_3);

	



	(idSetResetWaitOut_SetResetWaitOut, on_off, suspended)
	 = 

	 if Suspend then SetResetWaitOut_SetResetWaitOut_node(idSetResetWaitOut_SetResetWaitOut_4, on_off_4, false, suspended_4, false, Suspend, false)

	 else (idSetResetWaitOut_SetResetWaitOut_4, on_off_4, suspended_4);

	


--unused outputs
	

tel



node SetResetWaitOut (clear_1_1 : real; reset_1_1 : real; set_1_1 : real; suspend_1_1 : real; off_val_1_1 : int; on_val_1_1 : int)
returns (on_off_1_1 : int;
	suspended_2_1 : int); 
var
	Mux_1_1 : real; Mux_1_2 : real; Mux_1_3 : real; Mux_1_4 : real;
	SetResetWaitOut_1_1 : int; SetResetWaitOut_2_1 : int;
	Mux_1_1_event: bool;
	Mux_1_2_event: bool;
	Mux_1_3_event: bool;
	Mux_1_4_event: bool;
let 
	Mux_1_1 = clear_1_1 ;
	Mux_1_2 = reset_1_1 ;
	Mux_1_3 = set_1_1 ;
	Mux_1_4 = suspend_1_1 ;
	Mux_1_1_event = false -> ((pre(Mux_1_1) > 0.0 and Mux_1_1 <= 0.0) or (pre(Mux_1_1) <= 0.0 and Mux_1_1 > 0.0));
	Mux_1_2_event = false -> ((pre(Mux_1_2) > 0.0 and Mux_1_2 <= 0.0) or (pre(Mux_1_2) <= 0.0 and Mux_1_2 > 0.0));
	Mux_1_3_event = false -> ((pre(Mux_1_3) > 0.0 and Mux_1_3 <= 0.0) or (pre(Mux_1_3) <= 0.0 and Mux_1_3 > 0.0));
	Mux_1_4_event = false -> ((pre(Mux_1_4) > 0.0 and Mux_1_4 <= 0.0) or (pre(Mux_1_4) <= 0.0 and Mux_1_4 > 0.0));
	(SetResetWaitOut_1_1, SetResetWaitOut_2_1) =  SetResetWaitOut_SetResetWaitOut(off_val_1_1, on_val_1_1, Mux_1_1_event, Mux_1_2_event, Mux_1_3_event, Mux_1_4_event);
	on_off_1_1 = SetResetWaitOut_1_1;
	suspended_2_1 = SetResetWaitOut_2_1;
tel

