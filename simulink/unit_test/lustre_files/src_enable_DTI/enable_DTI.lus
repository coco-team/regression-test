-- This file has been generated by cocoSim


-- System nodes
node enable_DTI_EnabledSubsystem4 (In1_1_1 : real; enable_DTI_EnabledSubsystem4_Enable_1_1: bool; enable_DTI_EnabledSubsystem4_enable_reset: bool)
returns (Out1_1_1 : real;
	Out2_2_1 : real;
	Out3_3_1 : real;
	Out4_4_1 : real); 
var
	Enable_1_1 : bool;
	Add_1_1 : real;
	DiscreteTimeIntegrator_1_1 : real;
	DiscreteTimeIntegrator1_1_1 : real;
	DiscreteTimeIntegrator2_1_1 : real;
	DiscreteTimeIntegrator3_1_1 : real;
	DiscreteTimeIntegrator1_Reset_Trigger1_1: bool;
	DiscreteTimeIntegrator3_Reset_Trigger1_1: bool;
let 
	Enable_1_1 = enable_DTI_EnabledSubsystem4_Enable_1_1;
	Add_1_1 = (if Enable_1_1 then 1.0 else 0.0) + In1_1_1;
	DiscreteTimeIntegrator_1_1 = if enable_DTI_EnabledSubsystem4_enable_reset then 0.0000000000 else 0.0000000000 -> (1.0000000000 * 1.0000000000)*(pre Add_1_1) + pre DiscreteTimeIntegrator_1_1;
	DiscreteTimeIntegrator1_Reset_Trigger1_1 = false -> (pre(Enable_1_1) and not(Enable_1_1));
	DiscreteTimeIntegrator1_1_1 = if enable_DTI_EnabledSubsystem4_enable_reset then 0.0000000000 else 0.0000000000 -> if DiscreteTimeIntegrator1_Reset_Trigger1_1 then 0.0000000000 else (1.0000000000 * 1.0000000000)*(pre Add_1_1) + pre DiscreteTimeIntegrator1_1_1;
	DiscreteTimeIntegrator2_1_1 = if enable_DTI_EnabledSubsystem4_enable_reset then In1_1_1 else In1_1_1 -> (1.0000000000 * 1.0000000000)*(pre Add_1_1) + pre DiscreteTimeIntegrator2_1_1;
	DiscreteTimeIntegrator3_Reset_Trigger1_1 = false -> Enable_1_1 or (not(pre(Enable_1_1) = Enable_1_1));
	DiscreteTimeIntegrator3_1_1 = if enable_DTI_EnabledSubsystem4_enable_reset then In1_1_1 else In1_1_1 -> if DiscreteTimeIntegrator3_Reset_Trigger1_1 then In1_1_1 else (1.0000000000 * 1.0000000000)*(pre Add_1_1) + pre DiscreteTimeIntegrator3_1_1;
	Out1_1_1 = DiscreteTimeIntegrator_1_1;
	Out2_2_1 = DiscreteTimeIntegrator1_1_1;
	Out3_3_1 = DiscreteTimeIntegrator2_1_1;
	Out4_4_1 = DiscreteTimeIntegrator3_1_1;
tel

node enable_DTI (In1_1_1 : bool; In2_1_1 : real)
returns (Out7_1_1 : real;
	Out8_2_1 : real;
	Out9_3_1 : real;
	Out10_4_1 : real); 
var
	EnabledSubsystem4_1_1 : real; EnabledSubsystem4_2_1 : real; EnabledSubsystem4_3_1 : real; EnabledSubsystem4_4_1 : real;
	i_virtual_local : real;
	EnabledSubsystem4_reset_cond: bool;
let 
	EnabledSubsystem4_reset_cond = (In1_1_1) and not pre ((In1_1_1));
	(EnabledSubsystem4_1_1, EnabledSubsystem4_2_1, EnabledSubsystem4_3_1, EnabledSubsystem4_4_1) = if (In1_1_1) then enable_DTI_EnabledSubsystem4(In2_1_1, In1_1_1, EnabledSubsystem4_reset_cond) else (pre EnabledSubsystem4_1_1, pre EnabledSubsystem4_2_1, pre EnabledSubsystem4_3_1, pre EnabledSubsystem4_4_1);
	Out7_1_1 = EnabledSubsystem4_1_1;
	Out8_2_1 = EnabledSubsystem4_2_1;
	Out9_3_1 = EnabledSubsystem4_3_1;
	Out10_4_1 = EnabledSubsystem4_4_1;
	i_virtual_local= 0.0 -> 1.0;
tel

