-- This file has been generated by cocoSim


-- System nodes




node Flowchart6_Flowchart6Junction647__To__Flowchart6_Flowchart6Junction648_1_Condition_Action(x_1:int)

returns (x:int);


var 	x_2:int;


let



	x_2 
	=  x_1  + 1;
	

	(x) 
	= (x_2);
	

tel








-- Entry action for state :Flowchart6_A
node Flowchart6_A_en(idFlowchart6_A_1:int;
	idFlowchart6_Flowchart6_1:int;
	x_1:int;
	isInner:bool)

returns (idFlowchart6_A:int;
	idFlowchart6_Flowchart6:int;
	x:int);


var 	idFlowchart6_A_2, idFlowchart6_A_3, idFlowchart6_A_4:int;
	idFlowchart6_Flowchart6_2, idFlowchart6_Flowchart6_3, idFlowchart6_Flowchart6_4:int;
	x_2, x_3, x_4:int;


let



	-- set state as active 
	idFlowchart6_Flowchart6_2 
	= 646;
	

	


-- transition trace :
	--POINT__To__Junction647_1, Junction647__To__Junction648_1
		-- condition Action : x++;
		
		(x_2) 
	= Flowchart6_Flowchart6Junction647__To__Flowchart6_Flowchart6Junction648_1_Condition_Action(x_1);
		

	(idFlowchart6_A_2, idFlowchart6_Flowchart6_3, x_3) 
	= 

	if ( idFlowchart6_A_1 = 0) then

	 (idFlowchart6_A_1, idFlowchart6_Flowchart6_2, x_2)

	 else(idFlowchart6_A_1, idFlowchart6_Flowchart6_2, x_1);

	

	(idFlowchart6_A_3, idFlowchart6_Flowchart6_4, x_4) 
	= 
		 if ( idFlowchart6_A_1 = 0) then 
		(idFlowchart6_A_2, idFlowchart6_Flowchart6_3, x_3)
		 else (idFlowchart6_A_1, idFlowchart6_Flowchart6_2, x_1);
-- case of state without states but contains transitions 
	idFlowchart6_A_4 
	= -1;
	

	(idFlowchart6_A, idFlowchart6_Flowchart6, x) 
	= (idFlowchart6_A_4, idFlowchart6_Flowchart6_4, x_4);
	

tel





-- Exit action for state :Flowchart6_A
node Flowchart6_A_ex(idFlowchart6_Flowchart6_1:int;
	isInner:bool)

returns (idFlowchart6_Flowchart6:int);


var 	idFlowchart6_Flowchart6_2:int;


let



	-- set state as inactive 
	idFlowchart6_Flowchart6_2
	 = if (not isInner) then 0 else idFlowchart6_Flowchart6_1;


	(idFlowchart6_Flowchart6) 
	= (idFlowchart6_Flowchart6_1);
	

tel


--***************************************************State :Flowchart6_A Automaton***************************************************

node Flowchart6_A_node(idFlowchart6_A_1:int;
	x_1:int)

returns (idFlowchart6_A:int;
	x:int);


let

	 automaton flowchart6_a

	state POINTFlowchart6_A:
	unless (idFlowchart6_A_1=0) restart POINT__TO__FLOWCHART6_FLOWCHART6JUNCTION647_1



	unless true restart FLOWCHART6_A__TO__FLOWCHART6_FLOWCHART6JUNCTION647_1



	let

		(idFlowchart6_A, x) 
	= (idFlowchart6_A_1, x_1);
	

	tel



	state POINT__TO__FLOWCHART6_FLOWCHART6JUNCTION647_1:

	 var 	x_2:int;
	let

		

-- transition trace :
	--POINT__To__Junction647_1, Junction647__To__Junction648_1
		-- condition Action : x++;
		
		(x_2) 
	= Flowchart6_Flowchart6Junction647__To__Flowchart6_Flowchart6Junction648_1_Condition_Action(x_1);
		

	(idFlowchart6_A, x) 
	=  (idFlowchart6_A_1, x_2);


	tel

	until true restart POINTFlowchart6_A



	state FLOWCHART6_A__TO__FLOWCHART6_FLOWCHART6JUNCTION647_1:

	 var 	x_2:int;
	let

		

-- transition trace :
	--Flowchart6_A__To__Junction647_1, Junction647__To__Junction648_1
		-- condition Action : x++;
		
		(x_2) 
	= Flowchart6_Flowchart6Junction647__To__Flowchart6_Flowchart6Junction648_1_Condition_Action(x_1);
		

	(idFlowchart6_A, x) 
	=  (idFlowchart6_A_1, x_2);


	tel

	until true restart POINTFlowchart6_A



tel


--***************************************************State :Flowchart6_Flowchart6 Automaton***************************************************

node Flowchart6_Flowchart6_node(idFlowchart6_Flowchart6_1:int;
	idFlowchart6_A_1:int;
	x_1:int)

returns (idFlowchart6_Flowchart6:int;
	idFlowchart6_A:int;
	x:int);


let

	 automaton flowchart6_flowchart6

	state POINTFlowchart6_Flowchart6:
	unless (idFlowchart6_Flowchart6_1=0) restart POINT__TO__FLOWCHART6_A_1



	unless (idFlowchart6_Flowchart6_1=646) restart FLOWCHART6_A_IDL

	let

		(idFlowchart6_Flowchart6, idFlowchart6_A, x) 
	= (idFlowchart6_Flowchart6_1, idFlowchart6_A_1, x_1);
	

	tel



	state POINT__TO__FLOWCHART6_A_1:

	 var 	idFlowchart6_Flowchart6_2:int;
	idFlowchart6_A_2:int;
	x_2:int;
	let

		-- transition trace :
	--POINT__To__Flowchart6_A_1
		(idFlowchart6_A_2, idFlowchart6_Flowchart6_2, x_2) 
	= Flowchart6_A_en(idFlowchart6_A_1, idFlowchart6_Flowchart6_1, x_1, false);
		

	(idFlowchart6_Flowchart6, idFlowchart6_A, x) 
	=  (idFlowchart6_Flowchart6_2, idFlowchart6_A_2, x_2);


	tel

	until true restart POINTFlowchart6_Flowchart6



	state FLOWCHART6_A_IDL:

	 var 	idFlowchart6_A_2:int;
	x_2:int;
	let

		
	(idFlowchart6_A_2, x_2) 
	= Flowchart6_A_node(idFlowchart6_A_1, x_1);

		


	(idFlowchart6_Flowchart6, idFlowchart6_A, x) 
	= (idFlowchart6_Flowchart6_1, idFlowchart6_A_2, x_2);
	

	tel

	until true restart POINTFlowchart6_Flowchart6



tel


--***************************************************State :Flowchart6_Flowchart6 Automaton***************************************************

node Flowchart6_Flowchart6(noInput :bool)

returns (x:int);


var x_1: int;

	idFlowchart6_Flowchart6, idFlowchart6_Flowchart6_1: int;

	idFlowchart6_A, idFlowchart6_A_1: int;

	let

	x_1 = 0 -> pre x;

	idFlowchart6_Flowchart6_1 = 0 -> pre idFlowchart6_Flowchart6;

	idFlowchart6_A_1 = 0 -> pre idFlowchart6_A;

	



	(idFlowchart6_Flowchart6, idFlowchart6_A, x)
	 = Flowchart6_Flowchart6_node(idFlowchart6_Flowchart6_1, idFlowchart6_A_1, x_1);


--unused outputs
	

tel



node Flowchart6 (i_virtual : real)
returns (Out1_1_1 : int); 
var
	Flowchart6_1_1 : int;
let 
	Flowchart6_1_1 =  Flowchart6_Flowchart6(true);
	Out1_1_1 = Flowchart6_1_1;
tel

