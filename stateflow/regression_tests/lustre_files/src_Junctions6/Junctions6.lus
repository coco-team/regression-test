-- This file has been generated by cocoSim


-- System nodes




node Junctions6_Junctions6Junction1621__To__TOP_D_1_Condition_Action(y_1:int)

returns (y:int);


var 	y_2:int;


let



	y_2 
	=  y_1 +100000;
	

	(y) 
	= (y_2);
	

tel






node TOP_B__To__Junctions6_Junctions6Junction1621_1_Condition_Action(y_1:int)

returns (y:int);


var 	y_2:int;


let



	y_2 
	=  y_1 +1000;
	

	(y) 
	= (y_2);
	

tel








node Junctions6_Junctions6Junction1621__To__TOP_C_2_Condition_Action(y_1:int)

returns (y:int);


var 	y_2:int;


let



	y_2 
	=  y_1 +10000;
	

	(y) 
	= (y_2);
	

tel






node POINT__To__TOP_A_1_Condition_Action(y_1:int)

returns (y:int);


var 	y_2:int;


let



	y_2 
	=  y_1 +1;
	

	(y) 
	= (y_2);
	

tel







node TOP_A__To__Junctions6_Junctions6Junction1621_1_Condition_Action(y_1:int)

returns (y:int);


var 	y_2:int;


let



	y_2 
	=  y_1 +100;
	

	(y) 
	= (y_2);
	

tel






node POINT__To__TOP_B_2_Condition_Action(y_1:int)

returns (y:int);


var 	y_2:int;


let



	y_2 
	=  y_1 +10;
	

	(y) 
	= (y_2);
	

tel






-- Entry action for state :TOP_D
node TOP_D_en(idJunctions6_TOP_1:int;
	isInner:bool)

returns (idJunctions6_TOP:int);


var 	idJunctions6_TOP_2:int;


let



	-- set state as active 
	idJunctions6_TOP_2 
	= 1619;
	

	(idJunctions6_TOP) 
	= (idJunctions6_TOP_2);
	

tel





-- Exit action for state :TOP_D
node TOP_D_ex(idJunctions6_TOP_1:int;
	isInner:bool)

returns (idJunctions6_TOP:int);


var 	idJunctions6_TOP_2:int;


let



	-- set state as inactive 
	idJunctions6_TOP_2
	 = if (not isInner) then 0 else idJunctions6_TOP_1;


	(idJunctions6_TOP) 
	= (idJunctions6_TOP_1);
	

tel






-- Entry action for state :TOP_B
node TOP_B_en(idJunctions6_TOP_1:int;
	isInner:bool)

returns (idJunctions6_TOP:int);


var 	idJunctions6_TOP_2:int;


let



	-- set state as active 
	idJunctions6_TOP_2 
	= 1617;
	

	(idJunctions6_TOP) 
	= (idJunctions6_TOP_2);
	

tel





-- Exit action for state :TOP_B
node TOP_B_ex(idJunctions6_TOP_1:int;
	isInner:bool)

returns (idJunctions6_TOP:int);


var 	idJunctions6_TOP_2:int;


let



	-- set state as inactive 
	idJunctions6_TOP_2
	 = if (not isInner) then 0 else idJunctions6_TOP_1;


	(idJunctions6_TOP) 
	= (idJunctions6_TOP_1);
	

tel






-- Entry action for state :TOP_A
node TOP_A_en(idJunctions6_TOP_1:int;
	isInner:bool)

returns (idJunctions6_TOP:int);


var 	idJunctions6_TOP_2:int;


let



	-- set state as active 
	idJunctions6_TOP_2 
	= 1616;
	

	(idJunctions6_TOP) 
	= (idJunctions6_TOP_2);
	

tel





-- Exit action for state :TOP_A
node TOP_A_ex(idJunctions6_TOP_1:int;
	isInner:bool)

returns (idJunctions6_TOP:int);


var 	idJunctions6_TOP_2:int;


let



	-- set state as inactive 
	idJunctions6_TOP_2
	 = if (not isInner) then 0 else idJunctions6_TOP_1;


	(idJunctions6_TOP) 
	= (idJunctions6_TOP_1);
	

tel






-- Entry action for state :TOP_C
node TOP_C_en(idJunctions6_TOP_1:int;
	isInner:bool)

returns (idJunctions6_TOP:int);


var 	idJunctions6_TOP_2:int;


let



	-- set state as active 
	idJunctions6_TOP_2 
	= 1618;
	

	(idJunctions6_TOP) 
	= (idJunctions6_TOP_2);
	

tel





-- Exit action for state :TOP_C
node TOP_C_ex(idJunctions6_TOP_1:int;
	isInner:bool)

returns (idJunctions6_TOP:int);


var 	idJunctions6_TOP_2:int;


let



	-- set state as inactive 
	idJunctions6_TOP_2
	 = if (not isInner) then 0 else idJunctions6_TOP_1;


	(idJunctions6_TOP) 
	= (idJunctions6_TOP_1);
	

tel






-- Entry action for state :Junctions6_TOP
node Junctions6_TOP_en(idJunctions6_TOP_1:int;
	idJunctions6_Junctions6_1:int;
	x:int;
	y_1:int;
	isInner:bool)

returns (idJunctions6_TOP:int;
	idJunctions6_Junctions6:int;
	y:int);


var 	idJunctions6_TOP_2, idJunctions6_TOP_3, idJunctions6_TOP_4, idJunctions6_TOP_5, idJunctions6_TOP_6, idJunctions6_TOP_7, idJunctions6_TOP_8, idJunctions6_TOP_9:int;
	idJunctions6_Junctions6_2, idJunctions6_Junctions6_3, idJunctions6_Junctions6_4:int;
	y_2, y_3, y_4, y_5:int;


let



	-- set state as active 
	idJunctions6_Junctions6_2 
	= 1620;
	

	
-- transition trace :
	--POINT__To__TOP_A_1
		-- condition Action : y+=1
		
		(y_2) 
	= 
		 if (( x<4 )) then 
		POINT__To__TOP_A_1_Condition_Action(y_1)
		 else (y_1);
		

		(idJunctions6_TOP_2) 
	= 
		 if (( x<4 )) then 
		TOP_A_en(idJunctions6_TOP_1, false)
		 else (idJunctions6_TOP_1);
		

-- transition trace :
	--POINT__To__TOP_B_2
		-- condition Action : y+=10
		
		(y_3) 
	= 
		 if (( x>=4 )) then 
		POINT__To__TOP_B_2_Condition_Action(y_2)
		 else (y_2);
		

		(idJunctions6_TOP_3) 
	= 
		 if (( x>=4 )) then 
		TOP_B_en(idJunctions6_TOP_2, false)
		 else (idJunctions6_TOP_2);
		

	(idJunctions6_TOP_4, idJunctions6_Junctions6_3, y_4) 
	= 

	if ( idJunctions6_TOP_1 = 0) then

	
		 if (( x<4 )) then 
		(idJunctions6_TOP_2, idJunctions6_Junctions6_2, y_2)
		 else
		 if (( x>=4 )) then 
		(idJunctions6_TOP_3, idJunctions6_Junctions6_2, y_3)
		 else (idJunctions6_TOP_1, idJunctions6_Junctions6_2, y_1)

	 else(idJunctions6_TOP_1, idJunctions6_Junctions6_2, y_1);

	

	(idJunctions6_TOP_5) 
	= 
	if ( idJunctions6_TOP_1 = 1616) then
	TOP_A_en(idJunctions6_TOP_1, false)
	 else (idJunctions6_TOP_1);

	

	(idJunctions6_TOP_6) 
	= 
	if ( idJunctions6_TOP_1 = 1617) then
	TOP_B_en(idJunctions6_TOP_1, false)
	 else (idJunctions6_TOP_1);

	

	(idJunctions6_TOP_7) 
	= 
	if ( idJunctions6_TOP_1 = 1618) then
	TOP_C_en(idJunctions6_TOP_1, false)
	 else (idJunctions6_TOP_1);

	

	(idJunctions6_TOP_8) 
	= 
	if ( idJunctions6_TOP_1 = 1619) then
	TOP_D_en(idJunctions6_TOP_1, false)
	 else (idJunctions6_TOP_1);

	

	(idJunctions6_TOP_9, idJunctions6_Junctions6_4, y_5) 
	= 
		 if ( idJunctions6_TOP_1 = 0) then 
		(idJunctions6_TOP_4, idJunctions6_Junctions6_3, y_4)
		 else
		 if ( idJunctions6_TOP_1 = 1616) then 
		(idJunctions6_TOP_5, idJunctions6_Junctions6_3, y_4)
		 else
		 if ( idJunctions6_TOP_1 = 1617) then 
		(idJunctions6_TOP_6, idJunctions6_Junctions6_3, y_4)
		 else
		 if ( idJunctions6_TOP_1 = 1618) then 
		(idJunctions6_TOP_7, idJunctions6_Junctions6_3, y_4)
		 else
		 if ( idJunctions6_TOP_1 = 1619) then 
		(idJunctions6_TOP_8, idJunctions6_Junctions6_3, y_4)
		 else (idJunctions6_TOP_1, idJunctions6_Junctions6_2, y_1);


	(idJunctions6_TOP, idJunctions6_Junctions6, y) 
	= (idJunctions6_TOP_9, idJunctions6_Junctions6_4, y_5);
	

tel





-- Exit action for state :Junctions6_TOP
node Junctions6_TOP_ex(idJunctions6_TOP_1:int;
	idJunctions6_Junctions6_1:int;
	isInner:bool)

returns (idJunctions6_TOP:int;
	idJunctions6_Junctions6:int);


var 	idJunctions6_TOP_2, idJunctions6_TOP_3, idJunctions6_TOP_4, idJunctions6_TOP_5, idJunctions6_TOP_6, idJunctions6_TOP_7:int;
	idJunctions6_Junctions6_2:int;


let



	
	(idJunctions6_TOP_2) 
	= 
	if ( idJunctions6_TOP_1 = 1616) then
	TOP_A_ex(idJunctions6_TOP_1, false)
	 else (idJunctions6_TOP_1);

	

	(idJunctions6_TOP_3) 
	= 
	if ( idJunctions6_TOP_1 = 1617) then
	TOP_B_ex(idJunctions6_TOP_1, false)
	 else (idJunctions6_TOP_1);

	

	(idJunctions6_TOP_4) 
	= 
	if ( idJunctions6_TOP_1 = 1618) then
	TOP_C_ex(idJunctions6_TOP_1, false)
	 else (idJunctions6_TOP_1);

	

	(idJunctions6_TOP_5) 
	= 
	if ( idJunctions6_TOP_1 = 1619) then
	TOP_D_ex(idJunctions6_TOP_1, false)
	 else (idJunctions6_TOP_1);

	

	(idJunctions6_TOP_6) 
	= 
		 if ( idJunctions6_TOP_1 = 1616) then 
		(idJunctions6_TOP_2)
		 else
		 if ( idJunctions6_TOP_1 = 1617) then 
		(idJunctions6_TOP_3)
		 else
		 if ( idJunctions6_TOP_1 = 1618) then 
		(idJunctions6_TOP_4)
		 else
		 if ( idJunctions6_TOP_1 = 1619) then 
		(idJunctions6_TOP_5)
		 else (idJunctions6_TOP_1);


	-- set state as inactive 
	idJunctions6_Junctions6_2
	 = if (not isInner) then 0 else idJunctions6_Junctions6_1;

	idJunctions6_TOP_7 
	= 0;
	

	(idJunctions6_TOP, idJunctions6_Junctions6) 
	= (idJunctions6_TOP_7, idJunctions6_Junctions6_1);
	

tel


--***************************************************State :Junctions6_TOP Automaton***************************************************

node Junctions6_TOP_node(idJunctions6_TOP_1:int;
	x:int;
	y_1:int;
	idJunctions6_Junctions6_1:int)

returns (idJunctions6_TOP:int;
	y:int;
	idJunctions6_Junctions6:int);


let

	 automaton junctions6_top

	state POINTJunctions6_TOP:
	unless (idJunctions6_TOP_1=0) and ( x<4 ) restart POINT__TO__TOP_A_1



	unless (idJunctions6_TOP_1=0) and ( x>=4 ) restart POINT__TO__TOP_B_2



	unless (idJunctions6_TOP_1=1616) and ( x<=2 ) restart TOP_A__TO__JUNCTIONS6_JUNCTIONS6JUNCTION1621_1



	unless (idJunctions6_TOP_1=1617) and ( x>=6 ) restart TOP_B__TO__JUNCTIONS6_JUNCTIONS6JUNCTION1621_1



	unless (idJunctions6_TOP_1=1618) restart TOP_C__TO__JUNCTIONS6_TOP_1



	unless (idJunctions6_TOP_1=1619) restart TOP_D__TO__TOP_C_1



	unless (idJunctions6_TOP_1=1616) restart TOP_A_IDL

	unless (idJunctions6_TOP_1=1617) restart TOP_B_IDL

	unless (idJunctions6_TOP_1=1618) restart TOP_C_IDL

	unless (idJunctions6_TOP_1=1619) restart TOP_D_IDL

	let

		(idJunctions6_TOP, y, idJunctions6_Junctions6) 
	= (idJunctions6_TOP_1, y_1, idJunctions6_Junctions6_1);
	

	tel



	state POINT__TO__TOP_A_1:

	 var 	idJunctions6_TOP_2:int;
	y_2:int;
	let

		-- transition trace :
	--POINT__To__TOP_A_1
		-- condition Action : y+=1
		
		(y_2) 
	= POINT__To__TOP_A_1_Condition_Action(y_1);
		

		(idJunctions6_TOP_2) 
	= TOP_A_en(idJunctions6_TOP_1, false);
		

	(idJunctions6_TOP, y) 
	=  (idJunctions6_TOP_2, y_2);

	--add unused variables
	(idJunctions6_Junctions6) 
	= (idJunctions6_Junctions6_1);
	

	tel

	until true restart POINTJunctions6_TOP



	state POINT__TO__TOP_B_2:

	 var 	idJunctions6_TOP_2:int;
	y_2:int;
	let

		-- transition trace :
	--POINT__To__TOP_B_2
		-- condition Action : y+=10
		
		(y_2) 
	= POINT__To__TOP_B_2_Condition_Action(y_1);
		

		(idJunctions6_TOP_2) 
	= TOP_B_en(idJunctions6_TOP_1, false);
		

	(idJunctions6_TOP, y) 
	=  (idJunctions6_TOP_2, y_2);

	--add unused variables
	(idJunctions6_Junctions6) 
	= (idJunctions6_Junctions6_1);
	

	tel

	until true restart POINTJunctions6_TOP



	state TOP_A__TO__JUNCTIONS6_JUNCTIONS6JUNCTION1621_1:

	 var 	idJunctions6_TOP_2, idJunctions6_TOP_3, idJunctions6_TOP_4, idJunctions6_TOP_5:int;
	y_2, y_3, y_4, y_5:int;
	let

		

-- transition trace :
	--TOP_A__To__Junction1621_1, Junction1621__To__TOP_D_1
		-- condition Action : y+=100
		
		(y_2) 
	= TOP_A__To__Junctions6_Junctions6Junction1621_1_Condition_Action(y_1);
		

		-- condition Action : y+=100000
		
		(y_3) 
	= 
		 if (( x mod 3=0 )) then 
		Junctions6_Junctions6Junction1621__To__TOP_D_1_Condition_Action(y_2)
		 else (y_2);
		

		(idJunctions6_TOP_2) 
	= 
		 if (( x mod 3=0 )) then 
		TOP_A_ex(idJunctions6_TOP_1, false)
		 else (idJunctions6_TOP_1);
		

		(idJunctions6_TOP_3) 
	= 
		 if (( x mod 3=0 )) then 
		TOP_D_en(idJunctions6_TOP_2, false)
		 else (idJunctions6_TOP_2);
		


-- transition trace :
	--TOP_A__To__Junction1621_1, Junction1621__To__TOP_C_2
		-- condition Action : y+=100
		
		(y_4) 
	= TOP_A__To__Junctions6_Junctions6Junction1621_1_Condition_Action(y_1);
		

		-- condition Action : y+=10000
		
		(y_5) 
	= 
		 if (( x mod 3=1 )) then 
		Junctions6_Junctions6Junction1621__To__TOP_C_2_Condition_Action(y_4)
		 else (y_4);
		

		(idJunctions6_TOP_4) 
	= 
		 if (( x mod 3=1 )) then 
		TOP_A_ex(idJunctions6_TOP_1, false)
		 else (idJunctions6_TOP_1);
		

		(idJunctions6_TOP_5) 
	= 
		 if (( x mod 3=1 )) then 
		TOP_C_en(idJunctions6_TOP_4, false)
		 else (idJunctions6_TOP_4);
		

	(idJunctions6_TOP, y) 
	= 
		 if (( x mod 3=0 )) then 
		(idJunctions6_TOP_3, y_3)
		 else
		 if (( x mod 3=1 )) then 
		(idJunctions6_TOP_5, y_5)
		 else (idJunctions6_TOP_1, y_4);

	--add unused variables
	(idJunctions6_Junctions6) 
	= (idJunctions6_Junctions6_1);
	

	tel

	until true restart POINTJunctions6_TOP



	state TOP_B__TO__JUNCTIONS6_JUNCTIONS6JUNCTION1621_1:

	 var 	idJunctions6_TOP_2, idJunctions6_TOP_3, idJunctions6_TOP_4, idJunctions6_TOP_5:int;
	y_2, y_3, y_4, y_5:int;
	let

		

-- transition trace :
	--TOP_B__To__Junction1621_1, Junction1621__To__TOP_D_1
		-- condition Action : y+=1000
		
		(y_2) 
	= TOP_B__To__Junctions6_Junctions6Junction1621_1_Condition_Action(y_1);
		

		-- condition Action : y+=100000
		
		(y_3) 
	= 
		 if (( x mod 3=0 )) then 
		Junctions6_Junctions6Junction1621__To__TOP_D_1_Condition_Action(y_2)
		 else (y_2);
		

		(idJunctions6_TOP_2) 
	= 
		 if (( x mod 3=0 )) then 
		TOP_B_ex(idJunctions6_TOP_1, false)
		 else (idJunctions6_TOP_1);
		

		(idJunctions6_TOP_3) 
	= 
		 if (( x mod 3=0 )) then 
		TOP_D_en(idJunctions6_TOP_2, false)
		 else (idJunctions6_TOP_2);
		


-- transition trace :
	--TOP_B__To__Junction1621_1, Junction1621__To__TOP_C_2
		-- condition Action : y+=1000
		
		(y_4) 
	= TOP_B__To__Junctions6_Junctions6Junction1621_1_Condition_Action(y_1);
		

		-- condition Action : y+=10000
		
		(y_5) 
	= 
		 if (( x mod 3=1 )) then 
		Junctions6_Junctions6Junction1621__To__TOP_C_2_Condition_Action(y_4)
		 else (y_4);
		

		(idJunctions6_TOP_4) 
	= 
		 if (( x mod 3=1 )) then 
		TOP_B_ex(idJunctions6_TOP_1, false)
		 else (idJunctions6_TOP_1);
		

		(idJunctions6_TOP_5) 
	= 
		 if (( x mod 3=1 )) then 
		TOP_C_en(idJunctions6_TOP_4, false)
		 else (idJunctions6_TOP_4);
		

	(idJunctions6_TOP, y) 
	= 
		 if (( x mod 3=0 )) then 
		(idJunctions6_TOP_3, y_3)
		 else
		 if (( x mod 3=1 )) then 
		(idJunctions6_TOP_5, y_5)
		 else (idJunctions6_TOP_1, y_4);

	--add unused variables
	(idJunctions6_Junctions6) 
	= (idJunctions6_Junctions6_1);
	

	tel

	until true restart POINTJunctions6_TOP



	state TOP_C__TO__JUNCTIONS6_TOP_1:

	 var 	idJunctions6_TOP_2, idJunctions6_TOP_3, idJunctions6_TOP_4:int;
	y_2:int;
	idJunctions6_Junctions6_2:int;
	let

		-- transition trace :
	--TOP_C__To__Junctions6_TOP_1
		(idJunctions6_TOP_2) 
	= TOP_C_ex(idJunctions6_TOP_1, false);
		

		idJunctions6_TOP_3 
	= 0;
	
		(idJunctions6_TOP_4, idJunctions6_Junctions6_2, y_2) 
	= Junctions6_TOP_en(idJunctions6_TOP_3, idJunctions6_Junctions6_1, x, y_1, true);
		

	(idJunctions6_TOP, y, idJunctions6_Junctions6) 
	=  (idJunctions6_TOP_4, y_2, idJunctions6_Junctions6_2);


	tel

	until true restart POINTJunctions6_TOP



	state TOP_D__TO__TOP_C_1:

	 var 	idJunctions6_TOP_2, idJunctions6_TOP_3:int;
	let

		-- transition trace :
	--TOP_D__To__TOP_C_1
		(idJunctions6_TOP_2) 
	= TOP_D_ex(idJunctions6_TOP_1, false);
		

		(idJunctions6_TOP_3) 
	= TOP_C_en(idJunctions6_TOP_2, false);
		

	(idJunctions6_TOP, y, idJunctions6_Junctions6) 
	=  (idJunctions6_TOP_3, y_1, idJunctions6_Junctions6_1);


	tel

	until true restart POINTJunctions6_TOP



	state TOP_A_IDL:

	 	let

		

	(idJunctions6_TOP, y, idJunctions6_Junctions6) 
	= (idJunctions6_TOP_1, y_1, idJunctions6_Junctions6_1);
	

	tel

	until true restart POINTJunctions6_TOP



	state TOP_B_IDL:

	 	let

		

	(idJunctions6_TOP, y, idJunctions6_Junctions6) 
	= (idJunctions6_TOP_1, y_1, idJunctions6_Junctions6_1);
	

	tel

	until true restart POINTJunctions6_TOP



	state TOP_C_IDL:

	 	let

		

	(idJunctions6_TOP, y, idJunctions6_Junctions6) 
	= (idJunctions6_TOP_1, y_1, idJunctions6_Junctions6_1);
	

	tel

	until true restart POINTJunctions6_TOP



	state TOP_D_IDL:

	 	let

		

	(idJunctions6_TOP, y, idJunctions6_Junctions6) 
	= (idJunctions6_TOP_1, y_1, idJunctions6_Junctions6_1);
	

	tel

	until true restart POINTJunctions6_TOP



tel


--***************************************************State :Junctions6_Junctions6 Automaton***************************************************

node Junctions6_Junctions6_node(idJunctions6_Junctions6_1:int;
	idJunctions6_TOP_1:int;
	x:int;
	y_1:int)

returns (idJunctions6_Junctions6:int;
	idJunctions6_TOP:int;
	y:int);


let

	 automaton junctions6_junctions6

	state POINTJunctions6_Junctions6:
	unless (idJunctions6_Junctions6_1=0) restart POINT__TO__JUNCTIONS6_TOP_1



	unless (idJunctions6_Junctions6_1=1620) restart JUNCTIONS6_TOP_IDL

	let

		(idJunctions6_Junctions6, idJunctions6_TOP, y) 
	= (idJunctions6_Junctions6_1, idJunctions6_TOP_1, y_1);
	

	tel



	state POINT__TO__JUNCTIONS6_TOP_1:

	 var 	idJunctions6_Junctions6_2:int;
	idJunctions6_TOP_2:int;
	y_2:int;
	let

		-- transition trace :
	--POINT__To__Junctions6_TOP_1
		(idJunctions6_TOP_2, idJunctions6_Junctions6_2, y_2) 
	= Junctions6_TOP_en(idJunctions6_TOP_1, idJunctions6_Junctions6_1, x, y_1, false);
		

	(idJunctions6_Junctions6, idJunctions6_TOP, y) 
	=  (idJunctions6_Junctions6_2, idJunctions6_TOP_2, y_2);


	tel

	until true restart POINTJunctions6_Junctions6



	state JUNCTIONS6_TOP_IDL:

	 var 	idJunctions6_Junctions6_2:int;
	idJunctions6_TOP_2:int;
	y_2:int;
	let

		
	(idJunctions6_TOP_2, y_2, idJunctions6_Junctions6_2) 
	= Junctions6_TOP_node(idJunctions6_TOP_1, x, y_1, idJunctions6_Junctions6_1);

		


	(idJunctions6_Junctions6, idJunctions6_TOP, y) 
	= (idJunctions6_Junctions6_2, idJunctions6_TOP_2, y_2);
	

	tel

	until true restart POINTJunctions6_Junctions6



tel


--***************************************************State :Junctions6_Junctions6 Automaton***************************************************

node Junctions6_Junctions6(x:int)

returns (y:int);


var y_1: int;

	idJunctions6_Junctions6, idJunctions6_Junctions6_1: int;

	idJunctions6_TOP, idJunctions6_TOP_1: int;

	let

	y_1 = 111111 -> pre y;

	idJunctions6_Junctions6_1 = 0 -> pre idJunctions6_Junctions6;

	idJunctions6_TOP_1 = 0 -> pre idJunctions6_TOP;

	



	(idJunctions6_Junctions6, idJunctions6_TOP, y)
	 = Junctions6_Junctions6_node(idJunctions6_Junctions6_1, idJunctions6_TOP_1, x, y_1);


--unused outputs
	

tel



node Junctions6 (x_1_1 : int)
returns (y_1_1 : int); 
var
	Junctions6_1_1 : int;
let 
	Junctions6_1_1 =  Junctions6_Junctions6(x_1_1);
	y_1_1 = Junctions6_1_1;
tel

