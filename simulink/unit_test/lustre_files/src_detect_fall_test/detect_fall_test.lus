-- This file has been generated by cocoSim


-- System nodes
node detect_fall_test (In1_1_1 : real; In2_1_1 : real; In2_1_2 : real; In2_1_3 : real; In2_1_4 : real; In2_1_5 : real; In3_1_1 : int; In3_1_2 : int; In3_1_3 : int; In3_1_4 : int; In3_1_5 : int; In3_1_6 : int; In4_1_1 : real; In5_1_1 : real; In5_1_2 : real; In5_1_3 : real; In5_1_4 : real; In5_1_5 : real; In6_1_1 : int; In6_1_2 : int; In6_1_3 : int; In6_1_4 : int; In6_1_5 : int; In6_1_6 : int; In7_1_1 : bool; In8_1_1 : bool)
returns (Out1_1_1 : bool;
	Out2_2_1 : bool; Out2_2_2 : bool; Out2_2_3 : bool; Out2_2_4 : bool; Out2_2_5 : bool;
	Out3_3_1 : bool; Out3_3_2 : bool; Out3_3_3 : bool; Out3_3_4 : bool; Out3_3_5 : bool; Out3_3_6 : bool;
	Out4_4_1 : bool;
	Out5_5_1 : bool; Out5_5_2 : bool; Out5_5_3 : bool; Out5_5_4 : bool; Out5_5_5 : bool;
	Out6_6_1 : bool; Out6_6_2 : bool; Out6_6_3 : bool; Out6_6_4 : bool; Out6_6_5 : bool; Out6_6_6 : bool;
	Out7_7_1 : bool;
	Out8_8_1 : bool); 
var
	DetectFallNegative_1_1 : bool;
	DetectFallNegative1_1_1 : bool; DetectFallNegative1_1_2 : bool; DetectFallNegative1_1_3 : bool; DetectFallNegative1_1_4 : bool; DetectFallNegative1_1_5 : bool;
	DetectFallNegative2_1_1 : bool; DetectFallNegative2_1_2 : bool; DetectFallNegative2_1_3 : bool; DetectFallNegative2_1_4 : bool; DetectFallNegative2_1_5 : bool; DetectFallNegative2_1_6 : bool;
	DetectFallNegative3_1_1 : bool;
	DetectFallNonpositive_1_1 : bool;
	DetectFallNonpositive1_1_1 : bool; DetectFallNonpositive1_1_2 : bool; DetectFallNonpositive1_1_3 : bool; DetectFallNonpositive1_1_4 : bool; DetectFallNonpositive1_1_5 : bool;
	DetectFallNonpositive2_1_1 : bool; DetectFallNonpositive2_1_2 : bool; DetectFallNonpositive2_1_3 : bool; DetectFallNonpositive2_1_4 : bool; DetectFallNonpositive2_1_5 : bool; DetectFallNonpositive2_1_6 : bool;
	DetectFallNonpositive3_1_1 : bool;
	i_virtual_local : real;
let 
	DetectFallNegative_1_1 = In1_1_1 < 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In1_1_1) < 0.0);
	DetectFallNegative1_1_1 = In2_1_1 < 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In2_1_1) < 0.0);
	DetectFallNegative1_1_2 = In2_1_2 < 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In2_1_2) < 0.0);
	DetectFallNegative1_1_3 = In2_1_3 < 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In2_1_3) < 0.0);
	DetectFallNegative1_1_4 = In2_1_4 < 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In2_1_4) < 0.0);
	DetectFallNegative1_1_5 = In2_1_5 < 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In2_1_5) < 0.0);
	DetectFallNegative2_1_1 = In3_1_1 < 0 and not ((if 0=0 then false else true) -> pre (In3_1_1) < 0);
	DetectFallNegative2_1_2 = In3_1_2 < 0 and not ((if 0=0 then false else true) -> pre (In3_1_2) < 0);
	DetectFallNegative2_1_3 = In3_1_3 < 0 and not ((if 0=0 then false else true) -> pre (In3_1_3) < 0);
	DetectFallNegative2_1_4 = In3_1_4 < 0 and not ((if 0=0 then false else true) -> pre (In3_1_4) < 0);
	DetectFallNegative2_1_5 = In3_1_5 < 0 and not ((if 0=0 then false else true) -> pre (In3_1_5) < 0);
	DetectFallNegative2_1_6 = In3_1_6 < 0 and not ((if 0=0 then false else true) -> pre (In3_1_6) < 0);
	DetectFallNegative3_1_1 = false;
	DetectFallNonpositive_1_1 = In4_1_1 <= 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In4_1_1) <= 0.0);
	DetectFallNonpositive1_1_1 = In5_1_1 <= 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In5_1_1) <= 0.0);
	DetectFallNonpositive1_1_2 = In5_1_2 <= 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In5_1_2) <= 0.0);
	DetectFallNonpositive1_1_3 = In5_1_3 <= 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In5_1_3) <= 0.0);
	DetectFallNonpositive1_1_4 = In5_1_4 <= 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In5_1_4) <= 0.0);
	DetectFallNonpositive1_1_5 = In5_1_5 <= 0.0 and not ((if 0.0000000000=0.0 then false else true) -> pre (In5_1_5) <= 0.0);
	DetectFallNonpositive2_1_1 = In6_1_1 <= 0 and not ((if 0=0 then false else true) -> pre (In6_1_1) <= 0);
	DetectFallNonpositive2_1_2 = In6_1_2 <= 0 and not ((if 0=0 then false else true) -> pre (In6_1_2) <= 0);
	DetectFallNonpositive2_1_3 = In6_1_3 <= 0 and not ((if 0=0 then false else true) -> pre (In6_1_3) <= 0);
	DetectFallNonpositive2_1_4 = In6_1_4 <= 0 and not ((if 0=0 then false else true) -> pre (In6_1_4) <= 0);
	DetectFallNonpositive2_1_5 = In6_1_5 <= 0 and not ((if 0=0 then false else true) -> pre (In6_1_5) <= 0);
	DetectFallNonpositive2_1_6 = In6_1_6 <= 0 and not ((if 0=0 then false else true) -> pre (In6_1_6) <= 0);
	DetectFallNonpositive3_1_1 = not(In8_1_1) and (not false -> pre (In8_1_1));
	Out1_1_1 = DetectFallNegative_1_1;
	Out2_2_1 = DetectFallNegative1_1_1;
	Out2_2_2 = DetectFallNegative1_1_2;
	Out2_2_3 = DetectFallNegative1_1_3;
	Out2_2_4 = DetectFallNegative1_1_4;
	Out2_2_5 = DetectFallNegative1_1_5;
	Out3_3_1 = DetectFallNegative2_1_1;
	Out3_3_2 = DetectFallNegative2_1_2;
	Out3_3_3 = DetectFallNegative2_1_3;
	Out3_3_4 = DetectFallNegative2_1_4;
	Out3_3_5 = DetectFallNegative2_1_5;
	Out3_3_6 = DetectFallNegative2_1_6;
	Out4_4_1 = DetectFallNonpositive_1_1;
	Out5_5_1 = DetectFallNonpositive1_1_1;
	Out5_5_2 = DetectFallNonpositive1_1_2;
	Out5_5_3 = DetectFallNonpositive1_1_3;
	Out5_5_4 = DetectFallNonpositive1_1_4;
	Out5_5_5 = DetectFallNonpositive1_1_5;
	Out6_6_1 = DetectFallNonpositive2_1_1;
	Out6_6_2 = DetectFallNonpositive2_1_2;
	Out6_6_3 = DetectFallNonpositive2_1_3;
	Out6_6_4 = DetectFallNonpositive2_1_4;
	Out6_6_5 = DetectFallNonpositive2_1_5;
	Out6_6_6 = DetectFallNonpositive2_1_6;
	Out7_7_1 = DetectFallNegative3_1_1;
	Out8_8_1 = DetectFallNonpositive3_1_1;
	i_virtual_local= 0.0 -> 1.0;
tel

