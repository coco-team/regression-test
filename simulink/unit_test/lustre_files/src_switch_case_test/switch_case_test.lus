-- This file has been generated by cocoSim

-- Conversion nodes
node Zero(In : real)
returns (Out : int)
let
	Out = 0;
tel

-- System nodes
node switch_case_test_SwitchCaseActionSubsystem9 (In1_1_1 : int)
returns (Out1_1_1 : int); 
let 
	Out1_1_1 = In1_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem8 (In1_1_1 : int)
returns (Out1_1_1 : bool); 
var
	RelationalOperator_1_1 : bool;
let 
	RelationalOperator_1_1 = In1_1_1 <= In1_1_1;
	Out1_1_1 = RelationalOperator_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem7 (In1_1_1 : int)
returns (Out1_1_1 : int); 
let 
	Out1_1_1 = In1_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem6 (In1_1_1 : int)
returns (Out1_1_1 : int); 
let 
	Out1_1_1 = In1_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem5 (In1_1_1 : real)
returns (Out1_1_1 : real); 
var
	UnitDelay_1_1 : real;
let 
	UnitDelay_1_1 = 0.0000000000 -> pre In1_1_1;
	Out1_1_1 = UnitDelay_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem4 (In1_1_1 : real)
returns (Out1_1_1 : real); 
let 
	Out1_1_1 = In1_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem3 (In1_1_1 : real; switch_case_test_SwitchCaseActionSubsystem3_action_reset: boo)
returns (Out1_1_1 : real); 
var
	UnitDelay_1_1 : real;
let 
	UnitDelay_1_1 = if switch_case_test_SwitchCaseActionSubsystem3_action_reset then 0.0000000000 else 0.0000000000 -> pre In1_1_1;
	Out1_1_1 = UnitDelay_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem2 (In1_1_1 : real)
returns (Out1_1_1 : real); 
let 
	Out1_1_1 = In1_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem11 (In1_1_1 : int)
returns (Out2_1_1 : bool;
	Out1_2_1 : int); 
var
	LogicalOperator_1_1 : bool;
let 
	LogicalOperator_1_1 = (if In1_1_1 = 0 then false else true) and (if In1_1_1 = 0 then false else true);
	Out2_1_1 = LogicalOperator_1_1;
	Out1_2_1 = In1_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem10 (In1_1_1 : int)
returns (Out1_1_1 : int); 
let 
	Out1_1_1 = In1_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem1 (In1_1_1 : real)
returns (Out1_1_1 : real); 
let 
	Out1_1_1 = In1_1_1;
tel

node switch_case_test_SwitchCaseActionSubsystem (In1_1_1 : real; In2_1_1 : bool; switch_case_test_SwitchCaseActionSubsystem_action_reset: boo)
returns (Out2_1_1 : bool;
	Out3_2_1 : bool;
	Out4_3_1 : real;
	Out5_4_1 : real;
	Out6_5_1 : real;
	Out7_6_1 : real); 
var
	DiscreteTimeIntegrator_1_1 : real;
	DiscreteTimeIntegrator1_1_1 : real;
	DiscreteTimeIntegrator2_1_1 : real;
	DiscreteTimeIntegrator3_1_1 : real;
	LogicalOperator_1_1 : bool;
	RelationalOperator_1_1 : bool;
let 
	DiscreteTimeIntegrator_1_1 = if switch_case_test_SwitchCaseActionSubsystem_action_reset then 0.0000000000 else 0.0000000000 -> (1.0000000000 * 0.1000000000) + pre In1_1_1;
	DiscreteTimeIntegrator1_1_1 = if switch_case_test_SwitchCaseActionSubsystem_action_reset then 0.0000000000 else 0.0000000000 -> if (if In1_1_1 = 0.0 then false else true) then 0.0000000000 else (1.0000000000 * 0.1000000000) + pre In1_1_1;
	DiscreteTimeIntegrator2_1_1 = if switch_case_test_SwitchCaseActionSubsystem_action_reset then In1_1_1 else In1_1_1 -> (1.0000000000 * 0.1000000000) + pre In1_1_1;
	DiscreteTimeIntegrator3_1_1 = if switch_case_test_SwitchCaseActionSubsystem_action_reset then In1_1_1 else In1_1_1 -> if (if In1_1_1 = 0.0 then false else true) then In1_1_1 else (1.0000000000 * 0.1000000000) + pre In1_1_1;
	LogicalOperator_1_1 = RelationalOperator_1_1 and In2_1_1;
	RelationalOperator_1_1 = In1_1_1 <= In1_1_1;
	Out2_1_1 = RelationalOperator_1_1;
	Out3_2_1 = LogicalOperator_1_1;
	Out4_3_1 = DiscreteTimeIntegrator_1_1;
	Out5_4_1 = DiscreteTimeIntegrator1_1_1;
	Out6_5_1 = DiscreteTimeIntegrator2_1_1;
	Out7_6_1 = DiscreteTimeIntegrator3_1_1;
tel

node switch_case_test (In1_1_1 : real; In2_1_1 : real; In3_1_1 : real; In4_1_1 : int; In5_1_1 : int; In6_1_1 : int; In7_1_1 : bool)
returns (Out1_1_1 : bool;
	Out2_2_1 : real;
	Out3_3_1 : real;
	Out4_4_1 : real;
	Out5_5_1 : real;
	Out6_6_1 : real;
	Out7_7_1 : int;
	Out8_8_1 : int;
	Out9_9_1 : bool;
	Out10_10_1 : int;
	Out11_11_1 : int;
	Out12_12_1 : int;
	Out13_13_1 : bool;
	Out14_14_1 : real;
	Out15_15_1 : bool;
	Out16_16_1 : real;
	Out17_17_1 : real;
	Out18_18_1 : real); 
var
	SwitchCase_1_1 : bool; SwitchCase_2_1 : bool;
	SwitchCaseActionSubsystem_1_1 : bool; SwitchCaseActionSubsystem_2_1 : bool; SwitchCaseActionSubsystem_3_1 : real; SwitchCaseActionSubsystem_4_1 : real; SwitchCaseActionSubsystem_5_1 : real; SwitchCaseActionSubsystem_6_1 : real;
	SwitchCaseActionSubsystem1_1_1 : real;
	SwitchCaseActionSubsystem10_1_1 : int;
	SwitchCaseActionSubsystem11_1_1 : bool; SwitchCaseActionSubsystem11_2_1 : int;
	SwitchCaseActionSubsystem2_1_1 : real;
	SwitchCaseActionSubsystem3_1_1 : real;
	SwitchCaseActionSubsystem4_1_1 : real;
	SwitchCaseActionSubsystem5_1_1 : real;
	SwitchCaseActionSubsystem6_1_1 : int;
	SwitchCaseActionSubsystem7_1_1 : int;
	SwitchCaseActionSubsystem8_1_1 : bool;
	SwitchCaseActionSubsystem9_1_1 : int;
	SwitchCase1_1_1 : bool;
	SwitchCase2_1_1 : bool; SwitchCase2_2_1 : bool; SwitchCase2_3_1 : bool;
	SwitchCase3_1_1 : bool; SwitchCase3_2_1 : bool;
	SwitchCase4_1_1 : bool;
	SwitchCase5_1_1 : bool; SwitchCase5_2_1 : bool; SwitchCase5_3_1 : bool;
	i_virtual_local : real;
let 
	(SwitchCase_1_1, SwitchCase_2_1) = if (Zero(In1_1_1)) = 1 then (true, false) else (false, true);
	(SwitchCaseActionSubsystem_1_1, SwitchCaseActionSubsystem_2_1, SwitchCaseActionSubsystem_3_1, SwitchCaseActionSubsystem_4_1, SwitchCaseActionSubsystem_5_1, SwitchCaseActionSubsystem_6_1) = if SwitchCase_1_1 then switch_case_test_SwitchCaseActionSubsystem(In1_1_1, In7_1_1, SwitchCase_1_1 and not pre (SwitchCase_1_1)) else (true, true, 1.0, 1.0, 1.0, 1.0);
	SwitchCaseActionSubsystem1_1_1 = if SwitchCase_2_1 then switch_case_test_SwitchCaseActionSubsystem1(In1_1_1) else 1.0;
	SwitchCaseActionSubsystem10_1_1 = if SwitchCase5_3_1 then switch_case_test_SwitchCaseActionSubsystem10(In6_1_1) else 1;
	(SwitchCaseActionSubsystem11_1_1, SwitchCaseActionSubsystem11_2_1) = if SwitchCase5_2_1 then switch_case_test_SwitchCaseActionSubsystem11(In6_1_1) else (true, 1);
	SwitchCaseActionSubsystem2_1_1 = if SwitchCase1_1_1 then switch_case_test_SwitchCaseActionSubsystem2(In2_1_1) else 1.0;
	SwitchCaseActionSubsystem3_1_1 = if SwitchCase2_1_1 then switch_case_test_SwitchCaseActionSubsystem3(In3_1_1, SwitchCase2_1_1 and not pre (SwitchCase2_1_1)) else 1.0;
	SwitchCaseActionSubsystem4_1_1 = if SwitchCase2_3_1 then switch_case_test_SwitchCaseActionSubsystem4(In3_1_1) else 1.0;
	SwitchCaseActionSubsystem5_1_1 = if SwitchCase2_2_1 then switch_case_test_SwitchCaseActionSubsystem5(In3_1_1) else 1.0;
	SwitchCaseActionSubsystem6_1_1 = if SwitchCase3_1_1 then switch_case_test_SwitchCaseActionSubsystem6(In4_1_1) else 1;
	SwitchCaseActionSubsystem7_1_1 = if SwitchCase3_2_1 then switch_case_test_SwitchCaseActionSubsystem7(In4_1_1) else 1;
	SwitchCaseActionSubsystem8_1_1 = if SwitchCase4_1_1 then switch_case_test_SwitchCaseActionSubsystem8(In5_1_1) else true;
	SwitchCaseActionSubsystem9_1_1 = if SwitchCase5_1_1 then switch_case_test_SwitchCaseActionSubsystem9(In6_1_1) else 1;
	SwitchCase1_1_1 = if (Zero(In2_1_1)) = 1 then true else false;
	(SwitchCase2_1_1, SwitchCase2_2_1, SwitchCase2_3_1) = if (Zero(In3_1_1)) = 1 then (true, false, false) else if (Zero(In3_1_1)) = 2 then (false, true, false) else if (Zero(In3_1_1)) = 5 then (false, true, false) else (false, false, true);
	(SwitchCase3_1_1, SwitchCase3_2_1) = if In4_1_1 = 1 then (true, false) else (false, true);
	SwitchCase4_1_1 = if In5_1_1 = 1 then true else false;
	(SwitchCase5_1_1, SwitchCase5_2_1, SwitchCase5_3_1) = if In6_1_1 = 1 then (true, false, false) else if In6_1_1 = 2 then (false, true, false) else if In6_1_1 = 5 then (false, true, false) else (false, false, true);
	Out1_1_1 = SwitchCaseActionSubsystem_1_1;
	Out2_2_1 = SwitchCaseActionSubsystem1_1_1;
	Out3_3_1 = SwitchCaseActionSubsystem2_1_1;
	Out4_4_1 = SwitchCaseActionSubsystem3_1_1;
	Out5_5_1 = SwitchCaseActionSubsystem4_1_1;
	Out6_6_1 = SwitchCaseActionSubsystem5_1_1;
	Out7_7_1 = SwitchCaseActionSubsystem6_1_1;
	Out8_8_1 = SwitchCaseActionSubsystem7_1_1;
	Out9_9_1 = SwitchCaseActionSubsystem8_1_1;
	Out10_10_1 = SwitchCaseActionSubsystem9_1_1;
	Out11_11_1 = SwitchCaseActionSubsystem10_1_1;
	Out12_12_1 = SwitchCaseActionSubsystem11_2_1;
	Out13_13_1 = SwitchCaseActionSubsystem11_1_1;
	Out14_14_1 = SwitchCaseActionSubsystem_3_1;
	Out15_15_1 = SwitchCaseActionSubsystem_2_1;
	Out16_16_1 = SwitchCaseActionSubsystem_4_1;
	Out17_17_1 = SwitchCaseActionSubsystem_5_1;
	Out18_18_1 = SwitchCaseActionSubsystem_6_1;
	i_virtual_local= 0.0 -> 1.0;
tel

