-- This file has been generated by cocoSim


-- System nodes






















































-- Entry action for state :A2aA2_A2Aa2a
node A2aA2_A2Aa2a_en(idA2aA_A2aA2_1:int;
	isInner:bool)

returns (idA2aA_A2aA2:int);


var 	idA2aA_A2aA2_2:int;


let



	-- set state as active 
	idA2aA_A2aA2_2 
	= 1869;
	

	(idA2aA_A2aA2) 
	= (idA2aA_A2aA2_2);
	

tel





-- Exit action for state :A2aA2_A2Aa2a
node A2aA2_A2Aa2a_ex(idA2aA_A2aA2_1:int;
	isInner:bool)

returns (idA2aA_A2aA2:int);


var 	idA2aA_A2aA2_2:int;


let



	-- set state as inactive 
	idA2aA_A2aA2_2
	 = if (not isInner) then 0 else idA2aA_A2aA2_1;


	(idA2aA_A2aA2) 
	= (idA2aA_A2aA2_2);
	

tel






-- Entry action for state :A2aA2_A2aA2b
node A2aA2_A2aA2b_en(idA2aA_A2aA2_1:int;
	isInner:bool)

returns (idA2aA_A2aA2:int);


var 	idA2aA_A2aA2_2:int;


let



	-- set state as active 
	idA2aA_A2aA2_2 
	= 1870;
	

	(idA2aA_A2aA2) 
	= (idA2aA_A2aA2_2);
	

tel





-- Exit action for state :A2aA2_A2aA2b
node A2aA2_A2aA2b_ex(idA2aA_A2aA2_1:int;
	isInner:bool)

returns (idA2aA_A2aA2:int);


var 	idA2aA_A2aA2_2:int;


let



	-- set state as inactive 
	idA2aA_A2aA2_2
	 = if (not isInner) then 0 else idA2aA_A2aA2_1;


	(idA2aA_A2aA2) 
	= (idA2aA_A2aA2_2);
	

tel






-- Entry action for state :A2aA_A2aA2
node A2aA_A2aA2_en(idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	isInner:bool)

returns (idA2aA_A2aA2:int;
	idA2a_A2aA:int);


var 	idA2aA_A2aA2_2, idA2aA_A2aA2_3, idA2aA_A2aA2_4, idA2aA_A2aA2_5, idA2aA_A2aA2_6:int;
	idA2a_A2aA_2, idA2a_A2aA_3, idA2a_A2aA_4:int;


let



	-- set state as active 
	idA2a_A2aA_2 
	= 1868;
	

	
-- transition trace :
	--POINT__To__A2aA2_A2Aa2a_1
		(idA2aA_A2aA2_2) 
	= A2aA2_A2Aa2a_en(idA2aA_A2aA2_1, false);
		

	(idA2aA_A2aA2_3, idA2a_A2aA_3) 
	= 

	if ( idA2aA_A2aA2_1 = 0) then

	 (idA2aA_A2aA2_2, idA2a_A2aA_2)

	 else(idA2aA_A2aA2_1, idA2a_A2aA_2);

	

	(idA2aA_A2aA2_4) 
	= 
	if ( idA2aA_A2aA2_1 = 1869) then
	A2aA2_A2Aa2a_en(idA2aA_A2aA2_1, false)
	 else (idA2aA_A2aA2_1);

	

	(idA2aA_A2aA2_5) 
	= 
	if ( idA2aA_A2aA2_1 = 1870) then
	A2aA2_A2aA2b_en(idA2aA_A2aA2_1, false)
	 else (idA2aA_A2aA2_1);

	

	(idA2aA_A2aA2_6, idA2a_A2aA_4) 
	= 
		 if ( idA2aA_A2aA2_1 = 0) then 
		(idA2aA_A2aA2_3, idA2a_A2aA_3)
		 else
		 if ( idA2aA_A2aA2_1 = 1869) then 
		(idA2aA_A2aA2_4, idA2a_A2aA_3)
		 else
		 if ( idA2aA_A2aA2_1 = 1870) then 
		(idA2aA_A2aA2_5, idA2a_A2aA_3)
		 else (idA2aA_A2aA2_1, idA2a_A2aA_2);


	(idA2aA_A2aA2, idA2a_A2aA) 
	= (idA2aA_A2aA2_6, idA2a_A2aA_4);
	

tel





-- Exit action for state :A2aA_A2aA2
node A2aA_A2aA2_ex(idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	isInner:bool)

returns (idA2aA_A2aA2:int;
	idA2a_A2aA:int);


var 	idA2aA_A2aA2_2, idA2aA_A2aA2_3, idA2aA_A2aA2_4, idA2aA_A2aA2_5:int;
	idA2a_A2aA_2:int;


let



	
	(idA2aA_A2aA2_2) 
	= 
	if ( idA2aA_A2aA2_1 = 1869) then
	A2aA2_A2Aa2a_ex(idA2aA_A2aA2_1, false)
	 else (idA2aA_A2aA2_1);

	

	(idA2aA_A2aA2_3) 
	= 
	if ( idA2aA_A2aA2_1 = 1870) then
	A2aA2_A2aA2b_ex(idA2aA_A2aA2_1, false)
	 else (idA2aA_A2aA2_1);

	

	(idA2aA_A2aA2_4) 
	= 
		 if ( idA2aA_A2aA2_1 = 1869) then 
		(idA2aA_A2aA2_2)
		 else
		 if ( idA2aA_A2aA2_1 = 1870) then 
		(idA2aA_A2aA2_3)
		 else (idA2aA_A2aA2_1);


	-- set state as inactive 
	idA2a_A2aA_2
	 = if (not isInner) then 0 else idA2a_A2aA_1;

	idA2aA_A2aA2_5 
	= 0;
	

	(idA2aA_A2aA2, idA2a_A2aA) 
	= (idA2aA_A2aA2_5, idA2a_A2aA_2);
	

tel






-- Entry action for state :A2aA1_A2aA1a
node A2aA1_A2aA1a_en(idA2aA_A2aA1_1:int;
	isInner:bool)

returns (idA2aA_A2aA1:int);


var 	idA2aA_A2aA1_2:int;


let



	-- set state as active 
	idA2aA_A2aA1_2 
	= 1872;
	

	(idA2aA_A2aA1) 
	= (idA2aA_A2aA1_2);
	

tel





-- Exit action for state :A2aA1_A2aA1a
node A2aA1_A2aA1a_ex(idA2aA_A2aA1_1:int;
	isInner:bool)

returns (idA2aA_A2aA1:int);


var 	idA2aA_A2aA1_2:int;


let



	-- set state as inactive 
	idA2aA_A2aA1_2
	 = if (not isInner) then 0 else idA2aA_A2aA1_1;


	(idA2aA_A2aA1) 
	= (idA2aA_A2aA1_2);
	

tel






-- Entry action for state :A2aA1_A2aA1b
node A2aA1_A2aA1b_en(idA2aA_A2aA1_1:int;
	isInner:bool)

returns (idA2aA_A2aA1:int);


var 	idA2aA_A2aA1_2:int;


let



	-- set state as active 
	idA2aA_A2aA1_2 
	= 1873;
	

	(idA2aA_A2aA1) 
	= (idA2aA_A2aA1_2);
	

tel





-- Exit action for state :A2aA1_A2aA1b
node A2aA1_A2aA1b_ex(idA2aA_A2aA1_1:int;
	isInner:bool)

returns (idA2aA_A2aA1:int);


var 	idA2aA_A2aA1_2:int;


let



	-- set state as inactive 
	idA2aA_A2aA1_2
	 = if (not isInner) then 0 else idA2aA_A2aA1_1;


	(idA2aA_A2aA1) 
	= (idA2aA_A2aA1_2);
	

tel






-- Entry action for state :A2aA_A2aA1
node A2aA_A2aA1_en(idA2aA_A2aA1_1:int;
	idA2a_A2aA_1:int;
	isInner:bool)

returns (idA2aA_A2aA1:int;
	idA2a_A2aA:int);


var 	idA2aA_A2aA1_2, idA2aA_A2aA1_3, idA2aA_A2aA1_4, idA2aA_A2aA1_5, idA2aA_A2aA1_6:int;
	idA2a_A2aA_2, idA2a_A2aA_3, idA2a_A2aA_4:int;


let



	-- set state as active 
	idA2a_A2aA_2 
	= 1871;
	

	
-- transition trace :
	--POINT__To__A2aA1_A2aA1a_1
		(idA2aA_A2aA1_2) 
	= A2aA1_A2aA1a_en(idA2aA_A2aA1_1, false);
		

	(idA2aA_A2aA1_3, idA2a_A2aA_3) 
	= 

	if ( idA2aA_A2aA1_1 = 0) then

	 (idA2aA_A2aA1_2, idA2a_A2aA_2)

	 else(idA2aA_A2aA1_1, idA2a_A2aA_2);

	

	(idA2aA_A2aA1_4) 
	= 
	if ( idA2aA_A2aA1_1 = 1872) then
	A2aA1_A2aA1a_en(idA2aA_A2aA1_1, false)
	 else (idA2aA_A2aA1_1);

	

	(idA2aA_A2aA1_5) 
	= 
	if ( idA2aA_A2aA1_1 = 1873) then
	A2aA1_A2aA1b_en(idA2aA_A2aA1_1, false)
	 else (idA2aA_A2aA1_1);

	

	(idA2aA_A2aA1_6, idA2a_A2aA_4) 
	= 
		 if ( idA2aA_A2aA1_1 = 0) then 
		(idA2aA_A2aA1_3, idA2a_A2aA_3)
		 else
		 if ( idA2aA_A2aA1_1 = 1872) then 
		(idA2aA_A2aA1_4, idA2a_A2aA_3)
		 else
		 if ( idA2aA_A2aA1_1 = 1873) then 
		(idA2aA_A2aA1_5, idA2a_A2aA_3)
		 else (idA2aA_A2aA1_1, idA2a_A2aA_2);


	(idA2aA_A2aA1, idA2a_A2aA) 
	= (idA2aA_A2aA1_6, idA2a_A2aA_4);
	

tel





-- Exit action for state :A2aA_A2aA1
node A2aA_A2aA1_ex(idA2aA_A2aA1_1:int;
	idA2a_A2aA_1:int;
	isInner:bool)

returns (idA2aA_A2aA1:int;
	idA2a_A2aA:int);


var 	idA2aA_A2aA1_2, idA2aA_A2aA1_3, idA2aA_A2aA1_4, idA2aA_A2aA1_5:int;
	idA2a_A2aA_2:int;


let



	
	(idA2aA_A2aA1_2) 
	= 
	if ( idA2aA_A2aA1_1 = 1872) then
	A2aA1_A2aA1a_ex(idA2aA_A2aA1_1, false)
	 else (idA2aA_A2aA1_1);

	

	(idA2aA_A2aA1_3) 
	= 
	if ( idA2aA_A2aA1_1 = 1873) then
	A2aA1_A2aA1b_ex(idA2aA_A2aA1_1, false)
	 else (idA2aA_A2aA1_1);

	

	(idA2aA_A2aA1_4) 
	= 
		 if ( idA2aA_A2aA1_1 = 1872) then 
		(idA2aA_A2aA1_2)
		 else
		 if ( idA2aA_A2aA1_1 = 1873) then 
		(idA2aA_A2aA1_3)
		 else (idA2aA_A2aA1_1);


	-- set state as inactive 
	idA2a_A2aA_2
	 = if (not isInner) then 0 else idA2a_A2aA_1;

	idA2aA_A2aA1_5 
	= 0;
	

	(idA2aA_A2aA1, idA2a_A2aA) 
	= (idA2aA_A2aA1_5, idA2a_A2aA_2);
	

tel






-- Entry action for state :A2a_A2aA
node A2a_A2aA_en(idA2a_A2aA_1:int;
	idA2_A2a_1:int;
	idA2aA_A2aA1_1:int;
	idA2aA_A2aA2_1:int;
	isInner:bool)

returns (idA2a_A2aA:int;
	idA2_A2a:int;
	idA2aA_A2aA1:int;
	idA2aA_A2aA2:int);


var 	idA2a_A2aA_2, idA2a_A2aA_3, idA2a_A2aA_4, idA2a_A2aA_5, idA2a_A2aA_6:int;
	idA2_A2a_2, idA2_A2a_3, idA2_A2a_4:int;
	idA2aA_A2aA1_2, idA2aA_A2aA1_3, idA2aA_A2aA1_4, idA2aA_A2aA1_5:int;
	idA2aA_A2aA2_2, idA2aA_A2aA2_3:int;


let



	-- set state as active 
	idA2_A2a_2 
	= 1867;
	

	
-- transition trace :
	--POINT__To__A2aA_A2aA1_1
		(idA2aA_A2aA1_2, idA2a_A2aA_2) 
	= A2aA_A2aA1_en(idA2aA_A2aA1_1, idA2a_A2aA_1, false);
		

	(idA2a_A2aA_3, idA2_A2a_3, idA2aA_A2aA1_3) 
	= 

	if ( idA2a_A2aA_1 = 0) then

	 (idA2a_A2aA_2, idA2_A2a_2, idA2aA_A2aA1_2)

	 else(idA2a_A2aA_1, idA2_A2a_2, idA2aA_A2aA1_1);

	

	(idA2aA_A2aA2_2, idA2a_A2aA_4) 
	= 
	if ( idA2a_A2aA_1 = 1868) then
	A2aA_A2aA2_en(idA2aA_A2aA2_1, idA2a_A2aA_1, false)
	 else (idA2aA_A2aA2_1, idA2a_A2aA_1);

	

	(idA2aA_A2aA1_4, idA2a_A2aA_5) 
	= 
	if ( idA2a_A2aA_1 = 1871) then
	A2aA_A2aA1_en(idA2aA_A2aA1_1, idA2a_A2aA_1, false)
	 else (idA2aA_A2aA1_1, idA2a_A2aA_1);

	

	(idA2a_A2aA_6, idA2_A2a_4, idA2aA_A2aA1_5, idA2aA_A2aA2_3) 
	= 
		 if ( idA2a_A2aA_1 = 0) then 
		(idA2a_A2aA_3, idA2_A2a_3, idA2aA_A2aA1_3, idA2aA_A2aA2_1)
		 else
		 if ( idA2a_A2aA_1 = 1868) then 
		(idA2a_A2aA_4, idA2_A2a_3, idA2aA_A2aA1_3, idA2aA_A2aA2_2)
		 else
		 if ( idA2a_A2aA_1 = 1871) then 
		(idA2a_A2aA_5, idA2_A2a_3, idA2aA_A2aA1_4, idA2aA_A2aA2_2)
		 else (idA2a_A2aA_1, idA2_A2a_2, idA2aA_A2aA1_1, idA2aA_A2aA2_1);


	(idA2a_A2aA, idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2) 
	= (idA2a_A2aA_6, idA2_A2a_4, idA2aA_A2aA1_5, idA2aA_A2aA2_3);
	

tel





-- Exit action for state :A2a_A2aA
node A2a_A2aA_ex(idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	idA2aA_A2aA1_1:int;
	idA2_A2a_1:int;
	isInner:bool)

returns (idA2aA_A2aA2:int;
	idA2a_A2aA:int;
	idA2aA_A2aA1:int;
	idA2_A2a:int);


var 	idA2aA_A2aA2_2, idA2aA_A2aA2_3:int;
	idA2a_A2aA_2, idA2a_A2aA_3, idA2a_A2aA_4, idA2a_A2aA_5:int;
	idA2aA_A2aA1_2, idA2aA_A2aA1_3:int;
	idA2_A2a_2:int;


let



	
	(idA2aA_A2aA2_2, idA2a_A2aA_2) 
	= 
	if ( idA2a_A2aA_1 = 1868) then
	A2aA_A2aA2_ex(idA2aA_A2aA2_1, idA2a_A2aA_1, false)
	 else (idA2aA_A2aA2_1, idA2a_A2aA_1);

	

	(idA2aA_A2aA1_2, idA2a_A2aA_3) 
	= 
	if ( idA2a_A2aA_1 = 1871) then
	A2aA_A2aA1_ex(idA2aA_A2aA1_1, idA2a_A2aA_1, false)
	 else (idA2aA_A2aA1_1, idA2a_A2aA_1);

	

	(idA2aA_A2aA2_3, idA2a_A2aA_4, idA2aA_A2aA1_3) 
	= 
		 if ( idA2a_A2aA_1 = 1868) then 
		(idA2aA_A2aA2_2, idA2a_A2aA_2, idA2aA_A2aA1_1)
		 else
		 if ( idA2a_A2aA_1 = 1871) then 
		(idA2aA_A2aA2_2, idA2a_A2aA_3, idA2aA_A2aA1_2)
		 else (idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1);


	-- set state as inactive 
	idA2_A2a_2
	 = if (not isInner) then 0 else idA2_A2a_1;

	idA2a_A2aA_5 
	= 0;
	

	(idA2aA_A2aA2, idA2a_A2aA, idA2aA_A2aA1, idA2_A2a) 
	= (idA2aA_A2aA2_3, idA2a_A2aA_5, idA2aA_A2aA1_3, idA2_A2a_2);
	

tel






-- Entry action for state :A2_A2a
node A2_A2a_en(idA2_A2a_1:int;
	idA_A2_1:int;
	x:int;
	a_1:int;
	idA2aA_A2aA1_1:int;
	idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	isInner:bool)

returns (idA2_A2a:int;
	idA_A2:int;
	a:int;
	idA2aA_A2aA1:int;
	idA2aA_A2aA2:int;
	idA2a_A2aA:int);


var 	idA2_A2a_2, idA2_A2a_3, idA2_A2a_4, idA2_A2a_5:int;
	idA_A2_2, idA_A2_3, idA_A2_4:int;
	a_2, a_3, a_4:int;
	idA2aA_A2aA1_2, idA2aA_A2aA1_3, idA2aA_A2aA1_4, idA2aA_A2aA1_5:int;
	idA2aA_A2aA2_2, idA2aA_A2aA2_3, idA2aA_A2aA2_4, idA2aA_A2aA2_5:int;
	idA2a_A2aA_2, idA2a_A2aA_3, idA2a_A2aA_4, idA2a_A2aA_5:int;


let



	-- set state as active 
	idA_A2_2 
	= 1858;
	

	a_2 
	= if (not isInner) then x+3
	 else a_1;
	

	
-- transition trace :
	--POINT__To__A2a_A2aA_1
		(idA2a_A2aA_2, idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2) 
	= A2a_A2aA_en(idA2a_A2aA_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, false);
		

	(idA2_A2a_3, idA_A2_3, a_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3) 
	= 

	if ( idA2_A2a_1 = 0) then

	 (idA2_A2a_2, idA_A2_2, a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2)

	 else(idA2_A2a_1, idA_A2_2, a_2, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1);

	

	(idA2a_A2aA_4, idA2_A2a_4, idA2aA_A2aA1_4, idA2aA_A2aA2_4) 
	= 
	if ( idA2_A2a_1 = 1867) then
	A2a_A2aA_en(idA2a_A2aA_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, false)
	 else (idA2a_A2aA_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1);

	

	(idA2_A2a_5, idA_A2_4, a_4, idA2aA_A2aA1_5, idA2aA_A2aA2_5, idA2a_A2aA_5) 
	= 
		 if ( idA2_A2a_1 = 0) then 
		(idA2_A2a_3, idA_A2_3, a_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3)
		 else
		 if ( idA2_A2a_1 = 1867) then 
		(idA2_A2a_4, idA_A2_3, a_3, idA2aA_A2aA1_4, idA2aA_A2aA2_4, idA2a_A2aA_4)
		 else (idA2_A2a_1, idA_A2_2, a_2, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1);


	(idA2_A2a, idA_A2, a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA) 
	= (idA2_A2a_5, idA_A2_4, a_4, idA2aA_A2aA1_5, idA2aA_A2aA2_5, idA2a_A2aA_5);
	

tel





-- Exit action for state :A2_A2a
node A2_A2a_ex(idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	idA2aA_A2aA1_1:int;
	idA2_A2a_1:int;
	idA_A2_1:int;
	isInner:bool)

returns (idA2aA_A2aA2:int;
	idA2a_A2aA:int;
	idA2aA_A2aA1:int;
	idA2_A2a:int;
	idA_A2:int);


var 	idA2aA_A2aA2_2, idA2aA_A2aA2_3:int;
	idA2a_A2aA_2, idA2a_A2aA_3:int;
	idA2aA_A2aA1_2, idA2aA_A2aA1_3:int;
	idA2_A2a_2, idA2_A2a_3, idA2_A2a_4:int;
	idA_A2_2:int;


let



	
	(idA2aA_A2aA2_2, idA2a_A2aA_2, idA2aA_A2aA1_2, idA2_A2a_2) 
	= 
	if ( idA2_A2a_1 = 1867) then
	A2a_A2aA_ex(idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1, idA2_A2a_1, false)
	 else (idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1, idA2_A2a_1);

	

	(idA2aA_A2aA2_3, idA2a_A2aA_3, idA2aA_A2aA1_3, idA2_A2a_3) 
	= 
		 if ( idA2_A2a_1 = 1867) then 
		(idA2aA_A2aA2_2, idA2a_A2aA_2, idA2aA_A2aA1_2, idA2_A2a_2)
		 else (idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1, idA2_A2a_1);


	-- set state as inactive 
	idA_A2_2
	 = if (not isInner) then 0 else idA_A2_1;

	idA2_A2a_4 
	= 0;
	

	(idA2aA_A2aA2, idA2a_A2aA, idA2aA_A2aA1, idA2_A2a, idA_A2) 
	= (idA2aA_A2aA2_3, idA2a_A2aA_3, idA2aA_A2aA1_3, idA2_A2a_4, idA_A2_2);
	

tel






-- Entry action for state :A4aA2_A4Aa2a
node A4aA2_A4Aa2a_en(idA4aA_A4aA2_1:int;
	isInner:bool)

returns (idA4aA_A4aA2:int);


var 	idA4aA_A4aA2_2:int;


let



	-- set state as active 
	idA4aA_A4aA2_2 
	= 1883;
	

	(idA4aA_A4aA2) 
	= (idA4aA_A4aA2_2);
	

tel





-- Exit action for state :A4aA2_A4Aa2a
node A4aA2_A4Aa2a_ex(idA4aA_A4aA2_1:int;
	isInner:bool)

returns (idA4aA_A4aA2:int);


var 	idA4aA_A4aA2_2:int;


let



	-- set state as inactive 
	idA4aA_A4aA2_2
	 = if (not isInner) then 0 else idA4aA_A4aA2_1;


	(idA4aA_A4aA2) 
	= (idA4aA_A4aA2_2);
	

tel






-- Entry action for state :A4aA2_A4aA2b
node A4aA2_A4aA2b_en(idA4aA_A4aA2_1:int;
	isInner:bool)

returns (idA4aA_A4aA2:int);


var 	idA4aA_A4aA2_2:int;


let



	-- set state as active 
	idA4aA_A4aA2_2 
	= 1884;
	

	(idA4aA_A4aA2) 
	= (idA4aA_A4aA2_2);
	

tel





-- Exit action for state :A4aA2_A4aA2b
node A4aA2_A4aA2b_ex(idA4aA_A4aA2_1:int;
	isInner:bool)

returns (idA4aA_A4aA2:int);


var 	idA4aA_A4aA2_2:int;


let



	-- set state as inactive 
	idA4aA_A4aA2_2
	 = if (not isInner) then 0 else idA4aA_A4aA2_1;


	(idA4aA_A4aA2) 
	= (idA4aA_A4aA2_2);
	

tel






-- Entry action for state :A4aA_A4aA2
node A4aA_A4aA2_en(idA4aA_A4aA2_1:int;
	idA2b_A4aA_1:int;
	isInner:bool)

returns (idA4aA_A4aA2:int;
	idA2b_A4aA:int);


var 	idA4aA_A4aA2_2, idA4aA_A4aA2_3, idA4aA_A4aA2_4, idA4aA_A4aA2_5, idA4aA_A4aA2_6:int;
	idA2b_A4aA_2, idA2b_A4aA_3, idA2b_A4aA_4:int;


let



	-- set state as active 
	idA2b_A4aA_2 
	= 1882;
	

	
-- transition trace :
	--POINT__To__A4aA2_A4Aa2a_1
		(idA4aA_A4aA2_2) 
	= A4aA2_A4Aa2a_en(idA4aA_A4aA2_1, false);
		

	(idA4aA_A4aA2_3, idA2b_A4aA_3) 
	= 

	if ( idA4aA_A4aA2_1 = 0) then

	 (idA4aA_A4aA2_2, idA2b_A4aA_2)

	 else(idA4aA_A4aA2_1, idA2b_A4aA_2);

	

	(idA4aA_A4aA2_4) 
	= 
	if ( idA4aA_A4aA2_1 = 1883) then
	A4aA2_A4Aa2a_en(idA4aA_A4aA2_1, false)
	 else (idA4aA_A4aA2_1);

	

	(idA4aA_A4aA2_5) 
	= 
	if ( idA4aA_A4aA2_1 = 1884) then
	A4aA2_A4aA2b_en(idA4aA_A4aA2_1, false)
	 else (idA4aA_A4aA2_1);

	

	(idA4aA_A4aA2_6, idA2b_A4aA_4) 
	= 
		 if ( idA4aA_A4aA2_1 = 0) then 
		(idA4aA_A4aA2_3, idA2b_A4aA_3)
		 else
		 if ( idA4aA_A4aA2_1 = 1883) then 
		(idA4aA_A4aA2_4, idA2b_A4aA_3)
		 else
		 if ( idA4aA_A4aA2_1 = 1884) then 
		(idA4aA_A4aA2_5, idA2b_A4aA_3)
		 else (idA4aA_A4aA2_1, idA2b_A4aA_2);


	(idA4aA_A4aA2, idA2b_A4aA) 
	= (idA4aA_A4aA2_6, idA2b_A4aA_4);
	

tel





-- Exit action for state :A4aA_A4aA2
node A4aA_A4aA2_ex(idA4aA_A4aA2_1:int;
	idA2b_A4aA_1:int;
	isInner:bool)

returns (idA4aA_A4aA2:int;
	idA2b_A4aA:int);


var 	idA4aA_A4aA2_2, idA4aA_A4aA2_3, idA4aA_A4aA2_4, idA4aA_A4aA2_5:int;
	idA2b_A4aA_2:int;


let



	
	(idA4aA_A4aA2_2) 
	= 
	if ( idA4aA_A4aA2_1 = 1883) then
	A4aA2_A4Aa2a_ex(idA4aA_A4aA2_1, false)
	 else (idA4aA_A4aA2_1);

	

	(idA4aA_A4aA2_3) 
	= 
	if ( idA4aA_A4aA2_1 = 1884) then
	A4aA2_A4aA2b_ex(idA4aA_A4aA2_1, false)
	 else (idA4aA_A4aA2_1);

	

	(idA4aA_A4aA2_4) 
	= 
		 if ( idA4aA_A4aA2_1 = 1883) then 
		(idA4aA_A4aA2_2)
		 else
		 if ( idA4aA_A4aA2_1 = 1884) then 
		(idA4aA_A4aA2_3)
		 else (idA4aA_A4aA2_1);


	-- set state as inactive 
	idA2b_A4aA_2
	 = if (not isInner) then 0 else idA2b_A4aA_1;

	idA4aA_A4aA2_5 
	= 0;
	

	(idA4aA_A4aA2, idA2b_A4aA) 
	= (idA4aA_A4aA2_5, idA2b_A4aA_2);
	

tel






-- Entry action for state :A4aA1_A4aA1a
node A4aA1_A4aA1a_en(idA4aA_A4aA1_1:int;
	isInner:bool)

returns (idA4aA_A4aA1:int);


var 	idA4aA_A4aA1_2:int;


let



	-- set state as active 
	idA4aA_A4aA1_2 
	= 1886;
	

	(idA4aA_A4aA1) 
	= (idA4aA_A4aA1_2);
	

tel





-- Exit action for state :A4aA1_A4aA1a
node A4aA1_A4aA1a_ex(idA4aA_A4aA1_1:int;
	isInner:bool)

returns (idA4aA_A4aA1:int);


var 	idA4aA_A4aA1_2:int;


let



	-- set state as inactive 
	idA4aA_A4aA1_2
	 = if (not isInner) then 0 else idA4aA_A4aA1_1;


	(idA4aA_A4aA1) 
	= (idA4aA_A4aA1_2);
	

tel






-- Entry action for state :A4aA1_A4aA1b
node A4aA1_A4aA1b_en(idA4aA_A4aA1_1:int;
	isInner:bool)

returns (idA4aA_A4aA1:int);


var 	idA4aA_A4aA1_2:int;


let



	-- set state as active 
	idA4aA_A4aA1_2 
	= 1887;
	

	(idA4aA_A4aA1) 
	= (idA4aA_A4aA1_2);
	

tel





-- Exit action for state :A4aA1_A4aA1b
node A4aA1_A4aA1b_ex(idA4aA_A4aA1_1:int;
	isInner:bool)

returns (idA4aA_A4aA1:int);


var 	idA4aA_A4aA1_2:int;


let



	-- set state as inactive 
	idA4aA_A4aA1_2
	 = if (not isInner) then 0 else idA4aA_A4aA1_1;


	(idA4aA_A4aA1) 
	= (idA4aA_A4aA1_2);
	

tel






-- Entry action for state :A4aA_A4aA1
node A4aA_A4aA1_en(idA4aA_A4aA1_1:int;
	idA2b_A4aA_1:int;
	isInner:bool)

returns (idA4aA_A4aA1:int;
	idA2b_A4aA:int);


var 	idA4aA_A4aA1_2, idA4aA_A4aA1_3, idA4aA_A4aA1_4, idA4aA_A4aA1_5, idA4aA_A4aA1_6:int;
	idA2b_A4aA_2, idA2b_A4aA_3, idA2b_A4aA_4:int;


let



	-- set state as active 
	idA2b_A4aA_2 
	= 1885;
	

	
-- transition trace :
	--POINT__To__A4aA1_A4aA1a_1
		(idA4aA_A4aA1_2) 
	= A4aA1_A4aA1a_en(idA4aA_A4aA1_1, false);
		

	(idA4aA_A4aA1_3, idA2b_A4aA_3) 
	= 

	if ( idA4aA_A4aA1_1 = 0) then

	 (idA4aA_A4aA1_2, idA2b_A4aA_2)

	 else(idA4aA_A4aA1_1, idA2b_A4aA_2);

	

	(idA4aA_A4aA1_4) 
	= 
	if ( idA4aA_A4aA1_1 = 1886) then
	A4aA1_A4aA1a_en(idA4aA_A4aA1_1, false)
	 else (idA4aA_A4aA1_1);

	

	(idA4aA_A4aA1_5) 
	= 
	if ( idA4aA_A4aA1_1 = 1887) then
	A4aA1_A4aA1b_en(idA4aA_A4aA1_1, false)
	 else (idA4aA_A4aA1_1);

	

	(idA4aA_A4aA1_6, idA2b_A4aA_4) 
	= 
		 if ( idA4aA_A4aA1_1 = 0) then 
		(idA4aA_A4aA1_3, idA2b_A4aA_3)
		 else
		 if ( idA4aA_A4aA1_1 = 1886) then 
		(idA4aA_A4aA1_4, idA2b_A4aA_3)
		 else
		 if ( idA4aA_A4aA1_1 = 1887) then 
		(idA4aA_A4aA1_5, idA2b_A4aA_3)
		 else (idA4aA_A4aA1_1, idA2b_A4aA_2);


	(idA4aA_A4aA1, idA2b_A4aA) 
	= (idA4aA_A4aA1_6, idA2b_A4aA_4);
	

tel





-- Exit action for state :A4aA_A4aA1
node A4aA_A4aA1_ex(idA4aA_A4aA1_1:int;
	idA2b_A4aA_1:int;
	isInner:bool)

returns (idA4aA_A4aA1:int;
	idA2b_A4aA:int);


var 	idA4aA_A4aA1_2, idA4aA_A4aA1_3, idA4aA_A4aA1_4, idA4aA_A4aA1_5:int;
	idA2b_A4aA_2:int;


let



	
	(idA4aA_A4aA1_2) 
	= 
	if ( idA4aA_A4aA1_1 = 1886) then
	A4aA1_A4aA1a_ex(idA4aA_A4aA1_1, false)
	 else (idA4aA_A4aA1_1);

	

	(idA4aA_A4aA1_3) 
	= 
	if ( idA4aA_A4aA1_1 = 1887) then
	A4aA1_A4aA1b_ex(idA4aA_A4aA1_1, false)
	 else (idA4aA_A4aA1_1);

	

	(idA4aA_A4aA1_4) 
	= 
		 if ( idA4aA_A4aA1_1 = 1886) then 
		(idA4aA_A4aA1_2)
		 else
		 if ( idA4aA_A4aA1_1 = 1887) then 
		(idA4aA_A4aA1_3)
		 else (idA4aA_A4aA1_1);


	-- set state as inactive 
	idA2b_A4aA_2
	 = if (not isInner) then 0 else idA2b_A4aA_1;

	idA4aA_A4aA1_5 
	= 0;
	

	(idA4aA_A4aA1, idA2b_A4aA) 
	= (idA4aA_A4aA1_5, idA2b_A4aA_2);
	

tel






-- Entry action for state :A2b_A4aA
node A2b_A4aA_en(idA2b_A4aA_1:int;
	idA2_A2b_1:int;
	idA4aA_A4aA1_1:int;
	idA4aA_A4aA2_1:int;
	isInner:bool)

returns (idA2b_A4aA:int;
	idA2_A2b:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int);


var 	idA2b_A4aA_2, idA2b_A4aA_3, idA2b_A4aA_4, idA2b_A4aA_5, idA2b_A4aA_6:int;
	idA2_A2b_2, idA2_A2b_3, idA2_A2b_4:int;
	idA4aA_A4aA1_2, idA4aA_A4aA1_3, idA4aA_A4aA1_4, idA4aA_A4aA1_5:int;
	idA4aA_A4aA2_2, idA4aA_A4aA2_3:int;


let



	-- set state as active 
	idA2_A2b_2 
	= 1881;
	

	
-- transition trace :
	--POINT__To__A4aA_A4aA1_1
		(idA4aA_A4aA1_2, idA2b_A4aA_2) 
	= A4aA_A4aA1_en(idA4aA_A4aA1_1, idA2b_A4aA_1, false);
		

	(idA2b_A4aA_3, idA2_A2b_3, idA4aA_A4aA1_3) 
	= 

	if ( idA2b_A4aA_1 = 0) then

	 (idA2b_A4aA_2, idA2_A2b_2, idA4aA_A4aA1_2)

	 else(idA2b_A4aA_1, idA2_A2b_2, idA4aA_A4aA1_1);

	

	(idA4aA_A4aA2_2, idA2b_A4aA_4) 
	= 
	if ( idA2b_A4aA_1 = 1882) then
	A4aA_A4aA2_en(idA4aA_A4aA2_1, idA2b_A4aA_1, false)
	 else (idA4aA_A4aA2_1, idA2b_A4aA_1);

	

	(idA4aA_A4aA1_4, idA2b_A4aA_5) 
	= 
	if ( idA2b_A4aA_1 = 1885) then
	A4aA_A4aA1_en(idA4aA_A4aA1_1, idA2b_A4aA_1, false)
	 else (idA4aA_A4aA1_1, idA2b_A4aA_1);

	

	(idA2b_A4aA_6, idA2_A2b_4, idA4aA_A4aA1_5, idA4aA_A4aA2_3) 
	= 
		 if ( idA2b_A4aA_1 = 0) then 
		(idA2b_A4aA_3, idA2_A2b_3, idA4aA_A4aA1_3, idA4aA_A4aA2_1)
		 else
		 if ( idA2b_A4aA_1 = 1882) then 
		(idA2b_A4aA_4, idA2_A2b_3, idA4aA_A4aA1_3, idA4aA_A4aA2_2)
		 else
		 if ( idA2b_A4aA_1 = 1885) then 
		(idA2b_A4aA_5, idA2_A2b_3, idA4aA_A4aA1_4, idA4aA_A4aA2_2)
		 else (idA2b_A4aA_1, idA2_A2b_2, idA4aA_A4aA1_1, idA4aA_A4aA2_1);


	(idA2b_A4aA, idA2_A2b, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA2b_A4aA_6, idA2_A2b_4, idA4aA_A4aA1_5, idA4aA_A4aA2_3);
	

tel





-- Exit action for state :A2b_A4aA
node A2b_A4aA_ex(idA4aA_A4aA2_1:int;
	idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	idA2_A2b_1:int;
	isInner:bool)

returns (idA4aA_A4aA2:int;
	idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA2_A2b:int);


var 	idA4aA_A4aA2_2, idA4aA_A4aA2_3:int;
	idA2b_A4aA_2, idA2b_A4aA_3, idA2b_A4aA_4, idA2b_A4aA_5:int;
	idA4aA_A4aA1_2, idA4aA_A4aA1_3:int;
	idA2_A2b_2:int;


let



	
	(idA4aA_A4aA2_2, idA2b_A4aA_2) 
	= 
	if ( idA2b_A4aA_1 = 1882) then
	A4aA_A4aA2_ex(idA4aA_A4aA2_1, idA2b_A4aA_1, false)
	 else (idA4aA_A4aA2_1, idA2b_A4aA_1);

	

	(idA4aA_A4aA1_2, idA2b_A4aA_3) 
	= 
	if ( idA2b_A4aA_1 = 1885) then
	A4aA_A4aA1_ex(idA4aA_A4aA1_1, idA2b_A4aA_1, false)
	 else (idA4aA_A4aA1_1, idA2b_A4aA_1);

	

	(idA4aA_A4aA2_3, idA2b_A4aA_4, idA4aA_A4aA1_3) 
	= 
		 if ( idA2b_A4aA_1 = 1882) then 
		(idA4aA_A4aA2_2, idA2b_A4aA_2, idA4aA_A4aA1_1)
		 else
		 if ( idA2b_A4aA_1 = 1885) then 
		(idA4aA_A4aA2_2, idA2b_A4aA_3, idA4aA_A4aA1_2)
		 else (idA4aA_A4aA2_1, idA2b_A4aA_1, idA4aA_A4aA1_1);


	-- set state as inactive 
	idA2_A2b_2
	 = if (not isInner) then 0 else idA2_A2b_1;

	idA2b_A4aA_5 
	= 0;
	

	(idA4aA_A4aA2, idA2b_A4aA, idA4aA_A4aA1, idA2_A2b) 
	= (idA4aA_A4aA2_3, idA2b_A4aA_5, idA4aA_A4aA1_3, idA2_A2b_2);
	

tel






-- Entry action for state :A2_A2b
node A2_A2b_en(idA2_A2b_1:int;
	idA_A2_1:int;
	x:int;
	a_1:int;
	idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	idA4aA_A4aA2_1:int;
	isInner:bool)

returns (idA2_A2b:int;
	idA_A2:int;
	a:int;
	idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int);


var 	idA2_A2b_2, idA2_A2b_3, idA2_A2b_4, idA2_A2b_5:int;
	idA_A2_2, idA_A2_3, idA_A2_4:int;
	a_2, a_3, a_4:int;
	idA2b_A4aA_2, idA2b_A4aA_3, idA2b_A4aA_4, idA2b_A4aA_5:int;
	idA4aA_A4aA1_2, idA4aA_A4aA1_3, idA4aA_A4aA1_4, idA4aA_A4aA1_5:int;
	idA4aA_A4aA2_2, idA4aA_A4aA2_3, idA4aA_A4aA2_4, idA4aA_A4aA2_5:int;


let



	-- set state as active 
	idA_A2_2 
	= 1859;
	

	a_2 
	= if (not isInner) then x+4
	 else a_1;
	

	
-- transition trace :
	--POINT__To__A2b_A4aA_1
		(idA2b_A4aA_2, idA2_A2b_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2) 
	= A2b_A4aA_en(idA2b_A4aA_1, idA2_A2b_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, false);
		

	(idA2_A2b_3, idA_A2_3, a_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3) 
	= 

	if ( idA2_A2b_1 = 0) then

	 (idA2_A2b_2, idA_A2_2, a_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2)

	 else(idA2_A2b_1, idA_A2_2, a_2, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);

	

	(idA2b_A4aA_4, idA2_A2b_4, idA4aA_A4aA1_4, idA4aA_A4aA2_4) 
	= 
	if ( idA2_A2b_1 = 1881) then
	A2b_A4aA_en(idA2b_A4aA_1, idA2_A2b_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, false)
	 else (idA2b_A4aA_1, idA2_A2b_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);

	

	(idA2_A2b_5, idA_A2_4, a_4, idA2b_A4aA_5, idA4aA_A4aA1_5, idA4aA_A4aA2_5) 
	= 
		 if ( idA2_A2b_1 = 0) then 
		(idA2_A2b_3, idA_A2_3, a_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3)
		 else
		 if ( idA2_A2b_1 = 1881) then 
		(idA2_A2b_4, idA_A2_3, a_3, idA2b_A4aA_4, idA4aA_A4aA1_4, idA4aA_A4aA2_4)
		 else (idA2_A2b_1, idA_A2_2, a_2, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);


	(idA2_A2b, idA_A2, a, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA2_A2b_5, idA_A2_4, a_4, idA2b_A4aA_5, idA4aA_A4aA1_5, idA4aA_A4aA2_5);
	

tel





-- Exit action for state :A2_A2b
node A2_A2b_ex(idA4aA_A4aA2_1:int;
	idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	idA2_A2b_1:int;
	idA_A2_1:int;
	isInner:bool)

returns (idA4aA_A4aA2:int;
	idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA2_A2b:int;
	idA_A2:int);


var 	idA4aA_A4aA2_2, idA4aA_A4aA2_3:int;
	idA2b_A4aA_2, idA2b_A4aA_3:int;
	idA4aA_A4aA1_2, idA4aA_A4aA1_3:int;
	idA2_A2b_2, idA2_A2b_3, idA2_A2b_4:int;
	idA_A2_2:int;


let



	
	(idA4aA_A4aA2_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA2_A2b_2) 
	= 
	if ( idA2_A2b_1 = 1881) then
	A2b_A4aA_ex(idA4aA_A4aA2_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA2_A2b_1, false)
	 else (idA4aA_A4aA2_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA2_A2b_1);

	

	(idA4aA_A4aA2_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA2_A2b_3) 
	= 
		 if ( idA2_A2b_1 = 1881) then 
		(idA4aA_A4aA2_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA2_A2b_2)
		 else (idA4aA_A4aA2_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA2_A2b_1);


	-- set state as inactive 
	idA_A2_2
	 = if (not isInner) then 0 else idA_A2_1;

	idA2_A2b_4 
	= 0;
	

	(idA4aA_A4aA2, idA2b_A4aA, idA4aA_A4aA1, idA2_A2b, idA_A2) 
	= (idA4aA_A4aA2_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA2_A2b_4, idA_A2_2);
	

tel






-- Entry action for state :A_A2
node A_A2_en(idA_A2_1:int;
	idHierarchy2_A_1:int;
	a_1:int;
	idA2_A2a_1:int;
	idA2aA_A2aA1_1:int;
	idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	x:int;
	idA2_A2b_1:int;
	idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	idA4aA_A4aA2_1:int;
	isInner:bool)

returns (idA_A2:int;
	idHierarchy2_A:int;
	a:int;
	idA2_A2a:int;
	idA2aA_A2aA1:int;
	idA2aA_A2aA2:int;
	idA2a_A2aA:int;
	idA2_A2b:int;
	idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int);


var 	idA_A2_2, idA_A2_3, idA_A2_4, idA_A2_5, idA_A2_6:int;
	idHierarchy2_A_2, idHierarchy2_A_3, idHierarchy2_A_4:int;
	a_2, a_3, a_4, a_5, a_6:int;
	idA2_A2a_2, idA2_A2a_3, idA2_A2a_4, idA2_A2a_5:int;
	idA2aA_A2aA1_2, idA2aA_A2aA1_3, idA2aA_A2aA1_4, idA2aA_A2aA1_5:int;
	idA2aA_A2aA2_2, idA2aA_A2aA2_3, idA2aA_A2aA2_4, idA2aA_A2aA2_5:int;
	idA2a_A2aA_2, idA2a_A2aA_3, idA2a_A2aA_4, idA2a_A2aA_5:int;
	idA2_A2b_2, idA2_A2b_3:int;
	idA2b_A4aA_2, idA2b_A4aA_3:int;
	idA4aA_A4aA1_2, idA4aA_A4aA1_3:int;
	idA4aA_A4aA2_2, idA4aA_A4aA2_3:int;


let



	-- set state as active 
	idHierarchy2_A_2 
	= 1857;
	

	
-- transition trace :
	--POINT__To__A2_A2a_1
		(idA2_A2a_2, idA_A2_2, a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2) 
	= A2_A2a_en(idA2_A2a_1, idA_A2_1, x, a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, false);
		

	(idA_A2_3, idHierarchy2_A_3, a_3, idA2_A2a_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3) 
	= 

	if ( idA_A2_1 = 0) then

	 (idA_A2_2, idHierarchy2_A_2, a_2, idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2)

	 else(idA_A2_1, idHierarchy2_A_2, a_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1);

	

	(idA2_A2a_4, idA_A2_4, a_4, idA2aA_A2aA1_4, idA2aA_A2aA2_4, idA2a_A2aA_4) 
	= 
	if ( idA_A2_1 = 1858) then
	A2_A2a_en(idA2_A2a_1, idA_A2_1, x, a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, false)
	 else (idA2_A2a_1, idA_A2_1, a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1);

	

	(idA2_A2b_2, idA_A2_5, a_5, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2) 
	= 
	if ( idA_A2_1 = 1859) then
	A2_A2b_en(idA2_A2b_1, idA_A2_1, x, a_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, false)
	 else (idA2_A2b_1, idA_A2_1, a_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);

	

	(idA_A2_6, idHierarchy2_A_4, a_6, idA2_A2a_5, idA2aA_A2aA1_5, idA2aA_A2aA2_5, idA2a_A2aA_5, idA2_A2b_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3) 
	= 
		 if ( idA_A2_1 = 0) then 
		(idA_A2_3, idHierarchy2_A_3, a_3, idA2_A2a_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1)
		 else
		 if ( idA_A2_1 = 1858) then 
		(idA_A2_4, idHierarchy2_A_3, a_4, idA2_A2a_4, idA2aA_A2aA1_4, idA2aA_A2aA2_4, idA2a_A2aA_4, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1)
		 else
		 if ( idA_A2_1 = 1859) then 
		(idA_A2_5, idHierarchy2_A_3, a_5, idA2_A2a_4, idA2aA_A2aA1_4, idA2aA_A2aA2_4, idA2a_A2aA_4, idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2)
		 else (idA_A2_1, idHierarchy2_A_2, a_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);


	(idA_A2, idHierarchy2_A, a, idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA_A2_6, idHierarchy2_A_4, a_6, idA2_A2a_5, idA2aA_A2aA1_5, idA2aA_A2aA2_5, idA2a_A2aA_5, idA2_A2b_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3);
	

tel





-- Exit action for state :A_A2
node A_A2_ex(idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	idA2aA_A2aA1_1:int;
	idA2_A2a_1:int;
	idA_A2_1:int;
	idA2_A2b_1:int;
	idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	idA4aA_A4aA2_1:int;
	idHierarchy2_A_1:int;
	isInner:bool)

returns (idA2aA_A2aA2:int;
	idA2a_A2aA:int;
	idA2aA_A2aA1:int;
	idA2_A2a:int;
	idA_A2:int;
	idA2_A2b:int;
	idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int;
	idHierarchy2_A:int);


var 	idA2aA_A2aA2_2, idA2aA_A2aA2_3:int;
	idA2a_A2aA_2, idA2a_A2aA_3:int;
	idA2aA_A2aA1_2, idA2aA_A2aA1_3:int;
	idA2_A2a_2, idA2_A2a_3:int;
	idA_A2_2, idA_A2_3, idA_A2_4, idA_A2_5:int;
	idA2_A2b_2, idA2_A2b_3:int;
	idA2b_A4aA_2, idA2b_A4aA_3:int;
	idA4aA_A4aA1_2, idA4aA_A4aA1_3:int;
	idA4aA_A4aA2_2, idA4aA_A4aA2_3:int;
	idHierarchy2_A_2:int;


let



	
	(idA2aA_A2aA2_2, idA2a_A2aA_2, idA2aA_A2aA1_2, idA2_A2a_2, idA_A2_2) 
	= 
	if ( idA_A2_1 = 1858) then
	A2_A2a_ex(idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1, idA2_A2a_1, idA_A2_1, false)
	 else (idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1, idA2_A2a_1, idA_A2_1);

	

	(idA4aA_A4aA2_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA2_A2b_2, idA_A2_3) 
	= 
	if ( idA_A2_1 = 1859) then
	A2_A2b_ex(idA4aA_A4aA2_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA2_A2b_1, idA_A2_1, false)
	 else (idA4aA_A4aA2_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA2_A2b_1, idA_A2_1);

	

	(idA2aA_A2aA2_3, idA2a_A2aA_3, idA2aA_A2aA1_3, idA2_A2a_3, idA_A2_4, idA2_A2b_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3) 
	= 
		 if ( idA_A2_1 = 1858) then 
		(idA2aA_A2aA2_2, idA2a_A2aA_2, idA2aA_A2aA1_2, idA2_A2a_2, idA_A2_2, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1)
		 else
		 if ( idA_A2_1 = 1859) then 
		(idA2aA_A2aA2_2, idA2a_A2aA_2, idA2aA_A2aA1_2, idA2_A2a_2, idA_A2_3, idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2)
		 else (idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1, idA2_A2a_1, idA_A2_1, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);


	-- set state as inactive 
	idHierarchy2_A_2
	 = if (not isInner) then 0 else idHierarchy2_A_1;

	idA_A2_5 
	= 0;
	

	(idA2aA_A2aA2, idA2a_A2aA, idA2aA_A2aA1, idA2_A2a, idA_A2, idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2, idHierarchy2_A) 
	= (idA2aA_A2aA2_3, idA2a_A2aA_3, idA2aA_A2aA1_3, idA2_A2a_3, idA_A2_5, idA2_A2b_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3, idHierarchy2_A_2);
	

tel






-- Entry action for state :A1aA2_A1Aa2a
node A1aA2_A1Aa2a_en(idA1aA_A1aA2_1:int;
	isInner:bool)

returns (idA1aA_A1aA2:int);


var 	idA1aA_A1aA2_2:int;


let



	-- set state as active 
	idA1aA_A1aA2_2 
	= 1862;
	

	(idA1aA_A1aA2) 
	= (idA1aA_A1aA2_2);
	

tel





-- Exit action for state :A1aA2_A1Aa2a
node A1aA2_A1Aa2a_ex(idA1aA_A1aA2_1:int;
	isInner:bool)

returns (idA1aA_A1aA2:int);


var 	idA1aA_A1aA2_2:int;


let



	-- set state as inactive 
	idA1aA_A1aA2_2
	 = if (not isInner) then 0 else idA1aA_A1aA2_1;


	(idA1aA_A1aA2) 
	= (idA1aA_A1aA2_2);
	

tel






-- Entry action for state :A1aA2_A1aA2b
node A1aA2_A1aA2b_en(idA1aA_A1aA2_1:int;
	isInner:bool)

returns (idA1aA_A1aA2:int);


var 	idA1aA_A1aA2_2:int;


let



	-- set state as active 
	idA1aA_A1aA2_2 
	= 1863;
	

	(idA1aA_A1aA2) 
	= (idA1aA_A1aA2_2);
	

tel





-- Exit action for state :A1aA2_A1aA2b
node A1aA2_A1aA2b_ex(idA1aA_A1aA2_1:int;
	isInner:bool)

returns (idA1aA_A1aA2:int);


var 	idA1aA_A1aA2_2:int;


let



	-- set state as inactive 
	idA1aA_A1aA2_2
	 = if (not isInner) then 0 else idA1aA_A1aA2_1;


	(idA1aA_A1aA2) 
	= (idA1aA_A1aA2_2);
	

tel






-- Entry action for state :A1aA_A1aA2
node A1aA_A1aA2_en(idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	isInner:bool)

returns (idA1aA_A1aA2:int;
	idA1a_A1aA:int);


var 	idA1aA_A1aA2_2, idA1aA_A1aA2_3, idA1aA_A1aA2_4, idA1aA_A1aA2_5, idA1aA_A1aA2_6:int;
	idA1a_A1aA_2, idA1a_A1aA_3, idA1a_A1aA_4:int;


let



	-- set state as active 
	idA1a_A1aA_2 
	= 1861;
	

	
-- transition trace :
	--POINT__To__A1aA2_A1Aa2a_1
		(idA1aA_A1aA2_2) 
	= A1aA2_A1Aa2a_en(idA1aA_A1aA2_1, false);
		

	(idA1aA_A1aA2_3, idA1a_A1aA_3) 
	= 

	if ( idA1aA_A1aA2_1 = 0) then

	 (idA1aA_A1aA2_2, idA1a_A1aA_2)

	 else(idA1aA_A1aA2_1, idA1a_A1aA_2);

	

	(idA1aA_A1aA2_4) 
	= 
	if ( idA1aA_A1aA2_1 = 1862) then
	A1aA2_A1Aa2a_en(idA1aA_A1aA2_1, false)
	 else (idA1aA_A1aA2_1);

	

	(idA1aA_A1aA2_5) 
	= 
	if ( idA1aA_A1aA2_1 = 1863) then
	A1aA2_A1aA2b_en(idA1aA_A1aA2_1, false)
	 else (idA1aA_A1aA2_1);

	

	(idA1aA_A1aA2_6, idA1a_A1aA_4) 
	= 
		 if ( idA1aA_A1aA2_1 = 0) then 
		(idA1aA_A1aA2_3, idA1a_A1aA_3)
		 else
		 if ( idA1aA_A1aA2_1 = 1862) then 
		(idA1aA_A1aA2_4, idA1a_A1aA_3)
		 else
		 if ( idA1aA_A1aA2_1 = 1863) then 
		(idA1aA_A1aA2_5, idA1a_A1aA_3)
		 else (idA1aA_A1aA2_1, idA1a_A1aA_2);


	(idA1aA_A1aA2, idA1a_A1aA) 
	= (idA1aA_A1aA2_6, idA1a_A1aA_4);
	

tel





-- Exit action for state :A1aA_A1aA2
node A1aA_A1aA2_ex(idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	isInner:bool)

returns (idA1aA_A1aA2:int;
	idA1a_A1aA:int);


var 	idA1aA_A1aA2_2, idA1aA_A1aA2_3, idA1aA_A1aA2_4, idA1aA_A1aA2_5:int;
	idA1a_A1aA_2:int;


let



	
	(idA1aA_A1aA2_2) 
	= 
	if ( idA1aA_A1aA2_1 = 1862) then
	A1aA2_A1Aa2a_ex(idA1aA_A1aA2_1, false)
	 else (idA1aA_A1aA2_1);

	

	(idA1aA_A1aA2_3) 
	= 
	if ( idA1aA_A1aA2_1 = 1863) then
	A1aA2_A1aA2b_ex(idA1aA_A1aA2_1, false)
	 else (idA1aA_A1aA2_1);

	

	(idA1aA_A1aA2_4) 
	= 
		 if ( idA1aA_A1aA2_1 = 1862) then 
		(idA1aA_A1aA2_2)
		 else
		 if ( idA1aA_A1aA2_1 = 1863) then 
		(idA1aA_A1aA2_3)
		 else (idA1aA_A1aA2_1);


	-- set state as inactive 
	idA1a_A1aA_2
	 = if (not isInner) then 0 else idA1a_A1aA_1;

	idA1aA_A1aA2_5 
	= 0;
	

	(idA1aA_A1aA2, idA1a_A1aA) 
	= (idA1aA_A1aA2_5, idA1a_A1aA_2);
	

tel






-- Entry action for state :A1aA1_A1aA1a
node A1aA1_A1aA1a_en(idA1aA_A1aA1_1:int;
	isInner:bool)

returns (idA1aA_A1aA1:int);


var 	idA1aA_A1aA1_2:int;


let



	-- set state as active 
	idA1aA_A1aA1_2 
	= 1865;
	

	(idA1aA_A1aA1) 
	= (idA1aA_A1aA1_2);
	

tel





-- Exit action for state :A1aA1_A1aA1a
node A1aA1_A1aA1a_ex(idA1aA_A1aA1_1:int;
	isInner:bool)

returns (idA1aA_A1aA1:int);


var 	idA1aA_A1aA1_2:int;


let



	-- set state as inactive 
	idA1aA_A1aA1_2
	 = if (not isInner) then 0 else idA1aA_A1aA1_1;


	(idA1aA_A1aA1) 
	= (idA1aA_A1aA1_2);
	

tel






-- Entry action for state :A1aA1_A1aA1b
node A1aA1_A1aA1b_en(idA1aA_A1aA1_1:int;
	isInner:bool)

returns (idA1aA_A1aA1:int);


var 	idA1aA_A1aA1_2:int;


let



	-- set state as active 
	idA1aA_A1aA1_2 
	= 1866;
	

	(idA1aA_A1aA1) 
	= (idA1aA_A1aA1_2);
	

tel





-- Exit action for state :A1aA1_A1aA1b
node A1aA1_A1aA1b_ex(idA1aA_A1aA1_1:int;
	isInner:bool)

returns (idA1aA_A1aA1:int);


var 	idA1aA_A1aA1_2:int;


let



	-- set state as inactive 
	idA1aA_A1aA1_2
	 = if (not isInner) then 0 else idA1aA_A1aA1_1;


	(idA1aA_A1aA1) 
	= (idA1aA_A1aA1_2);
	

tel






-- Entry action for state :A1aA_A1aA1
node A1aA_A1aA1_en(idA1aA_A1aA1_1:int;
	idA1a_A1aA_1:int;
	isInner:bool)

returns (idA1aA_A1aA1:int;
	idA1a_A1aA:int);


var 	idA1aA_A1aA1_2, idA1aA_A1aA1_3, idA1aA_A1aA1_4, idA1aA_A1aA1_5, idA1aA_A1aA1_6:int;
	idA1a_A1aA_2, idA1a_A1aA_3, idA1a_A1aA_4:int;


let



	-- set state as active 
	idA1a_A1aA_2 
	= 1864;
	

	
-- transition trace :
	--POINT__To__A1aA1_A1aA1a_1
		(idA1aA_A1aA1_2) 
	= A1aA1_A1aA1a_en(idA1aA_A1aA1_1, false);
		

	(idA1aA_A1aA1_3, idA1a_A1aA_3) 
	= 

	if ( idA1aA_A1aA1_1 = 0) then

	 (idA1aA_A1aA1_2, idA1a_A1aA_2)

	 else(idA1aA_A1aA1_1, idA1a_A1aA_2);

	

	(idA1aA_A1aA1_4) 
	= 
	if ( idA1aA_A1aA1_1 = 1865) then
	A1aA1_A1aA1a_en(idA1aA_A1aA1_1, false)
	 else (idA1aA_A1aA1_1);

	

	(idA1aA_A1aA1_5) 
	= 
	if ( idA1aA_A1aA1_1 = 1866) then
	A1aA1_A1aA1b_en(idA1aA_A1aA1_1, false)
	 else (idA1aA_A1aA1_1);

	

	(idA1aA_A1aA1_6, idA1a_A1aA_4) 
	= 
		 if ( idA1aA_A1aA1_1 = 0) then 
		(idA1aA_A1aA1_3, idA1a_A1aA_3)
		 else
		 if ( idA1aA_A1aA1_1 = 1865) then 
		(idA1aA_A1aA1_4, idA1a_A1aA_3)
		 else
		 if ( idA1aA_A1aA1_1 = 1866) then 
		(idA1aA_A1aA1_5, idA1a_A1aA_3)
		 else (idA1aA_A1aA1_1, idA1a_A1aA_2);


	(idA1aA_A1aA1, idA1a_A1aA) 
	= (idA1aA_A1aA1_6, idA1a_A1aA_4);
	

tel





-- Exit action for state :A1aA_A1aA1
node A1aA_A1aA1_ex(idA1aA_A1aA1_1:int;
	idA1a_A1aA_1:int;
	isInner:bool)

returns (idA1aA_A1aA1:int;
	idA1a_A1aA:int);


var 	idA1aA_A1aA1_2, idA1aA_A1aA1_3, idA1aA_A1aA1_4, idA1aA_A1aA1_5:int;
	idA1a_A1aA_2:int;


let



	
	(idA1aA_A1aA1_2) 
	= 
	if ( idA1aA_A1aA1_1 = 1865) then
	A1aA1_A1aA1a_ex(idA1aA_A1aA1_1, false)
	 else (idA1aA_A1aA1_1);

	

	(idA1aA_A1aA1_3) 
	= 
	if ( idA1aA_A1aA1_1 = 1866) then
	A1aA1_A1aA1b_ex(idA1aA_A1aA1_1, false)
	 else (idA1aA_A1aA1_1);

	

	(idA1aA_A1aA1_4) 
	= 
		 if ( idA1aA_A1aA1_1 = 1865) then 
		(idA1aA_A1aA1_2)
		 else
		 if ( idA1aA_A1aA1_1 = 1866) then 
		(idA1aA_A1aA1_3)
		 else (idA1aA_A1aA1_1);


	-- set state as inactive 
	idA1a_A1aA_2
	 = if (not isInner) then 0 else idA1a_A1aA_1;

	idA1aA_A1aA1_5 
	= 0;
	

	(idA1aA_A1aA1, idA1a_A1aA) 
	= (idA1aA_A1aA1_5, idA1a_A1aA_2);
	

tel






-- Entry action for state :A1a_A1aA
node A1a_A1aA_en(idA1a_A1aA_1:int;
	idA1_A1a_1:int;
	idA1aA_A1aA1_1:int;
	idA1aA_A1aA2_1:int;
	isInner:bool)

returns (idA1a_A1aA:int;
	idA1_A1a:int;
	idA1aA_A1aA1:int;
	idA1aA_A1aA2:int);


var 	idA1a_A1aA_2, idA1a_A1aA_3, idA1a_A1aA_4, idA1a_A1aA_5, idA1a_A1aA_6:int;
	idA1_A1a_2, idA1_A1a_3, idA1_A1a_4:int;
	idA1aA_A1aA1_2, idA1aA_A1aA1_3, idA1aA_A1aA1_4, idA1aA_A1aA1_5:int;
	idA1aA_A1aA2_2, idA1aA_A1aA2_3:int;


let



	-- set state as active 
	idA1_A1a_2 
	= 1860;
	

	
-- transition trace :
	--POINT__To__A1aA_A1aA1_1
		(idA1aA_A1aA1_2, idA1a_A1aA_2) 
	= A1aA_A1aA1_en(idA1aA_A1aA1_1, idA1a_A1aA_1, false);
		

	(idA1a_A1aA_3, idA1_A1a_3, idA1aA_A1aA1_3) 
	= 

	if ( idA1a_A1aA_1 = 0) then

	 (idA1a_A1aA_2, idA1_A1a_2, idA1aA_A1aA1_2)

	 else(idA1a_A1aA_1, idA1_A1a_2, idA1aA_A1aA1_1);

	

	(idA1aA_A1aA2_2, idA1a_A1aA_4) 
	= 
	if ( idA1a_A1aA_1 = 1861) then
	A1aA_A1aA2_en(idA1aA_A1aA2_1, idA1a_A1aA_1, false)
	 else (idA1aA_A1aA2_1, idA1a_A1aA_1);

	

	(idA1aA_A1aA1_4, idA1a_A1aA_5) 
	= 
	if ( idA1a_A1aA_1 = 1864) then
	A1aA_A1aA1_en(idA1aA_A1aA1_1, idA1a_A1aA_1, false)
	 else (idA1aA_A1aA1_1, idA1a_A1aA_1);

	

	(idA1a_A1aA_6, idA1_A1a_4, idA1aA_A1aA1_5, idA1aA_A1aA2_3) 
	= 
		 if ( idA1a_A1aA_1 = 0) then 
		(idA1a_A1aA_3, idA1_A1a_3, idA1aA_A1aA1_3, idA1aA_A1aA2_1)
		 else
		 if ( idA1a_A1aA_1 = 1861) then 
		(idA1a_A1aA_4, idA1_A1a_3, idA1aA_A1aA1_3, idA1aA_A1aA2_2)
		 else
		 if ( idA1a_A1aA_1 = 1864) then 
		(idA1a_A1aA_5, idA1_A1a_3, idA1aA_A1aA1_4, idA1aA_A1aA2_2)
		 else (idA1a_A1aA_1, idA1_A1a_2, idA1aA_A1aA1_1, idA1aA_A1aA2_1);


	(idA1a_A1aA, idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2) 
	= (idA1a_A1aA_6, idA1_A1a_4, idA1aA_A1aA1_5, idA1aA_A1aA2_3);
	

tel





-- Exit action for state :A1a_A1aA
node A1a_A1aA_ex(idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	idA1aA_A1aA1_1:int;
	idA1_A1a_1:int;
	isInner:bool)

returns (idA1aA_A1aA2:int;
	idA1a_A1aA:int;
	idA1aA_A1aA1:int;
	idA1_A1a:int);


var 	idA1aA_A1aA2_2, idA1aA_A1aA2_3:int;
	idA1a_A1aA_2, idA1a_A1aA_3, idA1a_A1aA_4, idA1a_A1aA_5:int;
	idA1aA_A1aA1_2, idA1aA_A1aA1_3:int;
	idA1_A1a_2:int;


let



	
	(idA1aA_A1aA2_2, idA1a_A1aA_2) 
	= 
	if ( idA1a_A1aA_1 = 1861) then
	A1aA_A1aA2_ex(idA1aA_A1aA2_1, idA1a_A1aA_1, false)
	 else (idA1aA_A1aA2_1, idA1a_A1aA_1);

	

	(idA1aA_A1aA1_2, idA1a_A1aA_3) 
	= 
	if ( idA1a_A1aA_1 = 1864) then
	A1aA_A1aA1_ex(idA1aA_A1aA1_1, idA1a_A1aA_1, false)
	 else (idA1aA_A1aA1_1, idA1a_A1aA_1);

	

	(idA1aA_A1aA2_3, idA1a_A1aA_4, idA1aA_A1aA1_3) 
	= 
		 if ( idA1a_A1aA_1 = 1861) then 
		(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_1)
		 else
		 if ( idA1a_A1aA_1 = 1864) then 
		(idA1aA_A1aA2_2, idA1a_A1aA_3, idA1aA_A1aA1_2)
		 else (idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1);


	-- set state as inactive 
	idA1_A1a_2
	 = if (not isInner) then 0 else idA1_A1a_1;

	idA1a_A1aA_5 
	= 0;
	

	(idA1aA_A1aA2, idA1a_A1aA, idA1aA_A1aA1, idA1_A1a) 
	= (idA1aA_A1aA2_3, idA1a_A1aA_5, idA1aA_A1aA1_3, idA1_A1a_2);
	

tel






-- Entry action for state :A1_A1a
node A1_A1a_en(idA1_A1a_1:int;
	idA_A1_1:int;
	x:int;
	a_1:int;
	idA1aA_A1aA1_1:int;
	idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	isInner:bool)

returns (idA1_A1a:int;
	idA_A1:int;
	a:int;
	idA1aA_A1aA1:int;
	idA1aA_A1aA2:int;
	idA1a_A1aA:int);


var 	idA1_A1a_2, idA1_A1a_3, idA1_A1a_4, idA1_A1a_5:int;
	idA_A1_2, idA_A1_3, idA_A1_4:int;
	a_2, a_3, a_4:int;
	idA1aA_A1aA1_2, idA1aA_A1aA1_3, idA1aA_A1aA1_4, idA1aA_A1aA1_5:int;
	idA1aA_A1aA2_2, idA1aA_A1aA2_3, idA1aA_A1aA2_4, idA1aA_A1aA2_5:int;
	idA1a_A1aA_2, idA1a_A1aA_3, idA1a_A1aA_4, idA1a_A1aA_5:int;


let



	-- set state as active 
	idA_A1_2 
	= 1855;
	

	a_2 
	= if (not isInner) then x+1
	 else a_1;
	

	
-- transition trace :
	--POINT__To__A1a_A1aA_1
		(idA1a_A1aA_2, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2) 
	= A1a_A1aA_en(idA1a_A1aA_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, false);
		

	(idA1_A1a_3, idA_A1_3, a_3, idA1aA_A1aA1_3, idA1aA_A1aA2_3, idA1a_A1aA_3) 
	= 

	if ( idA1_A1a_1 = 0) then

	 (idA1_A1a_2, idA_A1_2, a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2)

	 else(idA1_A1a_1, idA_A1_2, a_2, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1);

	

	(idA1a_A1aA_4, idA1_A1a_4, idA1aA_A1aA1_4, idA1aA_A1aA2_4) 
	= 
	if ( idA1_A1a_1 = 1860) then
	A1a_A1aA_en(idA1a_A1aA_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, false)
	 else (idA1a_A1aA_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1);

	

	(idA1_A1a_5, idA_A1_4, a_4, idA1aA_A1aA1_5, idA1aA_A1aA2_5, idA1a_A1aA_5) 
	= 
		 if ( idA1_A1a_1 = 0) then 
		(idA1_A1a_3, idA_A1_3, a_3, idA1aA_A1aA1_3, idA1aA_A1aA2_3, idA1a_A1aA_3)
		 else
		 if ( idA1_A1a_1 = 1860) then 
		(idA1_A1a_4, idA_A1_3, a_3, idA1aA_A1aA1_4, idA1aA_A1aA2_4, idA1a_A1aA_4)
		 else (idA1_A1a_1, idA_A1_2, a_2, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1);


	(idA1_A1a, idA_A1, a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA) 
	= (idA1_A1a_5, idA_A1_4, a_4, idA1aA_A1aA1_5, idA1aA_A1aA2_5, idA1a_A1aA_5);
	

tel





-- Exit action for state :A1_A1a
node A1_A1a_ex(idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	idA1aA_A1aA1_1:int;
	idA1_A1a_1:int;
	idA_A1_1:int;
	isInner:bool)

returns (idA1aA_A1aA2:int;
	idA1a_A1aA:int;
	idA1aA_A1aA1:int;
	idA1_A1a:int;
	idA_A1:int);


var 	idA1aA_A1aA2_2, idA1aA_A1aA2_3:int;
	idA1a_A1aA_2, idA1a_A1aA_3:int;
	idA1aA_A1aA1_2, idA1aA_A1aA1_3:int;
	idA1_A1a_2, idA1_A1a_3, idA1_A1a_4:int;
	idA_A1_2:int;


let



	
	(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_2, idA1_A1a_2) 
	= 
	if ( idA1_A1a_1 = 1860) then
	A1a_A1aA_ex(idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1, false)
	 else (idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1);

	

	(idA1aA_A1aA2_3, idA1a_A1aA_3, idA1aA_A1aA1_3, idA1_A1a_3) 
	= 
		 if ( idA1_A1a_1 = 1860) then 
		(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_2, idA1_A1a_2)
		 else (idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1);


	-- set state as inactive 
	idA_A1_2
	 = if (not isInner) then 0 else idA_A1_1;

	idA1_A1a_4 
	= 0;
	

	(idA1aA_A1aA2, idA1a_A1aA, idA1aA_A1aA1, idA1_A1a, idA_A1) 
	= (idA1aA_A1aA2_3, idA1a_A1aA_3, idA1aA_A1aA1_3, idA1_A1a_4, idA_A1_2);
	

tel






-- Entry action for state :A3aA2_A3Aa2a
node A3aA2_A3Aa2a_en(idA3aA_A3aA2_1:int;
	isInner:bool)

returns (idA3aA_A3aA2:int);


var 	idA3aA_A3aA2_2:int;


let



	-- set state as active 
	idA3aA_A3aA2_2 
	= 1876;
	

	(idA3aA_A3aA2) 
	= (idA3aA_A3aA2_2);
	

tel





-- Exit action for state :A3aA2_A3Aa2a
node A3aA2_A3Aa2a_ex(idA3aA_A3aA2_1:int;
	isInner:bool)

returns (idA3aA_A3aA2:int);


var 	idA3aA_A3aA2_2:int;


let



	-- set state as inactive 
	idA3aA_A3aA2_2
	 = if (not isInner) then 0 else idA3aA_A3aA2_1;


	(idA3aA_A3aA2) 
	= (idA3aA_A3aA2_2);
	

tel






-- Entry action for state :A3aA2_A3aA2b
node A3aA2_A3aA2b_en(idA3aA_A3aA2_1:int;
	isInner:bool)

returns (idA3aA_A3aA2:int);


var 	idA3aA_A3aA2_2:int;


let



	-- set state as active 
	idA3aA_A3aA2_2 
	= 1877;
	

	(idA3aA_A3aA2) 
	= (idA3aA_A3aA2_2);
	

tel





-- Exit action for state :A3aA2_A3aA2b
node A3aA2_A3aA2b_ex(idA3aA_A3aA2_1:int;
	isInner:bool)

returns (idA3aA_A3aA2:int);


var 	idA3aA_A3aA2_2:int;


let



	-- set state as inactive 
	idA3aA_A3aA2_2
	 = if (not isInner) then 0 else idA3aA_A3aA2_1;


	(idA3aA_A3aA2) 
	= (idA3aA_A3aA2_2);
	

tel






-- Entry action for state :A3aA_A3aA2
node A3aA_A3aA2_en(idA3aA_A3aA2_1:int;
	idA1b_A3aA_1:int;
	isInner:bool)

returns (idA3aA_A3aA2:int;
	idA1b_A3aA:int);


var 	idA3aA_A3aA2_2, idA3aA_A3aA2_3, idA3aA_A3aA2_4, idA3aA_A3aA2_5, idA3aA_A3aA2_6:int;
	idA1b_A3aA_2, idA1b_A3aA_3, idA1b_A3aA_4:int;


let



	-- set state as active 
	idA1b_A3aA_2 
	= 1875;
	

	
-- transition trace :
	--POINT__To__A3aA2_A3Aa2a_1
		(idA3aA_A3aA2_2) 
	= A3aA2_A3Aa2a_en(idA3aA_A3aA2_1, false);
		

	(idA3aA_A3aA2_3, idA1b_A3aA_3) 
	= 

	if ( idA3aA_A3aA2_1 = 0) then

	 (idA3aA_A3aA2_2, idA1b_A3aA_2)

	 else(idA3aA_A3aA2_1, idA1b_A3aA_2);

	

	(idA3aA_A3aA2_4) 
	= 
	if ( idA3aA_A3aA2_1 = 1876) then
	A3aA2_A3Aa2a_en(idA3aA_A3aA2_1, false)
	 else (idA3aA_A3aA2_1);

	

	(idA3aA_A3aA2_5) 
	= 
	if ( idA3aA_A3aA2_1 = 1877) then
	A3aA2_A3aA2b_en(idA3aA_A3aA2_1, false)
	 else (idA3aA_A3aA2_1);

	

	(idA3aA_A3aA2_6, idA1b_A3aA_4) 
	= 
		 if ( idA3aA_A3aA2_1 = 0) then 
		(idA3aA_A3aA2_3, idA1b_A3aA_3)
		 else
		 if ( idA3aA_A3aA2_1 = 1876) then 
		(idA3aA_A3aA2_4, idA1b_A3aA_3)
		 else
		 if ( idA3aA_A3aA2_1 = 1877) then 
		(idA3aA_A3aA2_5, idA1b_A3aA_3)
		 else (idA3aA_A3aA2_1, idA1b_A3aA_2);


	(idA3aA_A3aA2, idA1b_A3aA) 
	= (idA3aA_A3aA2_6, idA1b_A3aA_4);
	

tel





-- Exit action for state :A3aA_A3aA2
node A3aA_A3aA2_ex(idA3aA_A3aA2_1:int;
	idA1b_A3aA_1:int;
	isInner:bool)

returns (idA3aA_A3aA2:int;
	idA1b_A3aA:int);


var 	idA3aA_A3aA2_2, idA3aA_A3aA2_3, idA3aA_A3aA2_4, idA3aA_A3aA2_5:int;
	idA1b_A3aA_2:int;


let



	
	(idA3aA_A3aA2_2) 
	= 
	if ( idA3aA_A3aA2_1 = 1876) then
	A3aA2_A3Aa2a_ex(idA3aA_A3aA2_1, false)
	 else (idA3aA_A3aA2_1);

	

	(idA3aA_A3aA2_3) 
	= 
	if ( idA3aA_A3aA2_1 = 1877) then
	A3aA2_A3aA2b_ex(idA3aA_A3aA2_1, false)
	 else (idA3aA_A3aA2_1);

	

	(idA3aA_A3aA2_4) 
	= 
		 if ( idA3aA_A3aA2_1 = 1876) then 
		(idA3aA_A3aA2_2)
		 else
		 if ( idA3aA_A3aA2_1 = 1877) then 
		(idA3aA_A3aA2_3)
		 else (idA3aA_A3aA2_1);


	-- set state as inactive 
	idA1b_A3aA_2
	 = if (not isInner) then 0 else idA1b_A3aA_1;

	idA3aA_A3aA2_5 
	= 0;
	

	(idA3aA_A3aA2, idA1b_A3aA) 
	= (idA3aA_A3aA2_5, idA1b_A3aA_2);
	

tel






-- Entry action for state :A3aA1_A3aA1a
node A3aA1_A3aA1a_en(idA3aA_A3aA1_1:int;
	isInner:bool)

returns (idA3aA_A3aA1:int);


var 	idA3aA_A3aA1_2:int;


let



	-- set state as active 
	idA3aA_A3aA1_2 
	= 1879;
	

	(idA3aA_A3aA1) 
	= (idA3aA_A3aA1_2);
	

tel





-- Exit action for state :A3aA1_A3aA1a
node A3aA1_A3aA1a_ex(idA3aA_A3aA1_1:int;
	isInner:bool)

returns (idA3aA_A3aA1:int);


var 	idA3aA_A3aA1_2:int;


let



	-- set state as inactive 
	idA3aA_A3aA1_2
	 = if (not isInner) then 0 else idA3aA_A3aA1_1;


	(idA3aA_A3aA1) 
	= (idA3aA_A3aA1_2);
	

tel






-- Entry action for state :A3aA1_A3aA1b
node A3aA1_A3aA1b_en(idA3aA_A3aA1_1:int;
	isInner:bool)

returns (idA3aA_A3aA1:int);


var 	idA3aA_A3aA1_2:int;


let



	-- set state as active 
	idA3aA_A3aA1_2 
	= 1880;
	

	(idA3aA_A3aA1) 
	= (idA3aA_A3aA1_2);
	

tel





-- Exit action for state :A3aA1_A3aA1b
node A3aA1_A3aA1b_ex(idA3aA_A3aA1_1:int;
	isInner:bool)

returns (idA3aA_A3aA1:int);


var 	idA3aA_A3aA1_2:int;


let



	-- set state as inactive 
	idA3aA_A3aA1_2
	 = if (not isInner) then 0 else idA3aA_A3aA1_1;


	(idA3aA_A3aA1) 
	= (idA3aA_A3aA1_2);
	

tel






-- Entry action for state :A3aA_A3aA1
node A3aA_A3aA1_en(idA3aA_A3aA1_1:int;
	idA1b_A3aA_1:int;
	isInner:bool)

returns (idA3aA_A3aA1:int;
	idA1b_A3aA:int);


var 	idA3aA_A3aA1_2, idA3aA_A3aA1_3, idA3aA_A3aA1_4, idA3aA_A3aA1_5, idA3aA_A3aA1_6:int;
	idA1b_A3aA_2, idA1b_A3aA_3, idA1b_A3aA_4:int;


let



	-- set state as active 
	idA1b_A3aA_2 
	= 1878;
	

	
-- transition trace :
	--POINT__To__A3aA1_A3aA1a_1
		(idA3aA_A3aA1_2) 
	= A3aA1_A3aA1a_en(idA3aA_A3aA1_1, false);
		

	(idA3aA_A3aA1_3, idA1b_A3aA_3) 
	= 

	if ( idA3aA_A3aA1_1 = 0) then

	 (idA3aA_A3aA1_2, idA1b_A3aA_2)

	 else(idA3aA_A3aA1_1, idA1b_A3aA_2);

	

	(idA3aA_A3aA1_4) 
	= 
	if ( idA3aA_A3aA1_1 = 1879) then
	A3aA1_A3aA1a_en(idA3aA_A3aA1_1, false)
	 else (idA3aA_A3aA1_1);

	

	(idA3aA_A3aA1_5) 
	= 
	if ( idA3aA_A3aA1_1 = 1880) then
	A3aA1_A3aA1b_en(idA3aA_A3aA1_1, false)
	 else (idA3aA_A3aA1_1);

	

	(idA3aA_A3aA1_6, idA1b_A3aA_4) 
	= 
		 if ( idA3aA_A3aA1_1 = 0) then 
		(idA3aA_A3aA1_3, idA1b_A3aA_3)
		 else
		 if ( idA3aA_A3aA1_1 = 1879) then 
		(idA3aA_A3aA1_4, idA1b_A3aA_3)
		 else
		 if ( idA3aA_A3aA1_1 = 1880) then 
		(idA3aA_A3aA1_5, idA1b_A3aA_3)
		 else (idA3aA_A3aA1_1, idA1b_A3aA_2);


	(idA3aA_A3aA1, idA1b_A3aA) 
	= (idA3aA_A3aA1_6, idA1b_A3aA_4);
	

tel





-- Exit action for state :A3aA_A3aA1
node A3aA_A3aA1_ex(idA3aA_A3aA1_1:int;
	idA1b_A3aA_1:int;
	isInner:bool)

returns (idA3aA_A3aA1:int;
	idA1b_A3aA:int);


var 	idA3aA_A3aA1_2, idA3aA_A3aA1_3, idA3aA_A3aA1_4, idA3aA_A3aA1_5:int;
	idA1b_A3aA_2:int;


let



	
	(idA3aA_A3aA1_2) 
	= 
	if ( idA3aA_A3aA1_1 = 1879) then
	A3aA1_A3aA1a_ex(idA3aA_A3aA1_1, false)
	 else (idA3aA_A3aA1_1);

	

	(idA3aA_A3aA1_3) 
	= 
	if ( idA3aA_A3aA1_1 = 1880) then
	A3aA1_A3aA1b_ex(idA3aA_A3aA1_1, false)
	 else (idA3aA_A3aA1_1);

	

	(idA3aA_A3aA1_4) 
	= 
		 if ( idA3aA_A3aA1_1 = 1879) then 
		(idA3aA_A3aA1_2)
		 else
		 if ( idA3aA_A3aA1_1 = 1880) then 
		(idA3aA_A3aA1_3)
		 else (idA3aA_A3aA1_1);


	-- set state as inactive 
	idA1b_A3aA_2
	 = if (not isInner) then 0 else idA1b_A3aA_1;

	idA3aA_A3aA1_5 
	= 0;
	

	(idA3aA_A3aA1, idA1b_A3aA) 
	= (idA3aA_A3aA1_5, idA1b_A3aA_2);
	

tel






-- Entry action for state :A1b_A3aA
node A1b_A3aA_en(idA1b_A3aA_1:int;
	idA1_A1b_1:int;
	idA3aA_A3aA1_1:int;
	idA3aA_A3aA2_1:int;
	isInner:bool)

returns (idA1b_A3aA:int;
	idA1_A1b:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int);


var 	idA1b_A3aA_2, idA1b_A3aA_3, idA1b_A3aA_4, idA1b_A3aA_5, idA1b_A3aA_6:int;
	idA1_A1b_2, idA1_A1b_3, idA1_A1b_4:int;
	idA3aA_A3aA1_2, idA3aA_A3aA1_3, idA3aA_A3aA1_4, idA3aA_A3aA1_5:int;
	idA3aA_A3aA2_2, idA3aA_A3aA2_3:int;


let



	-- set state as active 
	idA1_A1b_2 
	= 1874;
	

	
-- transition trace :
	--POINT__To__A3aA_A3aA1_1
		(idA3aA_A3aA1_2, idA1b_A3aA_2) 
	= A3aA_A3aA1_en(idA3aA_A3aA1_1, idA1b_A3aA_1, false);
		

	(idA1b_A3aA_3, idA1_A1b_3, idA3aA_A3aA1_3) 
	= 

	if ( idA1b_A3aA_1 = 0) then

	 (idA1b_A3aA_2, idA1_A1b_2, idA3aA_A3aA1_2)

	 else(idA1b_A3aA_1, idA1_A1b_2, idA3aA_A3aA1_1);

	

	(idA3aA_A3aA2_2, idA1b_A3aA_4) 
	= 
	if ( idA1b_A3aA_1 = 1875) then
	A3aA_A3aA2_en(idA3aA_A3aA2_1, idA1b_A3aA_1, false)
	 else (idA3aA_A3aA2_1, idA1b_A3aA_1);

	

	(idA3aA_A3aA1_4, idA1b_A3aA_5) 
	= 
	if ( idA1b_A3aA_1 = 1878) then
	A3aA_A3aA1_en(idA3aA_A3aA1_1, idA1b_A3aA_1, false)
	 else (idA3aA_A3aA1_1, idA1b_A3aA_1);

	

	(idA1b_A3aA_6, idA1_A1b_4, idA3aA_A3aA1_5, idA3aA_A3aA2_3) 
	= 
		 if ( idA1b_A3aA_1 = 0) then 
		(idA1b_A3aA_3, idA1_A1b_3, idA3aA_A3aA1_3, idA3aA_A3aA2_1)
		 else
		 if ( idA1b_A3aA_1 = 1875) then 
		(idA1b_A3aA_4, idA1_A1b_3, idA3aA_A3aA1_3, idA3aA_A3aA2_2)
		 else
		 if ( idA1b_A3aA_1 = 1878) then 
		(idA1b_A3aA_5, idA1_A1b_3, idA3aA_A3aA1_4, idA3aA_A3aA2_2)
		 else (idA1b_A3aA_1, idA1_A1b_2, idA3aA_A3aA1_1, idA3aA_A3aA2_1);


	(idA1b_A3aA, idA1_A1b, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA1b_A3aA_6, idA1_A1b_4, idA3aA_A3aA1_5, idA3aA_A3aA2_3);
	

tel





-- Exit action for state :A1b_A3aA
node A1b_A3aA_ex(idA3aA_A3aA2_1:int;
	idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	idA1_A1b_1:int;
	isInner:bool)

returns (idA3aA_A3aA2:int;
	idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA1_A1b:int);


var 	idA3aA_A3aA2_2, idA3aA_A3aA2_3:int;
	idA1b_A3aA_2, idA1b_A3aA_3, idA1b_A3aA_4, idA1b_A3aA_5:int;
	idA3aA_A3aA1_2, idA3aA_A3aA1_3:int;
	idA1_A1b_2:int;


let



	
	(idA3aA_A3aA2_2, idA1b_A3aA_2) 
	= 
	if ( idA1b_A3aA_1 = 1875) then
	A3aA_A3aA2_ex(idA3aA_A3aA2_1, idA1b_A3aA_1, false)
	 else (idA3aA_A3aA2_1, idA1b_A3aA_1);

	

	(idA3aA_A3aA1_2, idA1b_A3aA_3) 
	= 
	if ( idA1b_A3aA_1 = 1878) then
	A3aA_A3aA1_ex(idA3aA_A3aA1_1, idA1b_A3aA_1, false)
	 else (idA3aA_A3aA1_1, idA1b_A3aA_1);

	

	(idA3aA_A3aA2_3, idA1b_A3aA_4, idA3aA_A3aA1_3) 
	= 
		 if ( idA1b_A3aA_1 = 1875) then 
		(idA3aA_A3aA2_2, idA1b_A3aA_2, idA3aA_A3aA1_1)
		 else
		 if ( idA1b_A3aA_1 = 1878) then 
		(idA3aA_A3aA2_2, idA1b_A3aA_3, idA3aA_A3aA1_2)
		 else (idA3aA_A3aA2_1, idA1b_A3aA_1, idA3aA_A3aA1_1);


	-- set state as inactive 
	idA1_A1b_2
	 = if (not isInner) then 0 else idA1_A1b_1;

	idA1b_A3aA_5 
	= 0;
	

	(idA3aA_A3aA2, idA1b_A3aA, idA3aA_A3aA1, idA1_A1b) 
	= (idA3aA_A3aA2_3, idA1b_A3aA_5, idA3aA_A3aA1_3, idA1_A1b_2);
	

tel






-- Entry action for state :A1_A1b
node A1_A1b_en(idA1_A1b_1:int;
	idA_A1_1:int;
	x:int;
	a_1:int;
	idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	idA3aA_A3aA2_1:int;
	isInner:bool)

returns (idA1_A1b:int;
	idA_A1:int;
	a:int;
	idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int);


var 	idA1_A1b_2, idA1_A1b_3, idA1_A1b_4, idA1_A1b_5:int;
	idA_A1_2, idA_A1_3, idA_A1_4:int;
	a_2, a_3, a_4:int;
	idA1b_A3aA_2, idA1b_A3aA_3, idA1b_A3aA_4, idA1b_A3aA_5:int;
	idA3aA_A3aA1_2, idA3aA_A3aA1_3, idA3aA_A3aA1_4, idA3aA_A3aA1_5:int;
	idA3aA_A3aA2_2, idA3aA_A3aA2_3, idA3aA_A3aA2_4, idA3aA_A3aA2_5:int;


let



	-- set state as active 
	idA_A1_2 
	= 1856;
	

	a_2 
	= if (not isInner) then x+2
	 else a_1;
	

	
-- transition trace :
	--POINT__To__A1b_A3aA_1
		(idA1b_A3aA_2, idA1_A1b_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2) 
	= A1b_A3aA_en(idA1b_A3aA_1, idA1_A1b_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, false);
		

	(idA1_A1b_3, idA_A1_3, a_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3) 
	= 

	if ( idA1_A1b_1 = 0) then

	 (idA1_A1b_2, idA_A1_2, a_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2)

	 else(idA1_A1b_1, idA_A1_2, a_2, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);

	

	(idA1b_A3aA_4, idA1_A1b_4, idA3aA_A3aA1_4, idA3aA_A3aA2_4) 
	= 
	if ( idA1_A1b_1 = 1874) then
	A1b_A3aA_en(idA1b_A3aA_1, idA1_A1b_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, false)
	 else (idA1b_A3aA_1, idA1_A1b_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);

	

	(idA1_A1b_5, idA_A1_4, a_4, idA1b_A3aA_5, idA3aA_A3aA1_5, idA3aA_A3aA2_5) 
	= 
		 if ( idA1_A1b_1 = 0) then 
		(idA1_A1b_3, idA_A1_3, a_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3)
		 else
		 if ( idA1_A1b_1 = 1874) then 
		(idA1_A1b_4, idA_A1_3, a_3, idA1b_A3aA_4, idA3aA_A3aA1_4, idA3aA_A3aA2_4)
		 else (idA1_A1b_1, idA_A1_2, a_2, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);


	(idA1_A1b, idA_A1, a, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA1_A1b_5, idA_A1_4, a_4, idA1b_A3aA_5, idA3aA_A3aA1_5, idA3aA_A3aA2_5);
	

tel





-- Exit action for state :A1_A1b
node A1_A1b_ex(idA3aA_A3aA2_1:int;
	idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	idA1_A1b_1:int;
	idA_A1_1:int;
	isInner:bool)

returns (idA3aA_A3aA2:int;
	idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA1_A1b:int;
	idA_A1:int);


var 	idA3aA_A3aA2_2, idA3aA_A3aA2_3:int;
	idA1b_A3aA_2, idA1b_A3aA_3:int;
	idA3aA_A3aA1_2, idA3aA_A3aA1_3:int;
	idA1_A1b_2, idA1_A1b_3, idA1_A1b_4:int;
	idA_A1_2:int;


let



	
	(idA3aA_A3aA2_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA1_A1b_2) 
	= 
	if ( idA1_A1b_1 = 1874) then
	A1b_A3aA_ex(idA3aA_A3aA2_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA1_A1b_1, false)
	 else (idA3aA_A3aA2_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA1_A1b_1);

	

	(idA3aA_A3aA2_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA1_A1b_3) 
	= 
		 if ( idA1_A1b_1 = 1874) then 
		(idA3aA_A3aA2_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA1_A1b_2)
		 else (idA3aA_A3aA2_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA1_A1b_1);


	-- set state as inactive 
	idA_A1_2
	 = if (not isInner) then 0 else idA_A1_1;

	idA1_A1b_4 
	= 0;
	

	(idA3aA_A3aA2, idA1b_A3aA, idA3aA_A3aA1, idA1_A1b, idA_A1) 
	= (idA3aA_A3aA2_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA1_A1b_4, idA_A1_2);
	

tel






-- Entry action for state :A_A1
node A_A1_en(idA_A1_1:int;
	idHierarchy2_A_1:int;
	a_1:int;
	idA1_A1a_1:int;
	idA1aA_A1aA1_1:int;
	idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	x:int;
	idA1_A1b_1:int;
	idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	idA3aA_A3aA2_1:int;
	isInner:bool)

returns (idA_A1:int;
	idHierarchy2_A:int;
	a:int;
	idA1_A1a:int;
	idA1aA_A1aA1:int;
	idA1aA_A1aA2:int;
	idA1a_A1aA:int;
	idA1_A1b:int;
	idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int);


var 	idA_A1_2, idA_A1_3, idA_A1_4, idA_A1_5, idA_A1_6:int;
	idHierarchy2_A_2, idHierarchy2_A_3, idHierarchy2_A_4:int;
	a_2, a_3, a_4, a_5, a_6:int;
	idA1_A1a_2, idA1_A1a_3, idA1_A1a_4, idA1_A1a_5:int;
	idA1aA_A1aA1_2, idA1aA_A1aA1_3, idA1aA_A1aA1_4, idA1aA_A1aA1_5:int;
	idA1aA_A1aA2_2, idA1aA_A1aA2_3, idA1aA_A1aA2_4, idA1aA_A1aA2_5:int;
	idA1a_A1aA_2, idA1a_A1aA_3, idA1a_A1aA_4, idA1a_A1aA_5:int;
	idA1_A1b_2, idA1_A1b_3:int;
	idA1b_A3aA_2, idA1b_A3aA_3:int;
	idA3aA_A3aA1_2, idA3aA_A3aA1_3:int;
	idA3aA_A3aA2_2, idA3aA_A3aA2_3:int;


let



	-- set state as active 
	idHierarchy2_A_2 
	= 1854;
	

	
-- transition trace :
	--POINT__To__A1_A1a_1
		(idA1_A1a_2, idA_A1_2, a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2) 
	= A1_A1a_en(idA1_A1a_1, idA_A1_1, x, a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, false);
		

	(idA_A1_3, idHierarchy2_A_3, a_3, idA1_A1a_3, idA1aA_A1aA1_3, idA1aA_A1aA2_3, idA1a_A1aA_3) 
	= 

	if ( idA_A1_1 = 0) then

	 (idA_A1_2, idHierarchy2_A_2, a_2, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2)

	 else(idA_A1_1, idHierarchy2_A_2, a_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1);

	

	(idA1_A1a_4, idA_A1_4, a_4, idA1aA_A1aA1_4, idA1aA_A1aA2_4, idA1a_A1aA_4) 
	= 
	if ( idA_A1_1 = 1855) then
	A1_A1a_en(idA1_A1a_1, idA_A1_1, x, a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, false)
	 else (idA1_A1a_1, idA_A1_1, a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1);

	

	(idA1_A1b_2, idA_A1_5, a_5, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2) 
	= 
	if ( idA_A1_1 = 1856) then
	A1_A1b_en(idA1_A1b_1, idA_A1_1, x, a_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, false)
	 else (idA1_A1b_1, idA_A1_1, a_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);

	

	(idA_A1_6, idHierarchy2_A_4, a_6, idA1_A1a_5, idA1aA_A1aA1_5, idA1aA_A1aA2_5, idA1a_A1aA_5, idA1_A1b_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3) 
	= 
		 if ( idA_A1_1 = 0) then 
		(idA_A1_3, idHierarchy2_A_3, a_3, idA1_A1a_3, idA1aA_A1aA1_3, idA1aA_A1aA2_3, idA1a_A1aA_3, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1)
		 else
		 if ( idA_A1_1 = 1855) then 
		(idA_A1_4, idHierarchy2_A_3, a_4, idA1_A1a_4, idA1aA_A1aA1_4, idA1aA_A1aA2_4, idA1a_A1aA_4, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1)
		 else
		 if ( idA_A1_1 = 1856) then 
		(idA_A1_5, idHierarchy2_A_3, a_5, idA1_A1a_4, idA1aA_A1aA1_4, idA1aA_A1aA2_4, idA1a_A1aA_4, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2)
		 else (idA_A1_1, idHierarchy2_A_2, a_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);


	(idA_A1, idHierarchy2_A, a, idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA_A1_6, idHierarchy2_A_4, a_6, idA1_A1a_5, idA1aA_A1aA1_5, idA1aA_A1aA2_5, idA1a_A1aA_5, idA1_A1b_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3);
	

tel





-- Exit action for state :A_A1
node A_A1_ex(idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	idA1aA_A1aA1_1:int;
	idA1_A1a_1:int;
	idA_A1_1:int;
	idA1_A1b_1:int;
	idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	idA3aA_A3aA2_1:int;
	idHierarchy2_A_1:int;
	isInner:bool)

returns (idA1aA_A1aA2:int;
	idA1a_A1aA:int;
	idA1aA_A1aA1:int;
	idA1_A1a:int;
	idA_A1:int;
	idA1_A1b:int;
	idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int;
	idHierarchy2_A:int);


var 	idA1aA_A1aA2_2, idA1aA_A1aA2_3:int;
	idA1a_A1aA_2, idA1a_A1aA_3:int;
	idA1aA_A1aA1_2, idA1aA_A1aA1_3:int;
	idA1_A1a_2, idA1_A1a_3:int;
	idA_A1_2, idA_A1_3, idA_A1_4, idA_A1_5:int;
	idA1_A1b_2, idA1_A1b_3:int;
	idA1b_A3aA_2, idA1b_A3aA_3:int;
	idA3aA_A3aA1_2, idA3aA_A3aA1_3:int;
	idA3aA_A3aA2_2, idA3aA_A3aA2_3:int;
	idHierarchy2_A_2:int;


let



	
	(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_2, idA1_A1a_2, idA_A1_2) 
	= 
	if ( idA_A1_1 = 1855) then
	A1_A1a_ex(idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1, idA_A1_1, false)
	 else (idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1, idA_A1_1);

	

	(idA3aA_A3aA2_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA1_A1b_2, idA_A1_3) 
	= 
	if ( idA_A1_1 = 1856) then
	A1_A1b_ex(idA3aA_A3aA2_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA1_A1b_1, idA_A1_1, false)
	 else (idA3aA_A3aA2_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA1_A1b_1, idA_A1_1);

	

	(idA1aA_A1aA2_3, idA1a_A1aA_3, idA1aA_A1aA1_3, idA1_A1a_3, idA_A1_4, idA1_A1b_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3) 
	= 
		 if ( idA_A1_1 = 1855) then 
		(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_2, idA1_A1a_2, idA_A1_2, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1)
		 else
		 if ( idA_A1_1 = 1856) then 
		(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_2, idA1_A1a_2, idA_A1_3, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2)
		 else (idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1, idA_A1_1, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);


	-- set state as inactive 
	idHierarchy2_A_2
	 = if (not isInner) then 0 else idHierarchy2_A_1;

	idA_A1_5 
	= 0;
	

	(idA1aA_A1aA2, idA1a_A1aA, idA1aA_A1aA1, idA1_A1a, idA_A1, idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2, idHierarchy2_A) 
	= (idA1aA_A1aA2_3, idA1a_A1aA_3, idA1aA_A1aA1_3, idA1_A1a_3, idA_A1_5, idA1_A1b_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3, idHierarchy2_A_2);
	

tel






-- Entry action for state :Hierarchy2_A
node Hierarchy2_A_en(idHierarchy2_A_1:int;
	idHierarchy2_Hierarchy2_1:int;
	a_1:int;
	idA1_A1a_1:int;
	idA1_A1b_1:int;
	idA1aA_A1aA1_1:int;
	idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	idA3aA_A3aA2_1:int;
	idA_A1_1:int;
	x:int;
	idA2_A2a_1:int;
	idA2_A2b_1:int;
	idA2aA_A2aA1_1:int;
	idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	idA4aA_A4aA2_1:int;
	idA_A2_1:int;
	isInner:bool)

returns (idHierarchy2_A:int;
	idHierarchy2_Hierarchy2:int;
	a:int;
	idA1_A1a:int;
	idA1_A1b:int;
	idA1aA_A1aA1:int;
	idA1aA_A1aA2:int;
	idA1a_A1aA:int;
	idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int;
	idA_A1:int;
	idA2_A2a:int;
	idA2_A2b:int;
	idA2aA_A2aA1:int;
	idA2aA_A2aA2:int;
	idA2a_A2aA:int;
	idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int;
	idA_A2:int);


var 	idHierarchy2_A_2, idHierarchy2_A_3, idHierarchy2_A_4, idHierarchy2_A_5, idHierarchy2_A_6:int;
	idHierarchy2_Hierarchy2_2, idHierarchy2_Hierarchy2_3, idHierarchy2_Hierarchy2_4:int;
	a_2, a_3, a_4, a_5, a_6:int;
	idA1_A1a_2, idA1_A1a_3, idA1_A1a_4, idA1_A1a_5:int;
	idA1_A1b_2, idA1_A1b_3, idA1_A1b_4, idA1_A1b_5:int;
	idA1aA_A1aA1_2, idA1aA_A1aA1_3, idA1aA_A1aA1_4, idA1aA_A1aA1_5:int;
	idA1aA_A1aA2_2, idA1aA_A1aA2_3, idA1aA_A1aA2_4, idA1aA_A1aA2_5:int;
	idA1a_A1aA_2, idA1a_A1aA_3, idA1a_A1aA_4, idA1a_A1aA_5:int;
	idA1b_A3aA_2, idA1b_A3aA_3, idA1b_A3aA_4, idA1b_A3aA_5:int;
	idA3aA_A3aA1_2, idA3aA_A3aA1_3, idA3aA_A3aA1_4, idA3aA_A3aA1_5:int;
	idA3aA_A3aA2_2, idA3aA_A3aA2_3, idA3aA_A3aA2_4, idA3aA_A3aA2_5:int;
	idA_A1_2, idA_A1_3, idA_A1_4, idA_A1_5:int;
	idA2_A2a_2, idA2_A2a_3:int;
	idA2_A2b_2, idA2_A2b_3:int;
	idA2aA_A2aA1_2, idA2aA_A2aA1_3:int;
	idA2aA_A2aA2_2, idA2aA_A2aA2_3:int;
	idA2a_A2aA_2, idA2a_A2aA_3:int;
	idA2b_A4aA_2, idA2b_A4aA_3:int;
	idA4aA_A4aA1_2, idA4aA_A4aA1_3:int;
	idA4aA_A4aA2_2, idA4aA_A4aA2_3:int;
	idA_A2_2, idA_A2_3:int;


let



	-- set state as active 
	idHierarchy2_Hierarchy2_2 
	= 1853;
	

	
-- transition trace :
	--POINT__To__A_A1_1
		(idA_A1_2, idHierarchy2_A_2, a_2, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2) 
	= A_A1_en(idA_A1_1, idHierarchy2_A_1, a_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, x, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, false);
		

	(idHierarchy2_A_3, idHierarchy2_Hierarchy2_3, a_3, idA1_A1a_3, idA1_A1b_3, idA1aA_A1aA1_3, idA1aA_A1aA2_3, idA1a_A1aA_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3, idA_A1_3) 
	= 

	if ( idHierarchy2_A_1 = 0) then

	 (idHierarchy2_A_2, idHierarchy2_Hierarchy2_2, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA_A1_2)

	 else(idHierarchy2_A_1, idHierarchy2_Hierarchy2_2, a_1, idA1_A1a_1, idA1_A1b_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idA_A1_1);

	

	(idA_A1_4, idHierarchy2_A_4, a_4, idA1_A1a_4, idA1aA_A1aA1_4, idA1aA_A1aA2_4, idA1a_A1aA_4, idA1_A1b_4, idA1b_A3aA_4, idA3aA_A3aA1_4, idA3aA_A3aA2_4) 
	= 
	if ( idHierarchy2_A_1 = 1854) then
	A_A1_en(idA_A1_1, idHierarchy2_A_1, a_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, x, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, false)
	 else (idA_A1_1, idHierarchy2_A_1, a_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);

	

	(idA_A2_2, idHierarchy2_A_5, a_5, idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2) 
	= 
	if ( idHierarchy2_A_1 = 1857) then
	A_A2_en(idA_A2_1, idHierarchy2_A_1, a_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, x, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, false)
	 else (idA_A2_1, idHierarchy2_A_1, a_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);

	

	(idHierarchy2_A_6, idHierarchy2_Hierarchy2_4, a_6, idA1_A1a_5, idA1_A1b_5, idA1aA_A1aA1_5, idA1aA_A1aA2_5, idA1a_A1aA_5, idA1b_A3aA_5, idA3aA_A3aA1_5, idA3aA_A3aA2_5, idA_A1_5, idA2_A2a_3, idA2_A2b_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3, idA_A2_3) 
	= 
		 if ( idHierarchy2_A_1 = 0) then 
		(idHierarchy2_A_3, idHierarchy2_Hierarchy2_3, a_3, idA1_A1a_3, idA1_A1b_3, idA1aA_A1aA1_3, idA1aA_A1aA2_3, idA1a_A1aA_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3, idA_A1_3, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A2_1)
		 else
		 if ( idHierarchy2_A_1 = 1854) then 
		(idHierarchy2_A_4, idHierarchy2_Hierarchy2_3, a_4, idA1_A1a_4, idA1_A1b_4, idA1aA_A1aA1_4, idA1aA_A1aA2_4, idA1a_A1aA_4, idA1b_A3aA_4, idA3aA_A3aA1_4, idA3aA_A3aA2_4, idA_A1_4, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A2_1)
		 else
		 if ( idHierarchy2_A_1 = 1857) then 
		(idHierarchy2_A_5, idHierarchy2_Hierarchy2_3, a_5, idA1_A1a_4, idA1_A1b_4, idA1aA_A1aA1_4, idA1aA_A1aA2_4, idA1a_A1aA_4, idA1b_A3aA_4, idA3aA_A3aA1_4, idA3aA_A3aA2_4, idA_A1_4, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A2_2)
		 else (idHierarchy2_A_1, idHierarchy2_Hierarchy2_2, a_1, idA1_A1a_1, idA1_A1b_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idA_A1_1, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A2_1);


	(idHierarchy2_A, idHierarchy2_Hierarchy2, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2, idA_A1, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2, idA_A2) 
	= (idHierarchy2_A_6, idHierarchy2_Hierarchy2_4, a_6, idA1_A1a_5, idA1_A1b_5, idA1aA_A1aA1_5, idA1aA_A1aA2_5, idA1a_A1aA_5, idA1b_A3aA_5, idA3aA_A3aA1_5, idA3aA_A3aA2_5, idA_A1_5, idA2_A2a_3, idA2_A2b_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3, idA_A2_3);
	

tel





-- Exit action for state :Hierarchy2_A
node Hierarchy2_A_ex(idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	idA1aA_A1aA1_1:int;
	idA1_A1a_1:int;
	idA_A1_1:int;
	idA1_A1b_1:int;
	idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	idA3aA_A3aA2_1:int;
	idHierarchy2_A_1:int;
	idA2_A2a_1:int;
	idA2_A2b_1:int;
	idA2aA_A2aA1_1:int;
	idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	idA4aA_A4aA2_1:int;
	idA_A2_1:int;
	idHierarchy2_Hierarchy2_1:int;
	isInner:bool)

returns (idA1aA_A1aA2:int;
	idA1a_A1aA:int;
	idA1aA_A1aA1:int;
	idA1_A1a:int;
	idA_A1:int;
	idA1_A1b:int;
	idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int;
	idHierarchy2_A:int;
	idA2_A2a:int;
	idA2_A2b:int;
	idA2aA_A2aA1:int;
	idA2aA_A2aA2:int;
	idA2a_A2aA:int;
	idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int;
	idA_A2:int;
	idHierarchy2_Hierarchy2:int);


var 	idA1aA_A1aA2_2, idA1aA_A1aA2_3:int;
	idA1a_A1aA_2, idA1a_A1aA_3:int;
	idA1aA_A1aA1_2, idA1aA_A1aA1_3:int;
	idA1_A1a_2, idA1_A1a_3:int;
	idA_A1_2, idA_A1_3:int;
	idA1_A1b_2, idA1_A1b_3:int;
	idA1b_A3aA_2, idA1b_A3aA_3:int;
	idA3aA_A3aA1_2, idA3aA_A3aA1_3:int;
	idA3aA_A3aA2_2, idA3aA_A3aA2_3:int;
	idHierarchy2_A_2, idHierarchy2_A_3, idHierarchy2_A_4, idHierarchy2_A_5:int;
	idA2_A2a_2, idA2_A2a_3:int;
	idA2_A2b_2, idA2_A2b_3:int;
	idA2aA_A2aA1_2, idA2aA_A2aA1_3:int;
	idA2aA_A2aA2_2, idA2aA_A2aA2_3:int;
	idA2a_A2aA_2, idA2a_A2aA_3:int;
	idA2b_A4aA_2, idA2b_A4aA_3:int;
	idA4aA_A4aA1_2, idA4aA_A4aA1_3:int;
	idA4aA_A4aA2_2, idA4aA_A4aA2_3:int;
	idA_A2_2, idA_A2_3:int;
	idHierarchy2_Hierarchy2_2:int;


let



	
	(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_2, idA1_A1a_2, idA_A1_2, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idHierarchy2_A_2) 
	= 
	if ( idHierarchy2_A_1 = 1854) then
	A_A1_ex(idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1, idA_A1_1, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idHierarchy2_A_1, false)
	 else (idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1, idA_A1_1, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idHierarchy2_A_1);

	

	(idA2aA_A2aA2_2, idA2a_A2aA_2, idA2aA_A2aA1_2, idA2_A2a_2, idA_A2_2, idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idHierarchy2_A_3) 
	= 
	if ( idHierarchy2_A_1 = 1857) then
	A_A2_ex(idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1, idA2_A2a_1, idA_A2_1, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idHierarchy2_A_1, false)
	 else (idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1, idA2_A2a_1, idA_A2_1, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idHierarchy2_A_1);

	

	(idA1aA_A1aA2_3, idA1a_A1aA_3, idA1aA_A1aA1_3, idA1_A1a_3, idA_A1_3, idA1_A1b_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3, idHierarchy2_A_4, idA2_A2a_3, idA2_A2b_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3, idA_A2_3) 
	= 
		 if ( idHierarchy2_A_1 = 1854) then 
		(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_2, idA1_A1a_2, idA_A1_2, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idHierarchy2_A_2, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A2_1)
		 else
		 if ( idHierarchy2_A_1 = 1857) then 
		(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_2, idA1_A1a_2, idA_A1_2, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idHierarchy2_A_3, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A2_2)
		 else (idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1, idA_A1_1, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idHierarchy2_A_1, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A2_1);


	-- set state as inactive 
	idHierarchy2_Hierarchy2_2
	 = if (not isInner) then 0 else idHierarchy2_Hierarchy2_1;

	idHierarchy2_A_5 
	= 0;
	

	(idA1aA_A1aA2, idA1a_A1aA, idA1aA_A1aA1, idA1_A1a, idA_A1, idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2, idHierarchy2_A, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2, idA_A2, idHierarchy2_Hierarchy2) 
	= (idA1aA_A1aA2_3, idA1a_A1aA_3, idA1aA_A1aA1_3, idA1_A1a_3, idA_A1_3, idA1_A1b_3, idA1b_A3aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3, idHierarchy2_A_5, idA2_A2a_3, idA2_A2b_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3, idA2b_A4aA_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3, idA_A2_3, idHierarchy2_Hierarchy2_2);
	

tel


--***************************************************State :A2aA_A2aA2 Automaton***************************************************

node A2aA_A2aA2_node(idA2aA_A2aA2_1:int;
	S:bool)

returns (idA2aA_A2aA2:int);


let

	 automaton a2aa_a2aa2

	state POINTA2aA_A2aA2:
	unless (idA2aA_A2aA2_1=0) restart POINT__TO__A2AA2_A2AA2A_1



	unless (idA2aA_A2aA2_1=1869) and S restart A2AA2_A2AA2A__TO__A2AA2_A2AA2B_1



	unless (idA2aA_A2aA2_1=1870) and S restart A2AA2_A2AA2B__TO__A2AA2_A2AA2A_1



	unless (idA2aA_A2aA2_1=1869) restart A2AA2_A2AA2A_IDL

	unless (idA2aA_A2aA2_1=1870) restart A2AA2_A2AA2B_IDL

	let

		(idA2aA_A2aA2) 
	= (idA2aA_A2aA2_1);
	

	tel



	state POINT__TO__A2AA2_A2AA2A_1:

	 var 	idA2aA_A2aA2_2:int;
	let

		-- transition trace :
	--POINT__To__A2aA2_A2Aa2a_1
		(idA2aA_A2aA2_2) 
	= A2aA2_A2Aa2a_en(idA2aA_A2aA2_1, false);
		

	(idA2aA_A2aA2) 
	=  (idA2aA_A2aA2_2);


	tel

	until true restart POINTA2aA_A2aA2



	state A2AA2_A2AA2A__TO__A2AA2_A2AA2B_1:

	 var 	idA2aA_A2aA2_2, idA2aA_A2aA2_3:int;
	let

		-- transition trace :
	--A2aA2_A2Aa2a__To__A2aA2_A2aA2b_1
		(idA2aA_A2aA2_2) 
	= A2aA2_A2Aa2a_ex(idA2aA_A2aA2_1, false);
		

		(idA2aA_A2aA2_3) 
	= A2aA2_A2aA2b_en(idA2aA_A2aA2_2, false);
		

	(idA2aA_A2aA2) 
	=  (idA2aA_A2aA2_3);


	tel

	until true restart POINTA2aA_A2aA2



	state A2AA2_A2AA2B__TO__A2AA2_A2AA2A_1:

	 var 	idA2aA_A2aA2_2, idA2aA_A2aA2_3:int;
	let

		-- transition trace :
	--A2aA2_A2aA2b__To__A2aA2_A2Aa2a_1
		(idA2aA_A2aA2_2) 
	= A2aA2_A2aA2b_ex(idA2aA_A2aA2_1, false);
		

		(idA2aA_A2aA2_3) 
	= A2aA2_A2Aa2a_en(idA2aA_A2aA2_2, false);
		

	(idA2aA_A2aA2) 
	=  (idA2aA_A2aA2_3);


	tel

	until true restart POINTA2aA_A2aA2



	state A2AA2_A2AA2A_IDL:

	 	let

		

	(idA2aA_A2aA2) 
	= (idA2aA_A2aA2_1);
	

	tel

	until true restart POINTA2aA_A2aA2



	state A2AA2_A2AA2B_IDL:

	 	let

		

	(idA2aA_A2aA2) 
	= (idA2aA_A2aA2_1);
	

	tel

	until true restart POINTA2aA_A2aA2



tel


--***************************************************State :A2aA_A2aA1 Automaton***************************************************

node A2aA_A2aA1_node(idA2aA_A2aA1_1:int;
	S:bool)

returns (idA2aA_A2aA1:int);


let

	 automaton a2aa_a2aa1

	state POINTA2aA_A2aA1:
	unless (idA2aA_A2aA1_1=0) restart POINT__TO__A2AA1_A2AA1A_1



	unless (idA2aA_A2aA1_1=1872) and S restart A2AA1_A2AA1A__TO__A2AA1_A2AA1B_1



	unless (idA2aA_A2aA1_1=1873) and S restart A2AA1_A2AA1B__TO__A2AA1_A2AA1A_1



	unless (idA2aA_A2aA1_1=1872) restart A2AA1_A2AA1A_IDL

	unless (idA2aA_A2aA1_1=1873) restart A2AA1_A2AA1B_IDL

	let

		(idA2aA_A2aA1) 
	= (idA2aA_A2aA1_1);
	

	tel



	state POINT__TO__A2AA1_A2AA1A_1:

	 var 	idA2aA_A2aA1_2:int;
	let

		-- transition trace :
	--POINT__To__A2aA1_A2aA1a_1
		(idA2aA_A2aA1_2) 
	= A2aA1_A2aA1a_en(idA2aA_A2aA1_1, false);
		

	(idA2aA_A2aA1) 
	=  (idA2aA_A2aA1_2);


	tel

	until true restart POINTA2aA_A2aA1



	state A2AA1_A2AA1A__TO__A2AA1_A2AA1B_1:

	 var 	idA2aA_A2aA1_2, idA2aA_A2aA1_3:int;
	let

		-- transition trace :
	--A2aA1_A2aA1a__To__A2aA1_A2aA1b_1
		(idA2aA_A2aA1_2) 
	= A2aA1_A2aA1a_ex(idA2aA_A2aA1_1, false);
		

		(idA2aA_A2aA1_3) 
	= A2aA1_A2aA1b_en(idA2aA_A2aA1_2, false);
		

	(idA2aA_A2aA1) 
	=  (idA2aA_A2aA1_3);


	tel

	until true restart POINTA2aA_A2aA1



	state A2AA1_A2AA1B__TO__A2AA1_A2AA1A_1:

	 var 	idA2aA_A2aA1_2, idA2aA_A2aA1_3:int;
	let

		-- transition trace :
	--A2aA1_A2aA1b__To__A2aA1_A2aA1a_1
		(idA2aA_A2aA1_2) 
	= A2aA1_A2aA1b_ex(idA2aA_A2aA1_1, false);
		

		(idA2aA_A2aA1_3) 
	= A2aA1_A2aA1a_en(idA2aA_A2aA1_2, false);
		

	(idA2aA_A2aA1) 
	=  (idA2aA_A2aA1_3);


	tel

	until true restart POINTA2aA_A2aA1



	state A2AA1_A2AA1A_IDL:

	 	let

		

	(idA2aA_A2aA1) 
	= (idA2aA_A2aA1_1);
	

	tel

	until true restart POINTA2aA_A2aA1



	state A2AA1_A2AA1B_IDL:

	 	let

		

	(idA2aA_A2aA1) 
	= (idA2aA_A2aA1_1);
	

	tel

	until true restart POINTA2aA_A2aA1



tel


--***************************************************State :A2a_A2aA Automaton***************************************************

node A2a_A2aA_node(idA2a_A2aA_1:int;
	idA2aA_A2aA1_1:int;
	R:bool;
	idA2aA_A2aA2_1:int;
	S:bool)

returns (idA2a_A2aA:int;
	idA2aA_A2aA1:int;
	idA2aA_A2aA2:int);


let

	 automaton a2a_a2aa

	state POINTA2a_A2aA:
	unless (idA2a_A2aA_1=0) restart POINT__TO__A2AA_A2AA1_1



	unless (idA2a_A2aA_1=1868) and R restart A2AA_A2AA2__TO__A2AA_A2AA1_1



	unless (idA2a_A2aA_1=1871) and R restart A2AA_A2AA1__TO__A2AA_A2AA2_1



	unless (idA2a_A2aA_1=1868) restart A2AA_A2AA2_IDL

	unless (idA2a_A2aA_1=1871) restart A2AA_A2AA1_IDL

	let

		(idA2a_A2aA, idA2aA_A2aA1, idA2aA_A2aA2) 
	= (idA2a_A2aA_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1);
	

	tel



	state POINT__TO__A2AA_A2AA1_1:

	 var 	idA2a_A2aA_2:int;
	idA2aA_A2aA1_2:int;
	let

		-- transition trace :
	--POINT__To__A2aA_A2aA1_1
		(idA2aA_A2aA1_2, idA2a_A2aA_2) 
	= A2aA_A2aA1_en(idA2aA_A2aA1_1, idA2a_A2aA_1, false);
		

	(idA2a_A2aA, idA2aA_A2aA1) 
	=  (idA2a_A2aA_2, idA2aA_A2aA1_2);

	--add unused variables
	(idA2aA_A2aA2) 
	= (idA2aA_A2aA2_1);
	

	tel

	until true restart POINTA2a_A2aA



	state A2AA_A2AA2__TO__A2AA_A2AA1_1:

	 var 	idA2a_A2aA_2, idA2a_A2aA_3:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	let

		-- transition trace :
	--A2aA_A2aA2__To__A2aA_A2aA1_1
		(idA2aA_A2aA2_2, idA2a_A2aA_2) 
	= A2aA_A2aA2_ex(idA2aA_A2aA2_1, idA2a_A2aA_1, false);
		

		(idA2aA_A2aA1_2, idA2a_A2aA_3) 
	= A2aA_A2aA1_en(idA2aA_A2aA1_1, idA2a_A2aA_2, false);
		

	(idA2a_A2aA, idA2aA_A2aA1, idA2aA_A2aA2) 
	=  (idA2a_A2aA_3, idA2aA_A2aA1_2, idA2aA_A2aA2_2);


	tel

	until true restart POINTA2a_A2aA



	state A2AA_A2AA1__TO__A2AA_A2AA2_1:

	 var 	idA2a_A2aA_2, idA2a_A2aA_3:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	let

		-- transition trace :
	--A2aA_A2aA1__To__A2aA_A2aA2_1
		(idA2aA_A2aA1_2, idA2a_A2aA_2) 
	= A2aA_A2aA1_ex(idA2aA_A2aA1_1, idA2a_A2aA_1, false);
		

		(idA2aA_A2aA2_2, idA2a_A2aA_3) 
	= A2aA_A2aA2_en(idA2aA_A2aA2_1, idA2a_A2aA_2, false);
		

	(idA2a_A2aA, idA2aA_A2aA1, idA2aA_A2aA2) 
	=  (idA2a_A2aA_3, idA2aA_A2aA1_2, idA2aA_A2aA2_2);


	tel

	until true restart POINTA2a_A2aA



	state A2AA_A2AA2_IDL:

	 var 	idA2aA_A2aA2_2:int;
	let

		
	(idA2aA_A2aA2_2) 
	= A2aA_A2aA2_node(idA2aA_A2aA2_1, S);

		


	(idA2a_A2aA, idA2aA_A2aA1, idA2aA_A2aA2) 
	= (idA2a_A2aA_1, idA2aA_A2aA1_1, idA2aA_A2aA2_2);
	

	tel

	until true restart POINTA2a_A2aA



	state A2AA_A2AA1_IDL:

	 var 	idA2aA_A2aA1_2:int;
	let

		
	(idA2aA_A2aA1_2) 
	= A2aA_A2aA1_node(idA2aA_A2aA1_1, S);

		


	(idA2a_A2aA, idA2aA_A2aA1, idA2aA_A2aA2) 
	= (idA2a_A2aA_1, idA2aA_A2aA1_2, idA2aA_A2aA2_1);
	

	tel

	until true restart POINTA2a_A2aA



tel


--***************************************************State :A2_A2a Automaton***************************************************

node A2_A2a_node(idA2_A2a_1:int;
	idA2aA_A2aA1_1:int;
	idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	R:bool;
	S:bool)

returns (idA2_A2a:int;
	idA2aA_A2aA1:int;
	idA2aA_A2aA2:int;
	idA2a_A2aA:int);


let

	 automaton a2_a2a

	state POINTA2_A2a:
	unless (idA2_A2a_1=0) restart POINT__TO__A2A_A2AA_1



	unless (idA2_A2a_1=1867) restart A2A_A2AA_IDL

	let

		(idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA) 
	= (idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1);
	

	tel



	state POINT__TO__A2A_A2AA_1:

	 var 	idA2_A2a_2:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	let

		-- transition trace :
	--POINT__To__A2a_A2aA_1
		(idA2a_A2aA_2, idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2) 
	= A2a_A2aA_en(idA2a_A2aA_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, false);
		

	(idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA) 
	=  (idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2);


	tel

	until true restart POINTA2_A2a



	state A2A_A2AA_IDL:

	 var 	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	let

		
	(idA2a_A2aA_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2) 
	= A2a_A2aA_node(idA2a_A2aA_1, idA2aA_A2aA1_1, R, idA2aA_A2aA2_1, S);

		


	(idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA) 
	= (idA2_A2a_1, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2);
	

	tel

	until true restart POINTA2_A2a



tel


--***************************************************State :A4aA_A4aA2 Automaton***************************************************

node A4aA_A4aA2_node(idA4aA_A4aA2_1:int;
	S:bool)

returns (idA4aA_A4aA2:int);


let

	 automaton a4aa_a4aa2

	state POINTA4aA_A4aA2:
	unless (idA4aA_A4aA2_1=0) restart POINT__TO__A4AA2_A4AA2A_1



	unless (idA4aA_A4aA2_1=1883) and S restart A4AA2_A4AA2A__TO__A4AA2_A4AA2B_1



	unless (idA4aA_A4aA2_1=1884) and S restart A4AA2_A4AA2B__TO__A4AA2_A4AA2A_1



	unless (idA4aA_A4aA2_1=1883) restart A4AA2_A4AA2A_IDL

	unless (idA4aA_A4aA2_1=1884) restart A4AA2_A4AA2B_IDL

	let

		(idA4aA_A4aA2) 
	= (idA4aA_A4aA2_1);
	

	tel



	state POINT__TO__A4AA2_A4AA2A_1:

	 var 	idA4aA_A4aA2_2:int;
	let

		-- transition trace :
	--POINT__To__A4aA2_A4Aa2a_1
		(idA4aA_A4aA2_2) 
	= A4aA2_A4Aa2a_en(idA4aA_A4aA2_1, false);
		

	(idA4aA_A4aA2) 
	=  (idA4aA_A4aA2_2);


	tel

	until true restart POINTA4aA_A4aA2



	state A4AA2_A4AA2A__TO__A4AA2_A4AA2B_1:

	 var 	idA4aA_A4aA2_2, idA4aA_A4aA2_3:int;
	let

		-- transition trace :
	--A4aA2_A4Aa2a__To__A4aA2_A4aA2b_1
		(idA4aA_A4aA2_2) 
	= A4aA2_A4Aa2a_ex(idA4aA_A4aA2_1, false);
		

		(idA4aA_A4aA2_3) 
	= A4aA2_A4aA2b_en(idA4aA_A4aA2_2, false);
		

	(idA4aA_A4aA2) 
	=  (idA4aA_A4aA2_3);


	tel

	until true restart POINTA4aA_A4aA2



	state A4AA2_A4AA2B__TO__A4AA2_A4AA2A_1:

	 var 	idA4aA_A4aA2_2, idA4aA_A4aA2_3:int;
	let

		-- transition trace :
	--A4aA2_A4aA2b__To__A4aA2_A4Aa2a_1
		(idA4aA_A4aA2_2) 
	= A4aA2_A4aA2b_ex(idA4aA_A4aA2_1, false);
		

		(idA4aA_A4aA2_3) 
	= A4aA2_A4Aa2a_en(idA4aA_A4aA2_2, false);
		

	(idA4aA_A4aA2) 
	=  (idA4aA_A4aA2_3);


	tel

	until true restart POINTA4aA_A4aA2



	state A4AA2_A4AA2A_IDL:

	 	let

		

	(idA4aA_A4aA2) 
	= (idA4aA_A4aA2_1);
	

	tel

	until true restart POINTA4aA_A4aA2



	state A4AA2_A4AA2B_IDL:

	 	let

		

	(idA4aA_A4aA2) 
	= (idA4aA_A4aA2_1);
	

	tel

	until true restart POINTA4aA_A4aA2



tel


--***************************************************State :A4aA_A4aA1 Automaton***************************************************

node A4aA_A4aA1_node(idA4aA_A4aA1_1:int;
	S:bool)

returns (idA4aA_A4aA1:int);


let

	 automaton a4aa_a4aa1

	state POINTA4aA_A4aA1:
	unless (idA4aA_A4aA1_1=0) restart POINT__TO__A4AA1_A4AA1A_1



	unless (idA4aA_A4aA1_1=1886) and S restart A4AA1_A4AA1A__TO__A4AA1_A4AA1B_1



	unless (idA4aA_A4aA1_1=1887) and S restart A4AA1_A4AA1B__TO__A4AA1_A4AA1A_1



	unless (idA4aA_A4aA1_1=1886) restart A4AA1_A4AA1A_IDL

	unless (idA4aA_A4aA1_1=1887) restart A4AA1_A4AA1B_IDL

	let

		(idA4aA_A4aA1) 
	= (idA4aA_A4aA1_1);
	

	tel



	state POINT__TO__A4AA1_A4AA1A_1:

	 var 	idA4aA_A4aA1_2:int;
	let

		-- transition trace :
	--POINT__To__A4aA1_A4aA1a_1
		(idA4aA_A4aA1_2) 
	= A4aA1_A4aA1a_en(idA4aA_A4aA1_1, false);
		

	(idA4aA_A4aA1) 
	=  (idA4aA_A4aA1_2);


	tel

	until true restart POINTA4aA_A4aA1



	state A4AA1_A4AA1A__TO__A4AA1_A4AA1B_1:

	 var 	idA4aA_A4aA1_2, idA4aA_A4aA1_3:int;
	let

		-- transition trace :
	--A4aA1_A4aA1a__To__A4aA1_A4aA1b_1
		(idA4aA_A4aA1_2) 
	= A4aA1_A4aA1a_ex(idA4aA_A4aA1_1, false);
		

		(idA4aA_A4aA1_3) 
	= A4aA1_A4aA1b_en(idA4aA_A4aA1_2, false);
		

	(idA4aA_A4aA1) 
	=  (idA4aA_A4aA1_3);


	tel

	until true restart POINTA4aA_A4aA1



	state A4AA1_A4AA1B__TO__A4AA1_A4AA1A_1:

	 var 	idA4aA_A4aA1_2, idA4aA_A4aA1_3:int;
	let

		-- transition trace :
	--A4aA1_A4aA1b__To__A4aA1_A4aA1a_1
		(idA4aA_A4aA1_2) 
	= A4aA1_A4aA1b_ex(idA4aA_A4aA1_1, false);
		

		(idA4aA_A4aA1_3) 
	= A4aA1_A4aA1a_en(idA4aA_A4aA1_2, false);
		

	(idA4aA_A4aA1) 
	=  (idA4aA_A4aA1_3);


	tel

	until true restart POINTA4aA_A4aA1



	state A4AA1_A4AA1A_IDL:

	 	let

		

	(idA4aA_A4aA1) 
	= (idA4aA_A4aA1_1);
	

	tel

	until true restart POINTA4aA_A4aA1



	state A4AA1_A4AA1B_IDL:

	 	let

		

	(idA4aA_A4aA1) 
	= (idA4aA_A4aA1_1);
	

	tel

	until true restart POINTA4aA_A4aA1



tel


--***************************************************State :A2b_A4aA Automaton***************************************************

node A2b_A4aA_node(idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	R:bool;
	idA4aA_A4aA2_1:int;
	S:bool)

returns (idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int);


let

	 automaton a2b_a4aa

	state POINTA2b_A4aA:
	unless (idA2b_A4aA_1=0) restart POINT__TO__A4AA_A4AA1_1



	unless (idA2b_A4aA_1=1882) and R restart A4AA_A4AA2__TO__A4AA_A4AA1_1



	unless (idA2b_A4aA_1=1885) and R restart A4AA_A4AA1__TO__A4AA_A4AA2_1



	unless (idA2b_A4aA_1=1882) restart A4AA_A4AA2_IDL

	unless (idA2b_A4aA_1=1885) restart A4AA_A4AA1_IDL

	let

		(idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);
	

	tel



	state POINT__TO__A4AA_A4AA1_1:

	 var 	idA2b_A4aA_2:int;
	idA4aA_A4aA1_2:int;
	let

		-- transition trace :
	--POINT__To__A4aA_A4aA1_1
		(idA4aA_A4aA1_2, idA2b_A4aA_2) 
	= A4aA_A4aA1_en(idA4aA_A4aA1_1, idA2b_A4aA_1, false);
		

	(idA2b_A4aA, idA4aA_A4aA1) 
	=  (idA2b_A4aA_2, idA4aA_A4aA1_2);

	--add unused variables
	(idA4aA_A4aA2) 
	= (idA4aA_A4aA2_1);
	

	tel

	until true restart POINTA2b_A4aA



	state A4AA_A4AA2__TO__A4AA_A4AA1_1:

	 var 	idA2b_A4aA_2, idA2b_A4aA_3:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	let

		-- transition trace :
	--A4aA_A4aA2__To__A4aA_A4aA1_1
		(idA4aA_A4aA2_2, idA2b_A4aA_2) 
	= A4aA_A4aA2_ex(idA4aA_A4aA2_1, idA2b_A4aA_1, false);
		

		(idA4aA_A4aA1_2, idA2b_A4aA_3) 
	= A4aA_A4aA1_en(idA4aA_A4aA1_1, idA2b_A4aA_2, false);
		

	(idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	=  (idA2b_A4aA_3, idA4aA_A4aA1_2, idA4aA_A4aA2_2);


	tel

	until true restart POINTA2b_A4aA



	state A4AA_A4AA1__TO__A4AA_A4AA2_1:

	 var 	idA2b_A4aA_2, idA2b_A4aA_3:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	let

		-- transition trace :
	--A4aA_A4aA1__To__A4aA_A4aA2_1
		(idA4aA_A4aA1_2, idA2b_A4aA_2) 
	= A4aA_A4aA1_ex(idA4aA_A4aA1_1, idA2b_A4aA_1, false);
		

		(idA4aA_A4aA2_2, idA2b_A4aA_3) 
	= A4aA_A4aA2_en(idA4aA_A4aA2_1, idA2b_A4aA_2, false);
		

	(idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	=  (idA2b_A4aA_3, idA4aA_A4aA1_2, idA4aA_A4aA2_2);


	tel

	until true restart POINTA2b_A4aA



	state A4AA_A4AA2_IDL:

	 var 	idA4aA_A4aA2_2:int;
	let

		
	(idA4aA_A4aA2_2) 
	= A4aA_A4aA2_node(idA4aA_A4aA2_1, S);

		


	(idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_2);
	

	tel

	until true restart POINTA2b_A4aA



	state A4AA_A4AA1_IDL:

	 var 	idA4aA_A4aA1_2:int;
	let

		
	(idA4aA_A4aA1_2) 
	= A4aA_A4aA1_node(idA4aA_A4aA1_1, S);

		


	(idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA2b_A4aA_1, idA4aA_A4aA1_2, idA4aA_A4aA2_1);
	

	tel

	until true restart POINTA2b_A4aA



tel


--***************************************************State :A2_A2b Automaton***************************************************

node A2_A2b_node(idA2_A2b_1:int;
	idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	idA4aA_A4aA2_1:int;
	R:bool;
	S:bool)

returns (idA2_A2b:int;
	idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int);


let

	 automaton a2_a2b

	state POINTA2_A2b:
	unless (idA2_A2b_1=0) restart POINT__TO__A2B_A4AA_1



	unless (idA2_A2b_1=1881) restart A2B_A4AA_IDL

	let

		(idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);
	

	tel



	state POINT__TO__A2B_A4AA_1:

	 var 	idA2_A2b_2:int;
	idA2b_A4aA_2:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	let

		-- transition trace :
	--POINT__To__A2b_A4aA_1
		(idA2b_A4aA_2, idA2_A2b_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2) 
	= A2b_A4aA_en(idA2b_A4aA_1, idA2_A2b_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, false);
		

	(idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	=  (idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2);


	tel

	until true restart POINTA2_A2b



	state A2B_A4AA_IDL:

	 var 	idA2b_A4aA_2:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	let

		
	(idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2) 
	= A2b_A4aA_node(idA2b_A4aA_1, idA4aA_A4aA1_1, R, idA4aA_A4aA2_1, S);

		


	(idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA2_A2b_1, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2);
	

	tel

	until true restart POINTA2_A2b



tel


--***************************************************State :A_A2 Automaton***************************************************

node A_A2_node(idA_A2_1:int;
	a_1:int;
	idA2_A2a_1:int;
	idA2aA_A2aA1_1:int;
	idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	x:int;
	Q:bool;
	idA2_A2b_1:int;
	idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	idA4aA_A4aA2_1:int;
	R:bool;
	S:bool)

returns (idA_A2:int;
	a:int;
	idA2_A2a:int;
	idA2aA_A2aA1:int;
	idA2aA_A2aA2:int;
	idA2a_A2aA:int;
	idA2_A2b:int;
	idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int);


let

	 automaton a_a2

	state POINTA_A2:
	unless (idA_A2_1=0) restart POINT__TO__A2_A2A_1



	unless (idA_A2_1=1858) and Q restart A2_A2A__TO__A2_A2B_1



	unless (idA_A2_1=1859) and Q restart A2_A2B__TO__A2_A2A_1



	unless (idA_A2_1=1858) restart A2_A2A_IDL

	unless (idA_A2_1=1859) restart A2_A2B_IDL

	let

		(idA_A2, a, idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA_A2_1, a_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);
	

	tel



	state POINT__TO__A2_A2A_1:

	 var 	idA_A2_2:int;
	a_2:int;
	idA2_A2a_2:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	let

		-- transition trace :
	--POINT__To__A2_A2a_1
		(idA2_A2a_2, idA_A2_2, a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2) 
	= A2_A2a_en(idA2_A2a_1, idA_A2_1, x, a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, false);
		

	(idA_A2, a, idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA) 
	=  (idA_A2_2, a_2, idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2);

	--add unused variables
	(idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);
	

	tel

	until true restart POINTA_A2



	state A2_A2A__TO__A2_A2B_1:

	 var 	idA_A2_2, idA_A2_3:int;
	a_2:int;
	idA2_A2a_2:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	idA2_A2b_2:int;
	idA2b_A4aA_2:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	let

		-- transition trace :
	--A2_A2a__To__A2_A2b_1
		(idA2aA_A2aA2_2, idA2a_A2aA_2, idA2aA_A2aA1_2, idA2_A2a_2, idA_A2_2) 
	= A2_A2a_ex(idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1, idA2_A2a_1, idA_A2_1, false);
		

		(idA2_A2b_2, idA_A2_3, a_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2) 
	= A2_A2b_en(idA2_A2b_1, idA_A2_2, x, a_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, false);
		

	(idA_A2, a, idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	=  (idA_A2_3, a_2, idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2);


	tel

	until true restart POINTA_A2



	state A2_A2B__TO__A2_A2A_1:

	 var 	idA_A2_2, idA_A2_3:int;
	a_2:int;
	idA2_A2a_2:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	idA2_A2b_2:int;
	idA2b_A4aA_2:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	let

		-- transition trace :
	--A2_A2b__To__A2_A2a_1
		(idA4aA_A4aA2_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA2_A2b_2, idA_A2_2) 
	= A2_A2b_ex(idA4aA_A4aA2_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA2_A2b_1, idA_A2_1, false);
		

		(idA2_A2a_2, idA_A2_3, a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2) 
	= A2_A2a_en(idA2_A2a_1, idA_A2_2, x, a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, false);
		

	(idA_A2, a, idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	=  (idA_A2_3, a_2, idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2);


	tel

	until true restart POINTA_A2



	state A2_A2A_IDL:

	 var 	idA2_A2a_2:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	let

		
	(idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2) 
	= A2_A2a_node(idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, R, S);

		


	(idA_A2, a, idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA_A2_1, a_1, idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1);
	

	tel

	until true restart POINTA_A2



	state A2_A2B_IDL:

	 var 	idA2_A2b_2:int;
	idA2b_A4aA_2:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	let

		
	(idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2) 
	= A2_A2b_node(idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, R, S);

		


	(idA_A2, a, idA2_A2a, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2_A2b, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2) 
	= (idA_A2_1, a_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2);
	

	tel

	until true restart POINTA_A2



tel


--***************************************************State :A1aA_A1aA2 Automaton***************************************************

node A1aA_A1aA2_node(idA1aA_A1aA2_1:int;
	S:bool)

returns (idA1aA_A1aA2:int);


let

	 automaton a1aa_a1aa2

	state POINTA1aA_A1aA2:
	unless (idA1aA_A1aA2_1=0) restart POINT__TO__A1AA2_A1AA2A_1



	unless (idA1aA_A1aA2_1=1862) and S restart A1AA2_A1AA2A__TO__A1AA2_A1AA2B_1



	unless (idA1aA_A1aA2_1=1863) and S restart A1AA2_A1AA2B__TO__A1AA2_A1AA2A_1



	unless (idA1aA_A1aA2_1=1862) restart A1AA2_A1AA2A_IDL

	unless (idA1aA_A1aA2_1=1863) restart A1AA2_A1AA2B_IDL

	let

		(idA1aA_A1aA2) 
	= (idA1aA_A1aA2_1);
	

	tel



	state POINT__TO__A1AA2_A1AA2A_1:

	 var 	idA1aA_A1aA2_2:int;
	let

		-- transition trace :
	--POINT__To__A1aA2_A1Aa2a_1
		(idA1aA_A1aA2_2) 
	= A1aA2_A1Aa2a_en(idA1aA_A1aA2_1, false);
		

	(idA1aA_A1aA2) 
	=  (idA1aA_A1aA2_2);


	tel

	until true restart POINTA1aA_A1aA2



	state A1AA2_A1AA2A__TO__A1AA2_A1AA2B_1:

	 var 	idA1aA_A1aA2_2, idA1aA_A1aA2_3:int;
	let

		-- transition trace :
	--A1aA2_A1Aa2a__To__A1aA2_A1aA2b_1
		(idA1aA_A1aA2_2) 
	= A1aA2_A1Aa2a_ex(idA1aA_A1aA2_1, false);
		

		(idA1aA_A1aA2_3) 
	= A1aA2_A1aA2b_en(idA1aA_A1aA2_2, false);
		

	(idA1aA_A1aA2) 
	=  (idA1aA_A1aA2_3);


	tel

	until true restart POINTA1aA_A1aA2



	state A1AA2_A1AA2B__TO__A1AA2_A1AA2A_1:

	 var 	idA1aA_A1aA2_2, idA1aA_A1aA2_3:int;
	let

		-- transition trace :
	--A1aA2_A1aA2b__To__A1aA2_A1Aa2a_1
		(idA1aA_A1aA2_2) 
	= A1aA2_A1aA2b_ex(idA1aA_A1aA2_1, false);
		

		(idA1aA_A1aA2_3) 
	= A1aA2_A1Aa2a_en(idA1aA_A1aA2_2, false);
		

	(idA1aA_A1aA2) 
	=  (idA1aA_A1aA2_3);


	tel

	until true restart POINTA1aA_A1aA2



	state A1AA2_A1AA2A_IDL:

	 	let

		

	(idA1aA_A1aA2) 
	= (idA1aA_A1aA2_1);
	

	tel

	until true restart POINTA1aA_A1aA2



	state A1AA2_A1AA2B_IDL:

	 	let

		

	(idA1aA_A1aA2) 
	= (idA1aA_A1aA2_1);
	

	tel

	until true restart POINTA1aA_A1aA2



tel


--***************************************************State :A1aA_A1aA1 Automaton***************************************************

node A1aA_A1aA1_node(idA1aA_A1aA1_1:int;
	S:bool)

returns (idA1aA_A1aA1:int);


let

	 automaton a1aa_a1aa1

	state POINTA1aA_A1aA1:
	unless (idA1aA_A1aA1_1=0) restart POINT__TO__A1AA1_A1AA1A_1



	unless (idA1aA_A1aA1_1=1865) and S restart A1AA1_A1AA1A__TO__A1AA1_A1AA1B_1



	unless (idA1aA_A1aA1_1=1866) and S restart A1AA1_A1AA1B__TO__A1AA1_A1AA1A_1



	unless (idA1aA_A1aA1_1=1865) restart A1AA1_A1AA1A_IDL

	unless (idA1aA_A1aA1_1=1866) restart A1AA1_A1AA1B_IDL

	let

		(idA1aA_A1aA1) 
	= (idA1aA_A1aA1_1);
	

	tel



	state POINT__TO__A1AA1_A1AA1A_1:

	 var 	idA1aA_A1aA1_2:int;
	let

		-- transition trace :
	--POINT__To__A1aA1_A1aA1a_1
		(idA1aA_A1aA1_2) 
	= A1aA1_A1aA1a_en(idA1aA_A1aA1_1, false);
		

	(idA1aA_A1aA1) 
	=  (idA1aA_A1aA1_2);


	tel

	until true restart POINTA1aA_A1aA1



	state A1AA1_A1AA1A__TO__A1AA1_A1AA1B_1:

	 var 	idA1aA_A1aA1_2, idA1aA_A1aA1_3:int;
	let

		-- transition trace :
	--A1aA1_A1aA1a__To__A1aA1_A1aA1b_1
		(idA1aA_A1aA1_2) 
	= A1aA1_A1aA1a_ex(idA1aA_A1aA1_1, false);
		

		(idA1aA_A1aA1_3) 
	= A1aA1_A1aA1b_en(idA1aA_A1aA1_2, false);
		

	(idA1aA_A1aA1) 
	=  (idA1aA_A1aA1_3);


	tel

	until true restart POINTA1aA_A1aA1



	state A1AA1_A1AA1B__TO__A1AA1_A1AA1A_1:

	 var 	idA1aA_A1aA1_2, idA1aA_A1aA1_3:int;
	let

		-- transition trace :
	--A1aA1_A1aA1b__To__A1aA1_A1aA1a_1
		(idA1aA_A1aA1_2) 
	= A1aA1_A1aA1b_ex(idA1aA_A1aA1_1, false);
		

		(idA1aA_A1aA1_3) 
	= A1aA1_A1aA1a_en(idA1aA_A1aA1_2, false);
		

	(idA1aA_A1aA1) 
	=  (idA1aA_A1aA1_3);


	tel

	until true restart POINTA1aA_A1aA1



	state A1AA1_A1AA1A_IDL:

	 	let

		

	(idA1aA_A1aA1) 
	= (idA1aA_A1aA1_1);
	

	tel

	until true restart POINTA1aA_A1aA1



	state A1AA1_A1AA1B_IDL:

	 	let

		

	(idA1aA_A1aA1) 
	= (idA1aA_A1aA1_1);
	

	tel

	until true restart POINTA1aA_A1aA1



tel


--***************************************************State :A1a_A1aA Automaton***************************************************

node A1a_A1aA_node(idA1a_A1aA_1:int;
	idA1aA_A1aA1_1:int;
	R:bool;
	idA1aA_A1aA2_1:int;
	S:bool)

returns (idA1a_A1aA:int;
	idA1aA_A1aA1:int;
	idA1aA_A1aA2:int);


let

	 automaton a1a_a1aa

	state POINTA1a_A1aA:
	unless (idA1a_A1aA_1=0) restart POINT__TO__A1AA_A1AA1_1



	unless (idA1a_A1aA_1=1861) and R restart A1AA_A1AA2__TO__A1AA_A1AA1_1



	unless (idA1a_A1aA_1=1864) and R restart A1AA_A1AA1__TO__A1AA_A1AA2_1



	unless (idA1a_A1aA_1=1861) restart A1AA_A1AA2_IDL

	unless (idA1a_A1aA_1=1864) restart A1AA_A1AA1_IDL

	let

		(idA1a_A1aA, idA1aA_A1aA1, idA1aA_A1aA2) 
	= (idA1a_A1aA_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1);
	

	tel



	state POINT__TO__A1AA_A1AA1_1:

	 var 	idA1a_A1aA_2:int;
	idA1aA_A1aA1_2:int;
	let

		-- transition trace :
	--POINT__To__A1aA_A1aA1_1
		(idA1aA_A1aA1_2, idA1a_A1aA_2) 
	= A1aA_A1aA1_en(idA1aA_A1aA1_1, idA1a_A1aA_1, false);
		

	(idA1a_A1aA, idA1aA_A1aA1) 
	=  (idA1a_A1aA_2, idA1aA_A1aA1_2);

	--add unused variables
	(idA1aA_A1aA2) 
	= (idA1aA_A1aA2_1);
	

	tel

	until true restart POINTA1a_A1aA



	state A1AA_A1AA2__TO__A1AA_A1AA1_1:

	 var 	idA1a_A1aA_2, idA1a_A1aA_3:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	let

		-- transition trace :
	--A1aA_A1aA2__To__A1aA_A1aA1_1
		(idA1aA_A1aA2_2, idA1a_A1aA_2) 
	= A1aA_A1aA2_ex(idA1aA_A1aA2_1, idA1a_A1aA_1, false);
		

		(idA1aA_A1aA1_2, idA1a_A1aA_3) 
	= A1aA_A1aA1_en(idA1aA_A1aA1_1, idA1a_A1aA_2, false);
		

	(idA1a_A1aA, idA1aA_A1aA1, idA1aA_A1aA2) 
	=  (idA1a_A1aA_3, idA1aA_A1aA1_2, idA1aA_A1aA2_2);


	tel

	until true restart POINTA1a_A1aA



	state A1AA_A1AA1__TO__A1AA_A1AA2_1:

	 var 	idA1a_A1aA_2, idA1a_A1aA_3:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	let

		-- transition trace :
	--A1aA_A1aA1__To__A1aA_A1aA2_1
		(idA1aA_A1aA1_2, idA1a_A1aA_2) 
	= A1aA_A1aA1_ex(idA1aA_A1aA1_1, idA1a_A1aA_1, false);
		

		(idA1aA_A1aA2_2, idA1a_A1aA_3) 
	= A1aA_A1aA2_en(idA1aA_A1aA2_1, idA1a_A1aA_2, false);
		

	(idA1a_A1aA, idA1aA_A1aA1, idA1aA_A1aA2) 
	=  (idA1a_A1aA_3, idA1aA_A1aA1_2, idA1aA_A1aA2_2);


	tel

	until true restart POINTA1a_A1aA



	state A1AA_A1AA2_IDL:

	 var 	idA1aA_A1aA2_2:int;
	let

		
	(idA1aA_A1aA2_2) 
	= A1aA_A1aA2_node(idA1aA_A1aA2_1, S);

		


	(idA1a_A1aA, idA1aA_A1aA1, idA1aA_A1aA2) 
	= (idA1a_A1aA_1, idA1aA_A1aA1_1, idA1aA_A1aA2_2);
	

	tel

	until true restart POINTA1a_A1aA



	state A1AA_A1AA1_IDL:

	 var 	idA1aA_A1aA1_2:int;
	let

		
	(idA1aA_A1aA1_2) 
	= A1aA_A1aA1_node(idA1aA_A1aA1_1, S);

		


	(idA1a_A1aA, idA1aA_A1aA1, idA1aA_A1aA2) 
	= (idA1a_A1aA_1, idA1aA_A1aA1_2, idA1aA_A1aA2_1);
	

	tel

	until true restart POINTA1a_A1aA



tel


--***************************************************State :A1_A1a Automaton***************************************************

node A1_A1a_node(idA1_A1a_1:int;
	idA1aA_A1aA1_1:int;
	idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	R:bool;
	S:bool)

returns (idA1_A1a:int;
	idA1aA_A1aA1:int;
	idA1aA_A1aA2:int;
	idA1a_A1aA:int);


let

	 automaton a1_a1a

	state POINTA1_A1a:
	unless (idA1_A1a_1=0) restart POINT__TO__A1A_A1AA_1



	unless (idA1_A1a_1=1860) restart A1A_A1AA_IDL

	let

		(idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA) 
	= (idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1);
	

	tel



	state POINT__TO__A1A_A1AA_1:

	 var 	idA1_A1a_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	let

		-- transition trace :
	--POINT__To__A1a_A1aA_1
		(idA1a_A1aA_2, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2) 
	= A1a_A1aA_en(idA1a_A1aA_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, false);
		

	(idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA) 
	=  (idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2);


	tel

	until true restart POINTA1_A1a



	state A1A_A1AA_IDL:

	 var 	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	let

		
	(idA1a_A1aA_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2) 
	= A1a_A1aA_node(idA1a_A1aA_1, idA1aA_A1aA1_1, R, idA1aA_A1aA2_1, S);

		


	(idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA) 
	= (idA1_A1a_1, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2);
	

	tel

	until true restart POINTA1_A1a



tel


--***************************************************State :A3aA_A3aA2 Automaton***************************************************

node A3aA_A3aA2_node(idA3aA_A3aA2_1:int;
	S:bool)

returns (idA3aA_A3aA2:int);


let

	 automaton a3aa_a3aa2

	state POINTA3aA_A3aA2:
	unless (idA3aA_A3aA2_1=0) restart POINT__TO__A3AA2_A3AA2A_1



	unless (idA3aA_A3aA2_1=1876) and S restart A3AA2_A3AA2A__TO__A3AA2_A3AA2B_1



	unless (idA3aA_A3aA2_1=1877) and S restart A3AA2_A3AA2B__TO__A3AA2_A3AA2A_1



	unless (idA3aA_A3aA2_1=1876) restart A3AA2_A3AA2A_IDL

	unless (idA3aA_A3aA2_1=1877) restart A3AA2_A3AA2B_IDL

	let

		(idA3aA_A3aA2) 
	= (idA3aA_A3aA2_1);
	

	tel



	state POINT__TO__A3AA2_A3AA2A_1:

	 var 	idA3aA_A3aA2_2:int;
	let

		-- transition trace :
	--POINT__To__A3aA2_A3Aa2a_1
		(idA3aA_A3aA2_2) 
	= A3aA2_A3Aa2a_en(idA3aA_A3aA2_1, false);
		

	(idA3aA_A3aA2) 
	=  (idA3aA_A3aA2_2);


	tel

	until true restart POINTA3aA_A3aA2



	state A3AA2_A3AA2A__TO__A3AA2_A3AA2B_1:

	 var 	idA3aA_A3aA2_2, idA3aA_A3aA2_3:int;
	let

		-- transition trace :
	--A3aA2_A3Aa2a__To__A3aA2_A3aA2b_1
		(idA3aA_A3aA2_2) 
	= A3aA2_A3Aa2a_ex(idA3aA_A3aA2_1, false);
		

		(idA3aA_A3aA2_3) 
	= A3aA2_A3aA2b_en(idA3aA_A3aA2_2, false);
		

	(idA3aA_A3aA2) 
	=  (idA3aA_A3aA2_3);


	tel

	until true restart POINTA3aA_A3aA2



	state A3AA2_A3AA2B__TO__A3AA2_A3AA2A_1:

	 var 	idA3aA_A3aA2_2, idA3aA_A3aA2_3:int;
	let

		-- transition trace :
	--A3aA2_A3aA2b__To__A3aA2_A3Aa2a_1
		(idA3aA_A3aA2_2) 
	= A3aA2_A3aA2b_ex(idA3aA_A3aA2_1, false);
		

		(idA3aA_A3aA2_3) 
	= A3aA2_A3Aa2a_en(idA3aA_A3aA2_2, false);
		

	(idA3aA_A3aA2) 
	=  (idA3aA_A3aA2_3);


	tel

	until true restart POINTA3aA_A3aA2



	state A3AA2_A3AA2A_IDL:

	 	let

		

	(idA3aA_A3aA2) 
	= (idA3aA_A3aA2_1);
	

	tel

	until true restart POINTA3aA_A3aA2



	state A3AA2_A3AA2B_IDL:

	 	let

		

	(idA3aA_A3aA2) 
	= (idA3aA_A3aA2_1);
	

	tel

	until true restart POINTA3aA_A3aA2



tel


--***************************************************State :A3aA_A3aA1 Automaton***************************************************

node A3aA_A3aA1_node(idA3aA_A3aA1_1:int;
	S:bool)

returns (idA3aA_A3aA1:int);


let

	 automaton a3aa_a3aa1

	state POINTA3aA_A3aA1:
	unless (idA3aA_A3aA1_1=0) restart POINT__TO__A3AA1_A3AA1A_1



	unless (idA3aA_A3aA1_1=1879) and S restart A3AA1_A3AA1A__TO__A3AA1_A3AA1B_1



	unless (idA3aA_A3aA1_1=1880) and S restart A3AA1_A3AA1B__TO__A3AA1_A3AA1A_1



	unless (idA3aA_A3aA1_1=1879) restart A3AA1_A3AA1A_IDL

	unless (idA3aA_A3aA1_1=1880) restart A3AA1_A3AA1B_IDL

	let

		(idA3aA_A3aA1) 
	= (idA3aA_A3aA1_1);
	

	tel



	state POINT__TO__A3AA1_A3AA1A_1:

	 var 	idA3aA_A3aA1_2:int;
	let

		-- transition trace :
	--POINT__To__A3aA1_A3aA1a_1
		(idA3aA_A3aA1_2) 
	= A3aA1_A3aA1a_en(idA3aA_A3aA1_1, false);
		

	(idA3aA_A3aA1) 
	=  (idA3aA_A3aA1_2);


	tel

	until true restart POINTA3aA_A3aA1



	state A3AA1_A3AA1A__TO__A3AA1_A3AA1B_1:

	 var 	idA3aA_A3aA1_2, idA3aA_A3aA1_3:int;
	let

		-- transition trace :
	--A3aA1_A3aA1a__To__A3aA1_A3aA1b_1
		(idA3aA_A3aA1_2) 
	= A3aA1_A3aA1a_ex(idA3aA_A3aA1_1, false);
		

		(idA3aA_A3aA1_3) 
	= A3aA1_A3aA1b_en(idA3aA_A3aA1_2, false);
		

	(idA3aA_A3aA1) 
	=  (idA3aA_A3aA1_3);


	tel

	until true restart POINTA3aA_A3aA1



	state A3AA1_A3AA1B__TO__A3AA1_A3AA1A_1:

	 var 	idA3aA_A3aA1_2, idA3aA_A3aA1_3:int;
	let

		-- transition trace :
	--A3aA1_A3aA1b__To__A3aA1_A3aA1a_1
		(idA3aA_A3aA1_2) 
	= A3aA1_A3aA1b_ex(idA3aA_A3aA1_1, false);
		

		(idA3aA_A3aA1_3) 
	= A3aA1_A3aA1a_en(idA3aA_A3aA1_2, false);
		

	(idA3aA_A3aA1) 
	=  (idA3aA_A3aA1_3);


	tel

	until true restart POINTA3aA_A3aA1



	state A3AA1_A3AA1A_IDL:

	 	let

		

	(idA3aA_A3aA1) 
	= (idA3aA_A3aA1_1);
	

	tel

	until true restart POINTA3aA_A3aA1



	state A3AA1_A3AA1B_IDL:

	 	let

		

	(idA3aA_A3aA1) 
	= (idA3aA_A3aA1_1);
	

	tel

	until true restart POINTA3aA_A3aA1



tel


--***************************************************State :A1b_A3aA Automaton***************************************************

node A1b_A3aA_node(idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	R:bool;
	idA3aA_A3aA2_1:int;
	S:bool)

returns (idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int);


let

	 automaton a1b_a3aa

	state POINTA1b_A3aA:
	unless (idA1b_A3aA_1=0) restart POINT__TO__A3AA_A3AA1_1



	unless (idA1b_A3aA_1=1875) and R restart A3AA_A3AA2__TO__A3AA_A3AA1_1



	unless (idA1b_A3aA_1=1878) and R restart A3AA_A3AA1__TO__A3AA_A3AA2_1



	unless (idA1b_A3aA_1=1875) restart A3AA_A3AA2_IDL

	unless (idA1b_A3aA_1=1878) restart A3AA_A3AA1_IDL

	let

		(idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);
	

	tel



	state POINT__TO__A3AA_A3AA1_1:

	 var 	idA1b_A3aA_2:int;
	idA3aA_A3aA1_2:int;
	let

		-- transition trace :
	--POINT__To__A3aA_A3aA1_1
		(idA3aA_A3aA1_2, idA1b_A3aA_2) 
	= A3aA_A3aA1_en(idA3aA_A3aA1_1, idA1b_A3aA_1, false);
		

	(idA1b_A3aA, idA3aA_A3aA1) 
	=  (idA1b_A3aA_2, idA3aA_A3aA1_2);

	--add unused variables
	(idA3aA_A3aA2) 
	= (idA3aA_A3aA2_1);
	

	tel

	until true restart POINTA1b_A3aA



	state A3AA_A3AA2__TO__A3AA_A3AA1_1:

	 var 	idA1b_A3aA_2, idA1b_A3aA_3:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	let

		-- transition trace :
	--A3aA_A3aA2__To__A3aA_A3aA1_1
		(idA3aA_A3aA2_2, idA1b_A3aA_2) 
	= A3aA_A3aA2_ex(idA3aA_A3aA2_1, idA1b_A3aA_1, false);
		

		(idA3aA_A3aA1_2, idA1b_A3aA_3) 
	= A3aA_A3aA1_en(idA3aA_A3aA1_1, idA1b_A3aA_2, false);
		

	(idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	=  (idA1b_A3aA_3, idA3aA_A3aA1_2, idA3aA_A3aA2_2);


	tel

	until true restart POINTA1b_A3aA



	state A3AA_A3AA1__TO__A3AA_A3AA2_1:

	 var 	idA1b_A3aA_2, idA1b_A3aA_3:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	let

		-- transition trace :
	--A3aA_A3aA1__To__A3aA_A3aA2_1
		(idA3aA_A3aA1_2, idA1b_A3aA_2) 
	= A3aA_A3aA1_ex(idA3aA_A3aA1_1, idA1b_A3aA_1, false);
		

		(idA3aA_A3aA2_2, idA1b_A3aA_3) 
	= A3aA_A3aA2_en(idA3aA_A3aA2_1, idA1b_A3aA_2, false);
		

	(idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	=  (idA1b_A3aA_3, idA3aA_A3aA1_2, idA3aA_A3aA2_2);


	tel

	until true restart POINTA1b_A3aA



	state A3AA_A3AA2_IDL:

	 var 	idA3aA_A3aA2_2:int;
	let

		
	(idA3aA_A3aA2_2) 
	= A3aA_A3aA2_node(idA3aA_A3aA2_1, S);

		


	(idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_2);
	

	tel

	until true restart POINTA1b_A3aA



	state A3AA_A3AA1_IDL:

	 var 	idA3aA_A3aA1_2:int;
	let

		
	(idA3aA_A3aA1_2) 
	= A3aA_A3aA1_node(idA3aA_A3aA1_1, S);

		


	(idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA1b_A3aA_1, idA3aA_A3aA1_2, idA3aA_A3aA2_1);
	

	tel

	until true restart POINTA1b_A3aA



tel


--***************************************************State :A1_A1b Automaton***************************************************

node A1_A1b_node(idA1_A1b_1:int;
	idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	idA3aA_A3aA2_1:int;
	R:bool;
	S:bool)

returns (idA1_A1b:int;
	idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int);


let

	 automaton a1_a1b

	state POINTA1_A1b:
	unless (idA1_A1b_1=0) restart POINT__TO__A1B_A3AA_1



	unless (idA1_A1b_1=1874) restart A1B_A3AA_IDL

	let

		(idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);
	

	tel



	state POINT__TO__A1B_A3AA_1:

	 var 	idA1_A1b_2:int;
	idA1b_A3aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	let

		-- transition trace :
	--POINT__To__A1b_A3aA_1
		(idA1b_A3aA_2, idA1_A1b_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2) 
	= A1b_A3aA_en(idA1b_A3aA_1, idA1_A1b_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, false);
		

	(idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	=  (idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2);


	tel

	until true restart POINTA1_A1b



	state A1B_A3AA_IDL:

	 var 	idA1b_A3aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	let

		
	(idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2) 
	= A1b_A3aA_node(idA1b_A3aA_1, idA3aA_A3aA1_1, R, idA3aA_A3aA2_1, S);

		


	(idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA1_A1b_1, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2);
	

	tel

	until true restart POINTA1_A1b



tel


--***************************************************State :A_A1 Automaton***************************************************

node A_A1_node(idA_A1_1:int;
	a_1:int;
	idA1_A1a_1:int;
	idA1aA_A1aA1_1:int;
	idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	x:int;
	Q:bool;
	idA1_A1b_1:int;
	idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	idA3aA_A3aA2_1:int;
	R:bool;
	S:bool)

returns (idA_A1:int;
	a:int;
	idA1_A1a:int;
	idA1aA_A1aA1:int;
	idA1aA_A1aA2:int;
	idA1a_A1aA:int;
	idA1_A1b:int;
	idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int);


let

	 automaton a_a1

	state POINTA_A1:
	unless (idA_A1_1=0) restart POINT__TO__A1_A1A_1



	unless (idA_A1_1=1855) and Q restart A1_A1A__TO__A1_A1B_1



	unless (idA_A1_1=1856) and Q restart A1_A1B__TO__A1_A1A_1



	unless (idA_A1_1=1855) restart A1_A1A_IDL

	unless (idA_A1_1=1856) restart A1_A1B_IDL

	let

		(idA_A1, a, idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA_A1_1, a_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);
	

	tel



	state POINT__TO__A1_A1A_1:

	 var 	idA_A1_2:int;
	a_2:int;
	idA1_A1a_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	let

		-- transition trace :
	--POINT__To__A1_A1a_1
		(idA1_A1a_2, idA_A1_2, a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2) 
	= A1_A1a_en(idA1_A1a_1, idA_A1_1, x, a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, false);
		

	(idA_A1, a, idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA) 
	=  (idA_A1_2, a_2, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2);

	--add unused variables
	(idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);
	

	tel

	until true restart POINTA_A1



	state A1_A1A__TO__A1_A1B_1:

	 var 	idA_A1_2, idA_A1_3:int;
	a_2:int;
	idA1_A1a_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	idA1_A1b_2:int;
	idA1b_A3aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	let

		-- transition trace :
	--A1_A1a__To__A1_A1b_1
		(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_2, idA1_A1a_2, idA_A1_2) 
	= A1_A1a_ex(idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1, idA_A1_1, false);
		

		(idA1_A1b_2, idA_A1_3, a_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2) 
	= A1_A1b_en(idA1_A1b_1, idA_A1_2, x, a_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, false);
		

	(idA_A1, a, idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	=  (idA_A1_3, a_2, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2);


	tel

	until true restart POINTA_A1



	state A1_A1B__TO__A1_A1A_1:

	 var 	idA_A1_2, idA_A1_3:int;
	a_2:int;
	idA1_A1a_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	idA1_A1b_2:int;
	idA1b_A3aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	let

		-- transition trace :
	--A1_A1b__To__A1_A1a_1
		(idA3aA_A3aA2_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA1_A1b_2, idA_A1_2) 
	= A1_A1b_ex(idA3aA_A3aA2_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA1_A1b_1, idA_A1_1, false);
		

		(idA1_A1a_2, idA_A1_3, a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2) 
	= A1_A1a_en(idA1_A1a_1, idA_A1_2, x, a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, false);
		

	(idA_A1, a, idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	=  (idA_A1_3, a_2, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2);


	tel

	until true restart POINTA_A1



	state A1_A1A_IDL:

	 var 	idA1_A1a_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	let

		
	(idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2) 
	= A1_A1a_node(idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, R, S);

		


	(idA_A1, a, idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA_A1_1, a_1, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1);
	

	tel

	until true restart POINTA_A1



	state A1_A1B_IDL:

	 var 	idA1_A1b_2:int;
	idA1b_A3aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	let

		
	(idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2) 
	= A1_A1b_node(idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, R, S);

		


	(idA_A1, a, idA1_A1a, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1_A1b, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2) 
	= (idA_A1_1, a_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2);
	

	tel

	until true restart POINTA_A1



tel


--***************************************************State :Hierarchy2_A Automaton***************************************************

node Hierarchy2_A_node(idHierarchy2_A_1:int;
	a_1:int;
	idA1_A1a_1:int;
	idA1_A1b_1:int;
	idA1aA_A1aA1_1:int;
	idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	idA1b_A3aA_1:int;
	idA3aA_A3aA1_1:int;
	idA3aA_A3aA2_1:int;
	idA_A1_1:int;
	x:int;
	P:bool;
	idA2_A2a_1:int;
	idA2_A2b_1:int;
	idA2aA_A2aA1_1:int;
	idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	idA2b_A4aA_1:int;
	idA4aA_A4aA1_1:int;
	idA4aA_A4aA2_1:int;
	idA_A2_1:int;
	Q:bool;
	R:bool;
	S:bool)

returns (idHierarchy2_A:int;
	a:int;
	idA1_A1a:int;
	idA1_A1b:int;
	idA1aA_A1aA1:int;
	idA1aA_A1aA2:int;
	idA1a_A1aA:int;
	idA1b_A3aA:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int;
	idA_A1:int;
	idA2_A2a:int;
	idA2_A2b:int;
	idA2aA_A2aA1:int;
	idA2aA_A2aA2:int;
	idA2a_A2aA:int;
	idA2b_A4aA:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int;
	idA_A2:int);


let

	 automaton hierarchy2_a

	state POINTHierarchy2_A:
	unless (idHierarchy2_A_1=0) restart POINT__TO__A_A1_1



	unless (idHierarchy2_A_1=1854) and P restart A_A1__TO__A_A2_1



	unless (idHierarchy2_A_1=1857) and P restart A_A2__TO__A_A1_1



	unless (idHierarchy2_A_1=1854) restart A_A1_IDL

	unless (idHierarchy2_A_1=1857) restart A_A2_IDL

	let

		(idHierarchy2_A, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2, idA_A1, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2, idA_A2) 
	= (idHierarchy2_A_1, a_1, idA1_A1a_1, idA1_A1b_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idA_A1_1, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A2_1);
	

	tel



	state POINT__TO__A_A1_1:

	 var 	idHierarchy2_A_2:int;
	a_2:int;
	idA1_A1a_2:int;
	idA1_A1b_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	idA1b_A3aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	idA_A1_2:int;
	let

		-- transition trace :
	--POINT__To__A_A1_1
		(idA_A1_2, idHierarchy2_A_2, a_2, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2) 
	= A_A1_en(idA_A1_1, idHierarchy2_A_1, a_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, x, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, false);
		

	(idHierarchy2_A, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2, idA_A1) 
	=  (idHierarchy2_A_2, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA_A1_2);

	--add unused variables
	(idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2, idA_A2) 
	= (idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A2_1);
	

	tel

	until true restart POINTHierarchy2_A



	state A_A1__TO__A_A2_1:

	 var 	idHierarchy2_A_2, idHierarchy2_A_3:int;
	a_2:int;
	idA1_A1a_2:int;
	idA1_A1b_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	idA1b_A3aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	idA_A1_2:int;
	idA2_A2a_2:int;
	idA2_A2b_2:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	idA2b_A4aA_2:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	idA_A2_2:int;
	let

		-- transition trace :
	--A_A1__To__A_A2_1
		(idA1aA_A1aA2_2, idA1a_A1aA_2, idA1aA_A1aA1_2, idA1_A1a_2, idA_A1_2, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idHierarchy2_A_2) 
	= A_A1_ex(idA1aA_A1aA2_1, idA1a_A1aA_1, idA1aA_A1aA1_1, idA1_A1a_1, idA_A1_1, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idHierarchy2_A_1, false);
		

		(idA_A2_2, idHierarchy2_A_3, a_2, idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2) 
	= A_A2_en(idA_A2_1, idHierarchy2_A_2, a_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, x, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, false);
		

	(idHierarchy2_A, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2, idA_A1, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2, idA_A2) 
	=  (idHierarchy2_A_3, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA_A1_2, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A2_2);


	tel

	until true restart POINTHierarchy2_A



	state A_A2__TO__A_A1_1:

	 var 	idHierarchy2_A_2, idHierarchy2_A_3:int;
	a_2:int;
	idA1_A1a_2:int;
	idA1_A1b_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	idA1b_A3aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	idA_A1_2:int;
	idA2_A2a_2:int;
	idA2_A2b_2:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	idA2b_A4aA_2:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	idA_A2_2:int;
	let

		-- transition trace :
	--A_A2__To__A_A1_1
		(idA2aA_A2aA2_2, idA2a_A2aA_2, idA2aA_A2aA1_2, idA2_A2a_2, idA_A2_2, idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idHierarchy2_A_2) 
	= A_A2_ex(idA2aA_A2aA2_1, idA2a_A2aA_1, idA2aA_A2aA1_1, idA2_A2a_1, idA_A2_1, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idHierarchy2_A_1, false);
		

		(idA_A1_2, idHierarchy2_A_3, a_2, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2) 
	= A_A1_en(idA_A1_1, idHierarchy2_A_2, a_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, x, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, false);
		

	(idHierarchy2_A, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2, idA_A1, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2, idA_A2) 
	=  (idHierarchy2_A_3, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA_A1_2, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A2_2);


	tel

	until true restart POINTHierarchy2_A



	state A_A1_IDL:

	 var 	a_2:int;
	idA1_A1a_2:int;
	idA1_A1b_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	idA1b_A3aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	idA_A1_2:int;
	let

		
	(idA_A1_2, a_2, idA1_A1a_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1_A1b_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2) 
	= A_A1_node(idA_A1_1, a_1, idA1_A1a_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, x, Q, idA1_A1b_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, R, S);

		


	(idHierarchy2_A, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2, idA_A1, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2, idA_A2) 
	= (idHierarchy2_A_1, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA_A1_2, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A2_1);
	

	tel

	until true restart POINTHierarchy2_A



	state A_A2_IDL:

	 var 	a_2:int;
	idA2_A2a_2:int;
	idA2_A2b_2:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	idA2b_A4aA_2:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	idA_A2_2:int;
	let

		
	(idA_A2_2, a_2, idA2_A2a_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2_A2b_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2) 
	= A_A2_node(idA_A2_1, a_1, idA2_A2a_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, x, Q, idA2_A2b_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, R, S);

		


	(idHierarchy2_A, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA3aA_A3aA1, idA3aA_A3aA2, idA_A1, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA4aA_A4aA1, idA4aA_A4aA2, idA_A2) 
	= (idHierarchy2_A_1, a_2, idA1_A1a_1, idA1_A1b_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idA_A1_1, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A2_2);
	

	tel

	until true restart POINTHierarchy2_A



tel


--***************************************************State :Hierarchy2_Hierarchy2 Automaton***************************************************

node Hierarchy2_Hierarchy2_node(idHierarchy2_Hierarchy2_1:int;
	a_1:int;
	idA1_A1a_1:int;
	idA1_A1b_1:int;
	idA1aA_A1aA1_1:int;
	idA1aA_A1aA2_1:int;
	idA1a_A1aA_1:int;
	idA1b_A3aA_1:int;
	idA2_A2a_1:int;
	idA2_A2b_1:int;
	idA2aA_A2aA1_1:int;
	idA2aA_A2aA2_1:int;
	idA2a_A2aA_1:int;
	idA2b_A4aA_1:int;
	idA3aA_A3aA1_1:int;
	idA3aA_A3aA2_1:int;
	idA4aA_A4aA1_1:int;
	idA4aA_A4aA2_1:int;
	idA_A1_1:int;
	idA_A2_1:int;
	idHierarchy2_A_1:int;
	x:int;
	P:bool;
	Q:bool;
	R:bool;
	S:bool)

returns (idHierarchy2_Hierarchy2:int;
	a:int;
	idA1_A1a:int;
	idA1_A1b:int;
	idA1aA_A1aA1:int;
	idA1aA_A1aA2:int;
	idA1a_A1aA:int;
	idA1b_A3aA:int;
	idA2_A2a:int;
	idA2_A2b:int;
	idA2aA_A2aA1:int;
	idA2aA_A2aA2:int;
	idA2a_A2aA:int;
	idA2b_A4aA:int;
	idA3aA_A3aA1:int;
	idA3aA_A3aA2:int;
	idA4aA_A4aA1:int;
	idA4aA_A4aA2:int;
	idA_A1:int;
	idA_A2:int;
	idHierarchy2_A:int);


let

	 automaton hierarchy2_hierarchy2

	state POINTHierarchy2_Hierarchy2:
	unless (idHierarchy2_Hierarchy2_1=0) restart POINT__TO__HIERARCHY2_A_1



	unless (idHierarchy2_Hierarchy2_1=1853) restart HIERARCHY2_A_IDL

	let

		(idHierarchy2_Hierarchy2, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA3aA_A3aA1, idA3aA_A3aA2, idA4aA_A4aA1, idA4aA_A4aA2, idA_A1, idA_A2, idHierarchy2_A) 
	= (idHierarchy2_Hierarchy2_1, a_1, idA1_A1a_1, idA1_A1b_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1b_A3aA_1, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A1_1, idA_A2_1, idHierarchy2_A_1);
	

	tel



	state POINT__TO__HIERARCHY2_A_1:

	 var 	idHierarchy2_Hierarchy2_2:int;
	a_2:int;
	idA1_A1a_2:int;
	idA1_A1b_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	idA1b_A3aA_2:int;
	idA2_A2a_2:int;
	idA2_A2b_2:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	idA2b_A4aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	idA_A1_2:int;
	idA_A2_2:int;
	idHierarchy2_A_2:int;
	let

		-- transition trace :
	--POINT__To__Hierarchy2_A_1
		(idHierarchy2_A_2, idHierarchy2_Hierarchy2_2, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA_A1_2, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A2_2) 
	= Hierarchy2_A_en(idHierarchy2_A_1, idHierarchy2_Hierarchy2_1, a_1, idA1_A1a_1, idA1_A1b_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idA_A1_1, x, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A2_1, false);
		

	(idHierarchy2_Hierarchy2, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA3aA_A3aA1, idA3aA_A3aA2, idA4aA_A4aA1, idA4aA_A4aA2, idA_A1, idA_A2, idHierarchy2_A) 
	=  (idHierarchy2_Hierarchy2_2, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A1_2, idA_A2_2, idHierarchy2_A_2);


	tel

	until true restart POINTHierarchy2_Hierarchy2



	state HIERARCHY2_A_IDL:

	 var 	a_2:int;
	idA1_A1a_2:int;
	idA1_A1b_2:int;
	idA1aA_A1aA1_2:int;
	idA1aA_A1aA2_2:int;
	idA1a_A1aA_2:int;
	idA1b_A3aA_2:int;
	idA2_A2a_2:int;
	idA2_A2b_2:int;
	idA2aA_A2aA1_2:int;
	idA2aA_A2aA2_2:int;
	idA2a_A2aA_2:int;
	idA2b_A4aA_2:int;
	idA3aA_A3aA1_2:int;
	idA3aA_A3aA2_2:int;
	idA4aA_A4aA1_2:int;
	idA4aA_A4aA2_2:int;
	idA_A1_2:int;
	idA_A2_2:int;
	idHierarchy2_A_2:int;
	let

		
	(idHierarchy2_A_2, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA_A1_2, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A2_2) 
	= Hierarchy2_A_node(idHierarchy2_A_1, a_1, idA1_A1a_1, idA1_A1b_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1b_A3aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idA_A1_1, x, P, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A2_1, Q, R, S);

		


	(idHierarchy2_Hierarchy2, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA3aA_A3aA1, idA3aA_A3aA2, idA4aA_A4aA1, idA4aA_A4aA2, idA_A1, idA_A2, idHierarchy2_A) 
	= (idHierarchy2_Hierarchy2_1, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A1_2, idA_A2_2, idHierarchy2_A_2);
	

	tel

	until true restart POINTHierarchy2_Hierarchy2



tel


--***************************************************State :Hierarchy2_Hierarchy2 Automaton***************************************************

node Hierarchy2_Hierarchy2(x:int;
	y:int;
	P:bool;
	Q:bool;
	R:bool;
	S:bool)

returns (a:int;
	b:int;
	c:int;
	d:int);


var a_1: int;

	b_1: int;

	c_1: int;

	d_1: int;

	idHierarchy2_Hierarchy2, idHierarchy2_Hierarchy2_1: int;

	idA2aA_A2aA2, idA2aA_A2aA2_1: int;

	idA2aA_A2aA1, idA2aA_A2aA1_1: int;

	idA2a_A2aA, idA2a_A2aA_1: int;

	idA2_A2a, idA2_A2a_1: int;

	idA4aA_A4aA2, idA4aA_A4aA2_1: int;

	idA4aA_A4aA1, idA4aA_A4aA1_1: int;

	idA2b_A4aA, idA2b_A4aA_1: int;

	idA2_A2b, idA2_A2b_1: int;

	idA_A2, idA_A2_1: int;

	idA1aA_A1aA2, idA1aA_A1aA2_1: int;

	idA1aA_A1aA1, idA1aA_A1aA1_1: int;

	idA1a_A1aA, idA1a_A1aA_1: int;

	idA1_A1a, idA1_A1a_1: int;

	idA3aA_A3aA2, idA3aA_A3aA2_1: int;

	idA3aA_A3aA1, idA3aA_A3aA1_1: int;

	idA1b_A3aA, idA1b_A3aA_1: int;

	idA1_A1b, idA1_A1b_1: int;

	idA_A1, idA_A1_1: int;

	idHierarchy2_A, idHierarchy2_A_1: int;

		idHierarchy2_Hierarchy2_2, idHierarchy2_Hierarchy2_3, idHierarchy2_Hierarchy2_4:int;
	a_2, a_3, a_4:int;
	idA1_A1a_2, idA1_A1a_3, idA1_A1a_4:int;
	idA1_A1b_2, idA1_A1b_3, idA1_A1b_4:int;
	idA1aA_A1aA1_2, idA1aA_A1aA1_3, idA1aA_A1aA1_4:int;
	idA1aA_A1aA2_2, idA1aA_A1aA2_3, idA1aA_A1aA2_4:int;
	idA1a_A1aA_2, idA1a_A1aA_3, idA1a_A1aA_4:int;
	idA1b_A3aA_2, idA1b_A3aA_3, idA1b_A3aA_4:int;
	idA2_A2a_2, idA2_A2a_3, idA2_A2a_4:int;
	idA2_A2b_2, idA2_A2b_3, idA2_A2b_4:int;
	idA2aA_A2aA1_2, idA2aA_A2aA1_3, idA2aA_A2aA1_4:int;
	idA2aA_A2aA2_2, idA2aA_A2aA2_3, idA2aA_A2aA2_4:int;
	idA2a_A2aA_2, idA2a_A2aA_3, idA2a_A2aA_4:int;
	idA2b_A4aA_2, idA2b_A4aA_3, idA2b_A4aA_4:int;
	idA3aA_A3aA1_2, idA3aA_A3aA1_3, idA3aA_A3aA1_4:int;
	idA3aA_A3aA2_2, idA3aA_A3aA2_3, idA3aA_A3aA2_4:int;
	idA4aA_A4aA1_2, idA4aA_A4aA1_3, idA4aA_A4aA1_4:int;
	idA4aA_A4aA2_2, idA4aA_A4aA2_3, idA4aA_A4aA2_4:int;
	idA_A1_2, idA_A1_3, idA_A1_4:int;
	idA_A2_2, idA_A2_3, idA_A2_4:int;
	idHierarchy2_A_2, idHierarchy2_A_3, idHierarchy2_A_4:int;
let

	a_1 = 0 -> pre a;

	b_1 = 0 -> pre b;

	c_1 = 0 -> pre c;

	d_1 = 0 -> pre d;

	idHierarchy2_Hierarchy2_1 = 0 -> pre idHierarchy2_Hierarchy2;

	idA2aA_A2aA2_1 = 0 -> pre idA2aA_A2aA2;

	idA2aA_A2aA1_1 = 0 -> pre idA2aA_A2aA1;

	idA2a_A2aA_1 = 0 -> pre idA2a_A2aA;

	idA2_A2a_1 = 0 -> pre idA2_A2a;

	idA4aA_A4aA2_1 = 0 -> pre idA4aA_A4aA2;

	idA4aA_A4aA1_1 = 0 -> pre idA4aA_A4aA1;

	idA2b_A4aA_1 = 0 -> pre idA2b_A4aA;

	idA2_A2b_1 = 0 -> pre idA2_A2b;

	idA_A2_1 = 0 -> pre idA_A2;

	idA1aA_A1aA2_1 = 0 -> pre idA1aA_A1aA2;

	idA1aA_A1aA1_1 = 0 -> pre idA1aA_A1aA1;

	idA1a_A1aA_1 = 0 -> pre idA1a_A1aA;

	idA1_A1a_1 = 0 -> pre idA1_A1a;

	idA3aA_A3aA2_1 = 0 -> pre idA3aA_A3aA2;

	idA3aA_A3aA1_1 = 0 -> pre idA3aA_A3aA1;

	idA1b_A3aA_1 = 0 -> pre idA1b_A3aA;

	idA1_A1b_1 = 0 -> pre idA1_A1b;

	idA_A1_1 = 0 -> pre idA_A1;

	idHierarchy2_A_1 = 0 -> pre idHierarchy2_A;

	



	(idHierarchy2_Hierarchy2_2, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A1_2, idA_A2_2, idHierarchy2_A_2)
	 = 

	 if P then Hierarchy2_Hierarchy2_node(idHierarchy2_Hierarchy2_1, a_1, idA1_A1a_1, idA1_A1b_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1b_A3aA_1, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A1_1, idA_A2_1, idHierarchy2_A_1, x, P, false, false, false)

	 else (idHierarchy2_Hierarchy2_1, a_1, idA1_A1a_1, idA1_A1b_1, idA1aA_A1aA1_1, idA1aA_A1aA2_1, idA1a_A1aA_1, idA1b_A3aA_1, idA2_A2a_1, idA2_A2b_1, idA2aA_A2aA1_1, idA2aA_A2aA2_1, idA2a_A2aA_1, idA2b_A4aA_1, idA3aA_A3aA1_1, idA3aA_A3aA2_1, idA4aA_A4aA1_1, idA4aA_A4aA2_1, idA_A1_1, idA_A2_1, idHierarchy2_A_1);

	



	(idHierarchy2_Hierarchy2_3, a_3, idA1_A1a_3, idA1_A1b_3, idA1aA_A1aA1_3, idA1aA_A1aA2_3, idA1a_A1aA_3, idA1b_A3aA_3, idA2_A2a_3, idA2_A2b_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3, idA2b_A4aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3, idA_A1_3, idA_A2_3, idHierarchy2_A_3)
	 = 

	 if Q then Hierarchy2_Hierarchy2_node(idHierarchy2_Hierarchy2_2, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A1_2, idA_A2_2, idHierarchy2_A_2, x, false, Q, false, false)

	 else (idHierarchy2_Hierarchy2_2, a_2, idA1_A1a_2, idA1_A1b_2, idA1aA_A1aA1_2, idA1aA_A1aA2_2, idA1a_A1aA_2, idA1b_A3aA_2, idA2_A2a_2, idA2_A2b_2, idA2aA_A2aA1_2, idA2aA_A2aA2_2, idA2a_A2aA_2, idA2b_A4aA_2, idA3aA_A3aA1_2, idA3aA_A3aA2_2, idA4aA_A4aA1_2, idA4aA_A4aA2_2, idA_A1_2, idA_A2_2, idHierarchy2_A_2);

	



	(idHierarchy2_Hierarchy2_4, a_4, idA1_A1a_4, idA1_A1b_4, idA1aA_A1aA1_4, idA1aA_A1aA2_4, idA1a_A1aA_4, idA1b_A3aA_4, idA2_A2a_4, idA2_A2b_4, idA2aA_A2aA1_4, idA2aA_A2aA2_4, idA2a_A2aA_4, idA2b_A4aA_4, idA3aA_A3aA1_4, idA3aA_A3aA2_4, idA4aA_A4aA1_4, idA4aA_A4aA2_4, idA_A1_4, idA_A2_4, idHierarchy2_A_4)
	 = 

	 if R then Hierarchy2_Hierarchy2_node(idHierarchy2_Hierarchy2_3, a_3, idA1_A1a_3, idA1_A1b_3, idA1aA_A1aA1_3, idA1aA_A1aA2_3, idA1a_A1aA_3, idA1b_A3aA_3, idA2_A2a_3, idA2_A2b_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3, idA2b_A4aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3, idA_A1_3, idA_A2_3, idHierarchy2_A_3, x, false, false, R, false)

	 else (idHierarchy2_Hierarchy2_3, a_3, idA1_A1a_3, idA1_A1b_3, idA1aA_A1aA1_3, idA1aA_A1aA2_3, idA1a_A1aA_3, idA1b_A3aA_3, idA2_A2a_3, idA2_A2b_3, idA2aA_A2aA1_3, idA2aA_A2aA2_3, idA2a_A2aA_3, idA2b_A4aA_3, idA3aA_A3aA1_3, idA3aA_A3aA2_3, idA4aA_A4aA1_3, idA4aA_A4aA2_3, idA_A1_3, idA_A2_3, idHierarchy2_A_3);

	



	(idHierarchy2_Hierarchy2, a, idA1_A1a, idA1_A1b, idA1aA_A1aA1, idA1aA_A1aA2, idA1a_A1aA, idA1b_A3aA, idA2_A2a, idA2_A2b, idA2aA_A2aA1, idA2aA_A2aA2, idA2a_A2aA, idA2b_A4aA, idA3aA_A3aA1, idA3aA_A3aA2, idA4aA_A4aA1, idA4aA_A4aA2, idA_A1, idA_A2, idHierarchy2_A)
	 = 

	 if S then Hierarchy2_Hierarchy2_node(idHierarchy2_Hierarchy2_4, a_4, idA1_A1a_4, idA1_A1b_4, idA1aA_A1aA1_4, idA1aA_A1aA2_4, idA1a_A1aA_4, idA1b_A3aA_4, idA2_A2a_4, idA2_A2b_4, idA2aA_A2aA1_4, idA2aA_A2aA2_4, idA2a_A2aA_4, idA2b_A4aA_4, idA3aA_A3aA1_4, idA3aA_A3aA2_4, idA4aA_A4aA1_4, idA4aA_A4aA2_4, idA_A1_4, idA_A2_4, idHierarchy2_A_4, x, false, false, false, S)

	 else (idHierarchy2_Hierarchy2_4, a_4, idA1_A1a_4, idA1_A1b_4, idA1aA_A1aA1_4, idA1aA_A1aA2_4, idA1a_A1aA_4, idA1b_A3aA_4, idA2_A2a_4, idA2_A2b_4, idA2aA_A2aA1_4, idA2aA_A2aA2_4, idA2a_A2aA_4, idA2b_A4aA_4, idA3aA_A3aA1_4, idA3aA_A3aA2_4, idA4aA_A4aA1_4, idA4aA_A4aA2_4, idA_A1_4, idA_A2_4, idHierarchy2_A_4);

	


--unused outputs
	b = 0;

	c = 0;

	d = 0;

	

tel



node Hierarchy2 (x_1_1 : int; P_1_1 : real; y_1_1 : int; Q_1_1 : real; R_1_1 : real; S_1_1 : real)
returns (Out1_1_1 : int;
	Out2_2_1 : int;
	Out3_3_1 : int;
	Out4_4_1 : int); 
var
	Hierarchy2_1_1 : int; Hierarchy2_2_1 : int; Hierarchy2_3_1 : int; Hierarchy2_4_1 : int;
	Mux_1_1 : real; Mux_1_2 : real; Mux_1_3 : real; Mux_1_4 : real;
	Mux_1_1_event: bool;
	Mux_1_2_event: bool;
	Mux_1_3_event: bool;
	Mux_1_4_event: bool;
let 
	Mux_1_1_event = false -> ((pre(Mux_1_1) > 0.0 and Mux_1_1 <= 0.0) or (pre(Mux_1_1) <= 0.0 and Mux_1_1 > 0.0));
	Mux_1_2_event = false -> ((pre(Mux_1_2) > 0.0 and Mux_1_2 <= 0.0) or (pre(Mux_1_2) <= 0.0 and Mux_1_2 > 0.0));
	Mux_1_3_event = false -> ((pre(Mux_1_3) > 0.0 and Mux_1_3 <= 0.0) or (pre(Mux_1_3) <= 0.0 and Mux_1_3 > 0.0));
	Mux_1_4_event = false -> ((pre(Mux_1_4) > 0.0 and Mux_1_4 <= 0.0) or (pre(Mux_1_4) <= 0.0 and Mux_1_4 > 0.0));
	(Hierarchy2_1_1, Hierarchy2_2_1, Hierarchy2_3_1, Hierarchy2_4_1) =  Hierarchy2_Hierarchy2(x_1_1, y_1_1, Mux_1_1_event, Mux_1_2_event, Mux_1_3_event, Mux_1_4_event);
	Mux_1_1 = P_1_1 ;
	Mux_1_2 = Q_1_1 ;
	Mux_1_3 = R_1_1 ;
	Mux_1_4 = S_1_1 ;
	Out1_1_1 = Hierarchy2_1_1;
	Out2_2_1 = Hierarchy2_2_1;
	Out3_3_1 = Hierarchy2_3_1;
	Out4_4_1 = Hierarchy2_4_1;
tel

