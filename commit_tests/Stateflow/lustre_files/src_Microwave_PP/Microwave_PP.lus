-- This file has been generated by CoCoSim


-- System nodes




node RUNNING_COOKING539__To__RUNNING_COOKING539_1_Transition_Action(steps_remaining_1:int)

returns (steps_remaining:int);


var 	steps_remaining_2:int;


let



	steps_remaining_2 
	=  steps_remaining_1  - 1;
	

	(steps_remaining) 
	= (steps_remaining_2);
	

tel
















node Mode_logic_SETUP538__To__Mode_logic_Mode_logic537Junction555_1_Condition_Action(steps_to_cook:int;
	steps_remaining_1:int)

returns (steps_remaining:int);


var 	steps_remaining_2:int;


let



	steps_remaining_2 
	= steps_to_cook;
	

	(steps_remaining) 
	= (steps_remaining_2);
	

tel






-- Entry action for state :RUNNING_COOKING539
node RUNNING_COOKING539_en(idMode_logic_RUNNING541_1:int;
	mode_1:int;
	isInner:bool)

returns (idMode_logic_RUNNING541:int;
	mode:int);


var 	idMode_logic_RUNNING541_2:int;
	mode_2:int;


let



	-- set state as active 
	idMode_logic_RUNNING541_2 
	= 539;
	

	mode_2 
	= if (not isInner) then 2
	 else mode_1;
	

	(idMode_logic_RUNNING541, mode) 
	= (idMode_logic_RUNNING541_2, mode_2);
	

tel





-- Exit action for state :RUNNING_COOKING539
node RUNNING_COOKING539_ex(idMode_logic_RUNNING541_1:int;
	isInner:bool)

returns (idMode_logic_RUNNING541:int);


var 	idMode_logic_RUNNING541_2:int;


let



	-- set state as inactive 
	idMode_logic_RUNNING541_2
	 = if (not isInner) then 0 else idMode_logic_RUNNING541_1;


	(idMode_logic_RUNNING541) 
	= (idMode_logic_RUNNING541_1);
	

tel






-- Entry action for state :RUNNING_SUSPENDED540
node RUNNING_SUSPENDED540_en(idMode_logic_RUNNING541_1:int;
	mode_1:int;
	isInner:bool)

returns (idMode_logic_RUNNING541:int;
	mode:int);


var 	idMode_logic_RUNNING541_2:int;
	mode_2:int;


let



	-- set state as active 
	idMode_logic_RUNNING541_2 
	= 540;
	

	mode_2 
	= if (not isInner) then 3
	 else mode_1;
	

	(idMode_logic_RUNNING541, mode) 
	= (idMode_logic_RUNNING541_2, mode_2);
	

tel





-- Exit action for state :RUNNING_SUSPENDED540
node RUNNING_SUSPENDED540_ex(idMode_logic_RUNNING541_1:int;
	isInner:bool)

returns (idMode_logic_RUNNING541:int);


var 	idMode_logic_RUNNING541_2:int;


let



	-- set state as inactive 
	idMode_logic_RUNNING541_2
	 = if (not isInner) then 0 else idMode_logic_RUNNING541_1;


	(idMode_logic_RUNNING541) 
	= (idMode_logic_RUNNING541_1);
	

tel






-- Entry action for state :Mode_logic_RUNNING541
node Mode_logic_RUNNING541_en(idMode_logic_RUNNING541_1:int;
	idMode_logic_Mode_logic537_1:int;
	door_closed:bool;
	mode_1:int;
	isInner:bool)

returns (idMode_logic_RUNNING541:int;
	idMode_logic_Mode_logic537:int;
	mode:int);


var 	idMode_logic_RUNNING541_2, idMode_logic_RUNNING541_3, idMode_logic_RUNNING541_4, idMode_logic_RUNNING541_5, idMode_logic_RUNNING541_6, idMode_logic_RUNNING541_7:int;
	idMode_logic_Mode_logic537_2, idMode_logic_Mode_logic537_3, idMode_logic_Mode_logic537_4:int;
	mode_2, mode_3, mode_4, mode_5, mode_6, mode_7:int;


let



	-- set state as active 
	idMode_logic_Mode_logic537_2 
	= 541;
	

	


-- transition trace :
	--POINT__To__Junction542_1, Junction542__To__RUNNING_COOKING539_1
		(idMode_logic_RUNNING541_2, mode_2) 
	= 
		 if (( door_closed )) then 
		RUNNING_COOKING539_en(idMode_logic_RUNNING541_1, mode_1, false)
		 else (idMode_logic_RUNNING541_1, mode_1);
		


-- transition trace :
	--POINT__To__Junction542_1, Junction542__To__RUNNING_SUSPENDED540_2
		(idMode_logic_RUNNING541_3, mode_3) 
	= RUNNING_SUSPENDED540_en(idMode_logic_RUNNING541_1, mode_1, false);
		

	(idMode_logic_RUNNING541_4, idMode_logic_Mode_logic537_3, mode_4) 
	= 

	if ( idMode_logic_RUNNING541_1 = 0) then

	
		 if (( door_closed )) then 
		(idMode_logic_RUNNING541_2, idMode_logic_Mode_logic537_2, mode_2)
		 else (idMode_logic_RUNNING541_3, idMode_logic_Mode_logic537_2, mode_3)

	 else(idMode_logic_RUNNING541_1, idMode_logic_Mode_logic537_2, mode_1);

	

	(idMode_logic_RUNNING541_5, mode_5) 
	= 
	if ( idMode_logic_RUNNING541_1 = 539) then
	RUNNING_COOKING539_en(idMode_logic_RUNNING541_1, mode_1, false)
	 else (idMode_logic_RUNNING541_1, mode_1);

	

	(idMode_logic_RUNNING541_6, mode_6) 
	= 
	if ( idMode_logic_RUNNING541_1 = 540) then
	RUNNING_SUSPENDED540_en(idMode_logic_RUNNING541_1, mode_1, false)
	 else (idMode_logic_RUNNING541_1, mode_1);

	

	(idMode_logic_RUNNING541_7, idMode_logic_Mode_logic537_4, mode_7) 
	= 
		 if ( idMode_logic_RUNNING541_1 = 0) then 
		(idMode_logic_RUNNING541_4, idMode_logic_Mode_logic537_3, mode_4)
		 else
		 if ( idMode_logic_RUNNING541_1 = 539) then 
		(idMode_logic_RUNNING541_5, idMode_logic_Mode_logic537_3, mode_5)
		 else
		 if ( idMode_logic_RUNNING541_1 = 540) then 
		(idMode_logic_RUNNING541_6, idMode_logic_Mode_logic537_3, mode_6)
		 else (idMode_logic_RUNNING541_1, idMode_logic_Mode_logic537_2, mode_1);


	(idMode_logic_RUNNING541, idMode_logic_Mode_logic537, mode) 
	= (idMode_logic_RUNNING541_7, idMode_logic_Mode_logic537_4, mode_7);
	

tel





-- Exit action for state :Mode_logic_RUNNING541
node Mode_logic_RUNNING541_ex(idMode_logic_RUNNING541_1:int;
	idMode_logic_Mode_logic537_1:int;
	isInner:bool)

returns (idMode_logic_RUNNING541:int;
	idMode_logic_Mode_logic537:int);


var 	idMode_logic_RUNNING541_2, idMode_logic_RUNNING541_3, idMode_logic_RUNNING541_4, idMode_logic_RUNNING541_5:int;
	idMode_logic_Mode_logic537_2:int;


let



	
	(idMode_logic_RUNNING541_2) 
	= 
	if ( idMode_logic_RUNNING541_1 = 539) then
	RUNNING_COOKING539_ex(idMode_logic_RUNNING541_1, false)
	 else (idMode_logic_RUNNING541_1);

	

	(idMode_logic_RUNNING541_3) 
	= 
	if ( idMode_logic_RUNNING541_1 = 540) then
	RUNNING_SUSPENDED540_ex(idMode_logic_RUNNING541_1, false)
	 else (idMode_logic_RUNNING541_1);

	

	(idMode_logic_RUNNING541_4) 
	= 
		 if ( idMode_logic_RUNNING541_1 = 539) then 
		(idMode_logic_RUNNING541_2)
		 else
		 if ( idMode_logic_RUNNING541_1 = 540) then 
		(idMode_logic_RUNNING541_3)
		 else (idMode_logic_RUNNING541_1);


	-- set state as inactive 
	idMode_logic_Mode_logic537_2
	 = if (not isInner) then 0 else idMode_logic_Mode_logic537_1;

	idMode_logic_RUNNING541_5 
	= 0;
	

	(idMode_logic_RUNNING541, idMode_logic_Mode_logic537) 
	= (idMode_logic_RUNNING541_5, idMode_logic_Mode_logic537_1);
	

tel






-- Entry action for state :Mode_logic_SETUP538
node Mode_logic_SETUP538_en(idMode_logic_Mode_logic537_1:int;
	mode_1:int;
	steps_to_cook:int;
	steps_remaining_1:int;
	isInner:bool)

returns (idMode_logic_Mode_logic537:int;
	mode:int;
	steps_remaining:int);


var 	idMode_logic_Mode_logic537_2:int;
	mode_2:int;
	steps_remaining_2:int;


let



	-- set state as active 
	idMode_logic_Mode_logic537_2 
	= 538;
	

	mode_2 
	= if (not isInner) then 1
	 else mode_1;
	

	steps_remaining_2 
	= if (not isInner) then steps_to_cook
	 else steps_remaining_1;
	

	(idMode_logic_Mode_logic537, mode, steps_remaining) 
	= (idMode_logic_Mode_logic537_2, mode_2, steps_remaining_2);
	

tel





-- Exit action for state :Mode_logic_SETUP538
node Mode_logic_SETUP538_ex(idMode_logic_Mode_logic537_1:int;
	isInner:bool)

returns (idMode_logic_Mode_logic537:int);


var 	idMode_logic_Mode_logic537_2:int;


let



	-- set state as inactive 
	idMode_logic_Mode_logic537_2
	 = if (not isInner) then 0 else idMode_logic_Mode_logic537_1;


	(idMode_logic_Mode_logic537) 
	= (idMode_logic_Mode_logic537_1);
	

tel


--***************************************************State :Mode_logic_RUNNING541 Automaton***************************************************

node Mode_logic_RUNNING541_node(idMode_logic_RUNNING541_1:int;
	door_closed:bool;
	mode_1:int;
	steps_remaining_1:int;
	clear:bool;
	idMode_logic_Mode_logic537_1:int;
	steps_to_cook:int;
	start:bool)

returns (idMode_logic_RUNNING541:int;
	mode:int;
	steps_remaining:int;
	idMode_logic_Mode_logic537:int);


let

	 automaton mode_logic_running541

	state POINTMode_logic_RUNNING541:
	unless (idMode_logic_RUNNING541_1=0) restart POINT__TO__MODE_LOGIC_MODE_LOGIC537JUNCTION542_1



	unless (idMode_logic_RUNNING541_1=539) and (  steps_remaining_1 >0 ) restart RUNNING_COOKING539__TO__RUNNING_COOKING539_1



	unless (idMode_logic_RUNNING541_1=539) and ( clear or not door_closed ) restart RUNNING_COOKING539__TO__RUNNING_SUSPENDED540_2



	unless (idMode_logic_RUNNING541_1=540) and ( clear ) restart RUNNING_SUSPENDED540__TO__MODE_LOGIC_MODE_LOGIC537JUNCTION556_1



	unless (idMode_logic_RUNNING541_1=540) and ( start and door_closed ) restart RUNNING_SUSPENDED540__TO__RUNNING_COOKING539_2



	unless (idMode_logic_RUNNING541_1=539) restart RUNNING_COOKING539_IDL

	unless (idMode_logic_RUNNING541_1=540) restart RUNNING_SUSPENDED540_IDL

	let

		(idMode_logic_RUNNING541, mode, steps_remaining, idMode_logic_Mode_logic537) 
	= (idMode_logic_RUNNING541_1, mode_1, steps_remaining_1, idMode_logic_Mode_logic537_1);
	

	tel



	state POINT__TO__MODE_LOGIC_MODE_LOGIC537JUNCTION542_1:

	 var 	idMode_logic_RUNNING541_2, idMode_logic_RUNNING541_3:int;
	mode_2, mode_3:int;
	let

		

-- transition trace :
	--POINT__To__Junction542_1, Junction542__To__RUNNING_COOKING539_1
		(idMode_logic_RUNNING541_2, mode_2) 
	= 
		 if (( door_closed )) then 
		RUNNING_COOKING539_en(idMode_logic_RUNNING541_1, mode_1, false)
		 else (idMode_logic_RUNNING541_1, mode_1);
		


-- transition trace :
	--POINT__To__Junction542_1, Junction542__To__RUNNING_SUSPENDED540_2
		(idMode_logic_RUNNING541_3, mode_3) 
	= RUNNING_SUSPENDED540_en(idMode_logic_RUNNING541_1, mode_1, false);
		

	(idMode_logic_RUNNING541, mode) 
	= 
		 if (( door_closed )) then 
		(idMode_logic_RUNNING541_2, mode_2)
		 else (idMode_logic_RUNNING541_3, mode_3);

	--add unused variables
	(idMode_logic_Mode_logic537, steps_remaining) 
	= (idMode_logic_Mode_logic537_1, steps_remaining_1);
	

	tel

	until true restart POINTMode_logic_RUNNING541



	state RUNNING_COOKING539__TO__RUNNING_COOKING539_1:

	 var 	idMode_logic_RUNNING541_2, idMode_logic_RUNNING541_3:int;
	mode_2:int;
	steps_remaining_2:int;
	let

		-- transition trace :
	--RUNNING_COOKING539__To__RUNNING_COOKING539_1
		(idMode_logic_RUNNING541_2) 
	= RUNNING_COOKING539_ex(idMode_logic_RUNNING541_1, false);
		

		(steps_remaining_2) 
	= RUNNING_COOKING539__To__RUNNING_COOKING539_1_Transition_Action(steps_remaining_1);
		

		(idMode_logic_RUNNING541_3, mode_2) 
	= RUNNING_COOKING539_en(idMode_logic_RUNNING541_2, mode_1, false);
		

	(idMode_logic_RUNNING541, mode, steps_remaining) 
	=  (idMode_logic_RUNNING541_3, mode_2, steps_remaining_2);

	--add unused variables
	(idMode_logic_Mode_logic537) 
	= (idMode_logic_Mode_logic537_1);
	

	tel

	until true restart POINTMode_logic_RUNNING541



	state RUNNING_COOKING539__TO__RUNNING_SUSPENDED540_2:

	 var 	idMode_logic_RUNNING541_2, idMode_logic_RUNNING541_3:int;
	mode_2:int;
	let

		-- transition trace :
	--RUNNING_COOKING539__To__RUNNING_SUSPENDED540_2
		(idMode_logic_RUNNING541_2) 
	= RUNNING_COOKING539_ex(idMode_logic_RUNNING541_1, false);
		

		(idMode_logic_RUNNING541_3, mode_2) 
	= RUNNING_SUSPENDED540_en(idMode_logic_RUNNING541_2, mode_1, false);
		

	(idMode_logic_RUNNING541, mode, steps_remaining) 
	=  (idMode_logic_RUNNING541_3, mode_2, steps_remaining_1);

	--add unused variables
	(idMode_logic_Mode_logic537) 
	= (idMode_logic_Mode_logic537_1);
	

	tel

	until true restart POINTMode_logic_RUNNING541



	state RUNNING_SUSPENDED540__TO__MODE_LOGIC_MODE_LOGIC537JUNCTION556_1:

	 var 	idMode_logic_RUNNING541_2:int;
	mode_2:int;
	steps_remaining_2:int;
	idMode_logic_Mode_logic537_2, idMode_logic_Mode_logic537_3:int;
	let

		

-- transition trace :
	--RUNNING_SUSPENDED540__To__Junction556_1, Junction556__To__Mode_logic_SETUP538_1
		(idMode_logic_RUNNING541_2, idMode_logic_Mode_logic537_2) 
	= Mode_logic_RUNNING541_ex(idMode_logic_RUNNING541_1, idMode_logic_Mode_logic537_1, false);
		

		(idMode_logic_Mode_logic537_3, mode_2, steps_remaining_2) 
	= Mode_logic_SETUP538_en(idMode_logic_Mode_logic537_2, mode_1, steps_to_cook, steps_remaining_1, false);
		

	(idMode_logic_RUNNING541, mode, steps_remaining, idMode_logic_Mode_logic537) 
	=  (idMode_logic_RUNNING541_2, mode_2, steps_remaining_2, idMode_logic_Mode_logic537_3);


	tel

	until true restart POINTMode_logic_RUNNING541



	state RUNNING_SUSPENDED540__TO__RUNNING_COOKING539_2:

	 var 	idMode_logic_RUNNING541_2, idMode_logic_RUNNING541_3:int;
	mode_2:int;
	let

		-- transition trace :
	--RUNNING_SUSPENDED540__To__RUNNING_COOKING539_2
		(idMode_logic_RUNNING541_2) 
	= RUNNING_SUSPENDED540_ex(idMode_logic_RUNNING541_1, false);
		

		(idMode_logic_RUNNING541_3, mode_2) 
	= RUNNING_COOKING539_en(idMode_logic_RUNNING541_2, mode_1, false);
		

	(idMode_logic_RUNNING541, mode, steps_remaining, idMode_logic_Mode_logic537) 
	=  (idMode_logic_RUNNING541_3, mode_2, steps_remaining_1, idMode_logic_Mode_logic537_1);


	tel

	until true restart POINTMode_logic_RUNNING541



	state RUNNING_COOKING539_IDL:

	 	let

		

	(idMode_logic_RUNNING541, mode, steps_remaining, idMode_logic_Mode_logic537) 
	= (idMode_logic_RUNNING541_1, mode_1, steps_remaining_1, idMode_logic_Mode_logic537_1);
	

	tel

	until true restart POINTMode_logic_RUNNING541



	state RUNNING_SUSPENDED540_IDL:

	 	let

		

	(idMode_logic_RUNNING541, mode, steps_remaining, idMode_logic_Mode_logic537) 
	= (idMode_logic_RUNNING541_1, mode_1, steps_remaining_1, idMode_logic_Mode_logic537_1);
	

	tel

	until true restart POINTMode_logic_RUNNING541



tel


--***************************************************State :Mode_logic_Mode_logic537 Automaton***************************************************

node Mode_logic_Mode_logic537_node(idMode_logic_Mode_logic537_1:int;
	mode_1:int;
	steps_remaining_1:int;
	steps_to_cook:int;
	start:bool;
	door_closed:bool;
	idMode_logic_RUNNING541_1:int;
	clear:bool)

returns (idMode_logic_Mode_logic537:int;
	mode:int;
	steps_remaining:int;
	idMode_logic_RUNNING541:int);


let

	 automaton mode_logic_mode_logic537

	state POINTMode_logic_Mode_logic537:
	unless (idMode_logic_Mode_logic537_1=0) restart POINT__TO__MODE_LOGIC_SETUP538_1



	unless (idMode_logic_Mode_logic537_1=538) restart MODE_LOGIC_SETUP538__TO__MODE_LOGIC_MODE_LOGIC537JUNCTION555_1



	unless (idMode_logic_Mode_logic537_1=541) and (  steps_remaining_1 <=0 ) restart MODE_LOGIC_RUNNING541__TO__MODE_LOGIC_MODE_LOGIC537JUNCTION556_1



	unless (idMode_logic_Mode_logic537_1=538) restart MODE_LOGIC_SETUP538_IDL

	unless (idMode_logic_Mode_logic537_1=541) restart MODE_LOGIC_RUNNING541_IDL

	let

		(idMode_logic_Mode_logic537, mode, steps_remaining, idMode_logic_RUNNING541) 
	= (idMode_logic_Mode_logic537_1, mode_1, steps_remaining_1, idMode_logic_RUNNING541_1);
	

	tel



	state POINT__TO__MODE_LOGIC_SETUP538_1:

	 var 	idMode_logic_Mode_logic537_2:int;
	mode_2:int;
	steps_remaining_2:int;
	let

		-- transition trace :
	--POINT__To__Mode_logic_SETUP538_1
		(idMode_logic_Mode_logic537_2, mode_2, steps_remaining_2) 
	= Mode_logic_SETUP538_en(idMode_logic_Mode_logic537_1, mode_1, steps_to_cook, steps_remaining_1, false);
		

	(idMode_logic_Mode_logic537, mode, steps_remaining) 
	=  (idMode_logic_Mode_logic537_2, mode_2, steps_remaining_2);

	--add unused variables
	(idMode_logic_RUNNING541) 
	= (idMode_logic_RUNNING541_1);
	

	tel

	until true restart POINTMode_logic_Mode_logic537



	state MODE_LOGIC_SETUP538__TO__MODE_LOGIC_MODE_LOGIC537JUNCTION555_1:

	 var 	idMode_logic_Mode_logic537_2, idMode_logic_Mode_logic537_3:int;
	mode_2:int;
	steps_remaining_2:int;
	idMode_logic_RUNNING541_2:int;
	let

		

-- transition trace :
	--Mode_logic_SETUP538__To__Junction555_1, Junction555__To__Mode_logic_RUNNING541_1
		-- condition Action : steps_remaining=steps_to_cook;
		
		(steps_remaining_2) 
	= Mode_logic_SETUP538__To__Mode_logic_Mode_logic537Junction555_1_Condition_Action(steps_to_cook, steps_remaining_1);
		

		(idMode_logic_Mode_logic537_2) 
	= 
		 if (( start and  steps_remaining_2 >0 )) then 
		Mode_logic_SETUP538_ex(idMode_logic_Mode_logic537_1, false)
		 else (idMode_logic_Mode_logic537_1);
		

		(idMode_logic_RUNNING541_2, idMode_logic_Mode_logic537_3, mode_2) 
	= 
		 if (( start and  steps_remaining_2 >0 )) then 
		Mode_logic_RUNNING541_en(idMode_logic_RUNNING541_1, idMode_logic_Mode_logic537_2, door_closed, mode_1, false)
		 else (idMode_logic_RUNNING541_1, idMode_logic_Mode_logic537_2, mode_1);
		

	(idMode_logic_Mode_logic537, mode, steps_remaining, idMode_logic_RUNNING541) 
	= 
		 if (( start and  steps_remaining_2 >0 )) then 
		(idMode_logic_Mode_logic537_3, mode_2, steps_remaining_2, idMode_logic_RUNNING541_2)
		 else (idMode_logic_Mode_logic537_1, mode_1, steps_remaining_2, idMode_logic_RUNNING541_1);


	tel

	until true restart POINTMode_logic_Mode_logic537



	state MODE_LOGIC_RUNNING541__TO__MODE_LOGIC_MODE_LOGIC537JUNCTION556_1:

	 var 	idMode_logic_Mode_logic537_2, idMode_logic_Mode_logic537_3:int;
	mode_2:int;
	steps_remaining_2:int;
	idMode_logic_RUNNING541_2:int;
	let

		

-- transition trace :
	--Mode_logic_RUNNING541__To__Junction556_1, Junction556__To__Mode_logic_SETUP538_1
		(idMode_logic_RUNNING541_2, idMode_logic_Mode_logic537_2) 
	= Mode_logic_RUNNING541_ex(idMode_logic_RUNNING541_1, idMode_logic_Mode_logic537_1, false);
		

		(idMode_logic_Mode_logic537_3, mode_2, steps_remaining_2) 
	= Mode_logic_SETUP538_en(idMode_logic_Mode_logic537_2, mode_1, steps_to_cook, steps_remaining_1, false);
		

	(idMode_logic_Mode_logic537, mode, steps_remaining, idMode_logic_RUNNING541) 
	=  (idMode_logic_Mode_logic537_3, mode_2, steps_remaining_2, idMode_logic_RUNNING541_2);


	tel

	until true restart POINTMode_logic_Mode_logic537



	state MODE_LOGIC_SETUP538_IDL:

	 	let

		

	(idMode_logic_Mode_logic537, mode, steps_remaining, idMode_logic_RUNNING541) 
	= (idMode_logic_Mode_logic537_1, mode_1, steps_remaining_1, idMode_logic_RUNNING541_1);
	

	tel

	until true restart POINTMode_logic_Mode_logic537



	state MODE_LOGIC_RUNNING541_IDL:

	 var 	idMode_logic_Mode_logic537_2:int;
	mode_2:int;
	steps_remaining_2:int;
	idMode_logic_RUNNING541_2:int;
	let

		
	(idMode_logic_RUNNING541_2, mode_2, steps_remaining_2, idMode_logic_Mode_logic537_2) 
	= Mode_logic_RUNNING541_node(idMode_logic_RUNNING541_1, door_closed, mode_1, steps_remaining_1, clear, idMode_logic_Mode_logic537_1, steps_to_cook, start);

		


	(idMode_logic_Mode_logic537, mode, steps_remaining, idMode_logic_RUNNING541) 
	= (idMode_logic_Mode_logic537_2, mode_2, steps_remaining_2, idMode_logic_RUNNING541_2);
	

	tel

	until true restart POINTMode_logic_Mode_logic537



tel


--***************************************************State :Mode_logic_Mode_logic537 Automaton***************************************************

node Microwave_PP_Mode_logic(start:bool;
	clear:bool;
	steps_to_cook:int;
	door_closed:bool)

returns (mode:int;
	steps_remaining:int);


var mode_1: int;

	steps_remaining_1: int;

	idMode_logic_Mode_logic537, idMode_logic_Mode_logic537_1: int;

	idMode_logic_RUNNING541, idMode_logic_RUNNING541_1: int;

	let

	mode_1 = 0 -> pre mode;

	steps_remaining_1 = 0 -> pre steps_remaining;

	idMode_logic_Mode_logic537_1 = 0 -> pre idMode_logic_Mode_logic537;

	idMode_logic_RUNNING541_1 = 0 -> pre idMode_logic_RUNNING541;

	



	(idMode_logic_Mode_logic537, mode, steps_remaining, idMode_logic_RUNNING541)
	 = Mode_logic_Mode_logic537_node(idMode_logic_Mode_logic537_1, mode_1, steps_remaining_1, steps_to_cook, start, door_closed, idMode_logic_RUNNING541_1, clear);


--unused outputs
	

tel



node Microwave_PP (start_1_1 : bool; clear_1_1 : bool; steps_to_cook_1_1 : int; door_closed_1_1 : bool)
returns (mode_1_1 : int;
	steps_remaining_2_1 : int); 
var
	Mode_logic_1_1 : int; Mode_logic_2_1 : int;
	i_virtual_local : real;
let 
	(Mode_logic_1_1, Mode_logic_2_1) =  Microwave_PP_Mode_logic(start_1_1, clear_1_1, steps_to_cook_1_1, door_closed_1_1);
	mode_1_1 = Mode_logic_1_1;
	steps_remaining_2_1 = Mode_logic_2_1;
	i_virtual_local= 0.0 -> 1.0;
tel

