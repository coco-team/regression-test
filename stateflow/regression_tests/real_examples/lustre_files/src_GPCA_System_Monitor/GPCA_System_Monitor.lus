-- This file has been generated by cocoSim


-- System nodes








-- Entry action for state :SystemMonitorSubSystem_NOT_ON
node SystemMonitorSubSystem_NOT_ON_en(idSystemMonitorSubSystem_SystemMonitorSubSystem_1:int;
	isInner:bool)

returns (idSystemMonitorSubSystem_SystemMonitorSubSystem:int);


var 	idSystemMonitorSubSystem_SystemMonitorSubSystem_2:int;


let



	-- set state as active 
	idSystemMonitorSubSystem_SystemMonitorSubSystem_2 
	= 339;
	

	(idSystemMonitorSubSystem_SystemMonitorSubSystem) 
	= (idSystemMonitorSubSystem_SystemMonitorSubSystem_2);
	

tel





-- Exit action for state :SystemMonitorSubSystem_NOT_ON
node SystemMonitorSubSystem_NOT_ON_ex(idSystemMonitorSubSystem_SystemMonitorSubSystem_1:int;
	isInner:bool)

returns (idSystemMonitorSubSystem_SystemMonitorSubSystem:int);


var 	idSystemMonitorSubSystem_SystemMonitorSubSystem_2:int;


let



	-- set state as inactive 
	idSystemMonitorSubSystem_SystemMonitorSubSystem_2
	 = if (not isInner) then 0 else idSystemMonitorSubSystem_SystemMonitorSubSystem_1;


	(idSystemMonitorSubSystem_SystemMonitorSubSystem) 
	= (idSystemMonitorSubSystem_SystemMonitorSubSystem_2);
	

tel






-- Entry action for state :SystemMonitorSubSystem_System_Monitor
node SystemMonitorSubSystem_System_Monitor_en(idSystemMonitorSubSystem_SystemMonitorSubSystem_1:int;
	SYS_MON_OUT_System_Monitor_Failed_1:bool;
	isInner:bool)

returns (idSystemMonitorSubSystem_SystemMonitorSubSystem:int;
	SYS_MON_OUT_System_Monitor_Failed:bool);


var 	idSystemMonitorSubSystem_SystemMonitorSubSystem_2:int;
	SYS_MON_OUT_System_Monitor_Failed_2:bool;


let



	-- set state as active 
	idSystemMonitorSubSystem_SystemMonitorSubSystem_2 
	= 338;
	

	SYS_MON_OUT_System_Monitor_Failed_2 
	= if (not isInner) then false
	 else SYS_MON_OUT_System_Monitor_Failed_1;
	

	(idSystemMonitorSubSystem_SystemMonitorSubSystem, SYS_MON_OUT_System_Monitor_Failed) 
	= (idSystemMonitorSubSystem_SystemMonitorSubSystem_2, SYS_MON_OUT_System_Monitor_Failed_2);
	

tel





--During action for state :SystemMonitorSubSystem_System_Monitor
node SystemMonitorSubSystem_System_Monitor_du(SYS_MON_OUT_System_Monitor_Failed_1:bool)

returns (SYS_MON_OUT_System_Monitor_Failed:bool);


var 	SYS_MON_OUT_System_Monitor_Failed_2:bool;


let



	SYS_MON_OUT_System_Monitor_Failed_2 
	= false;
	

	(SYS_MON_OUT_System_Monitor_Failed) 
	= (SYS_MON_OUT_System_Monitor_Failed_2);
	

tel





-- Exit action for state :SystemMonitorSubSystem_System_Monitor
node SystemMonitorSubSystem_System_Monitor_ex(SYS_MON_OUT_System_Monitor_Failed_1:bool;
	idSystemMonitorSubSystem_SystemMonitorSubSystem_1:int;
	isInner:bool)

returns (SYS_MON_OUT_System_Monitor_Failed:bool;
	idSystemMonitorSubSystem_SystemMonitorSubSystem:int);


var 	SYS_MON_OUT_System_Monitor_Failed_2:bool;
	idSystemMonitorSubSystem_SystemMonitorSubSystem_2:int;


let



	SYS_MON_OUT_System_Monitor_Failed_2 
	= if (not isInner) then false
	 else SYS_MON_OUT_System_Monitor_Failed_1;
	

	-- set state as inactive 
	idSystemMonitorSubSystem_SystemMonitorSubSystem_2
	 = if (not isInner) then 0 else idSystemMonitorSubSystem_SystemMonitorSubSystem_1;


	(SYS_MON_OUT_System_Monitor_Failed, idSystemMonitorSubSystem_SystemMonitorSubSystem) 
	= (SYS_MON_OUT_System_Monitor_Failed_2, idSystemMonitorSubSystem_SystemMonitorSubSystem_2);
	

tel


--***************************************************State :SystemMonitorSubSystem_SystemMonitorSubSystem Automaton***************************************************

node SystemMonitorSubSystem_SystemMonitorSubSystem_node(idSystemMonitorSubSystem_SystemMonitorSubSystem_1:int;
	TLM_MODE_IN_System_On:bool;
	SYS_MON_OUT_System_Monitor_Failed_1:bool)

returns (idSystemMonitorSubSystem_SystemMonitorSubSystem:int;
	SYS_MON_OUT_System_Monitor_Failed:bool);


let

	 automaton systemmonitorsubsystem_systemmonitorsubsystem

	state POINTSystemMonitorSubSystem_SystemMonitorSubSystem:
	unless (idSystemMonitorSubSystem_SystemMonitorSubSystem_1=0) and ( TLM_MODE_IN_System_On ) restart POINT__TO__SYSTEMMONITORSUBSYSTEM_SYSTEM_MONITOR_1



	unless (idSystemMonitorSubSystem_SystemMonitorSubSystem_1=0) restart POINT__TO__SYSTEMMONITORSUBSYSTEM_NOT_ON_2



	unless (idSystemMonitorSubSystem_SystemMonitorSubSystem_1=338) and ( not TLM_MODE_IN_System_On ) restart SYSTEMMONITORSUBSYSTEM_SYSTEM_MONITOR__TO__SYSTEMMONITORSUBSYSTEM_NOT_ON_1



	unless (idSystemMonitorSubSystem_SystemMonitorSubSystem_1=339) and ( TLM_MODE_IN_System_On ) restart SYSTEMMONITORSUBSYSTEM_NOT_ON__TO__SYSTEMMONITORSUBSYSTEM_SYSTEM_MONITOR_1



	unless (idSystemMonitorSubSystem_SystemMonitorSubSystem_1=338) restart SYSTEMMONITORSUBSYSTEM_SYSTEM_MONITOR_IDL

	unless (idSystemMonitorSubSystem_SystemMonitorSubSystem_1=339) restart SYSTEMMONITORSUBSYSTEM_NOT_ON_IDL

	let

		(idSystemMonitorSubSystem_SystemMonitorSubSystem, SYS_MON_OUT_System_Monitor_Failed) 
	= (idSystemMonitorSubSystem_SystemMonitorSubSystem_1, SYS_MON_OUT_System_Monitor_Failed_1);
	

	tel



	state POINT__TO__SYSTEMMONITORSUBSYSTEM_SYSTEM_MONITOR_1:

	 var 	idSystemMonitorSubSystem_SystemMonitorSubSystem_2:int;
	SYS_MON_OUT_System_Monitor_Failed_2:bool;
	let

		-- transition trace :
	--POINT__To__SystemMonitorSubSystem_System_Monitor_1
		(idSystemMonitorSubSystem_SystemMonitorSubSystem_2, SYS_MON_OUT_System_Monitor_Failed_2) 
	= SystemMonitorSubSystem_System_Monitor_en(idSystemMonitorSubSystem_SystemMonitorSubSystem_1, SYS_MON_OUT_System_Monitor_Failed_1, false);
		

	(idSystemMonitorSubSystem_SystemMonitorSubSystem, SYS_MON_OUT_System_Monitor_Failed) 
	=  (idSystemMonitorSubSystem_SystemMonitorSubSystem_2, SYS_MON_OUT_System_Monitor_Failed_2);


	tel

	until true restart POINTSystemMonitorSubSystem_SystemMonitorSubSystem



	state POINT__TO__SYSTEMMONITORSUBSYSTEM_NOT_ON_2:

	 var 	idSystemMonitorSubSystem_SystemMonitorSubSystem_2:int;
	let

		-- transition trace :
	--POINT__To__SystemMonitorSubSystem_NOT_ON_2
		(idSystemMonitorSubSystem_SystemMonitorSubSystem_2) 
	= SystemMonitorSubSystem_NOT_ON_en(idSystemMonitorSubSystem_SystemMonitorSubSystem_1, false);
		

	(idSystemMonitorSubSystem_SystemMonitorSubSystem, SYS_MON_OUT_System_Monitor_Failed) 
	=  (idSystemMonitorSubSystem_SystemMonitorSubSystem_2, SYS_MON_OUT_System_Monitor_Failed_1);


	tel

	until true restart POINTSystemMonitorSubSystem_SystemMonitorSubSystem



	state SYSTEMMONITORSUBSYSTEM_SYSTEM_MONITOR__TO__SYSTEMMONITORSUBSYSTEM_NOT_ON_1:

	 var 	idSystemMonitorSubSystem_SystemMonitorSubSystem_2, idSystemMonitorSubSystem_SystemMonitorSubSystem_3:int;
	SYS_MON_OUT_System_Monitor_Failed_2:bool;
	let

		-- transition trace :
	--SystemMonitorSubSystem_System_Monitor__To__SystemMonitorSubSystem_NOT_ON_1
		(SYS_MON_OUT_System_Monitor_Failed_2, idSystemMonitorSubSystem_SystemMonitorSubSystem_2) 
	= SystemMonitorSubSystem_System_Monitor_ex(SYS_MON_OUT_System_Monitor_Failed_1, idSystemMonitorSubSystem_SystemMonitorSubSystem_1, false);
		

		(idSystemMonitorSubSystem_SystemMonitorSubSystem_3) 
	= SystemMonitorSubSystem_NOT_ON_en(idSystemMonitorSubSystem_SystemMonitorSubSystem_2, false);
		

	(idSystemMonitorSubSystem_SystemMonitorSubSystem, SYS_MON_OUT_System_Monitor_Failed) 
	=  (idSystemMonitorSubSystem_SystemMonitorSubSystem_3, SYS_MON_OUT_System_Monitor_Failed_2);


	tel

	until true restart POINTSystemMonitorSubSystem_SystemMonitorSubSystem



	state SYSTEMMONITORSUBSYSTEM_NOT_ON__TO__SYSTEMMONITORSUBSYSTEM_SYSTEM_MONITOR_1:

	 var 	idSystemMonitorSubSystem_SystemMonitorSubSystem_2, idSystemMonitorSubSystem_SystemMonitorSubSystem_3:int;
	SYS_MON_OUT_System_Monitor_Failed_2:bool;
	let

		-- transition trace :
	--SystemMonitorSubSystem_NOT_ON__To__SystemMonitorSubSystem_System_Monitor_1
		(idSystemMonitorSubSystem_SystemMonitorSubSystem_2) 
	= SystemMonitorSubSystem_NOT_ON_ex(idSystemMonitorSubSystem_SystemMonitorSubSystem_1, false);
		

		(idSystemMonitorSubSystem_SystemMonitorSubSystem_3, SYS_MON_OUT_System_Monitor_Failed_2) 
	= SystemMonitorSubSystem_System_Monitor_en(idSystemMonitorSubSystem_SystemMonitorSubSystem_2, SYS_MON_OUT_System_Monitor_Failed_1, false);
		

	(idSystemMonitorSubSystem_SystemMonitorSubSystem, SYS_MON_OUT_System_Monitor_Failed) 
	=  (idSystemMonitorSubSystem_SystemMonitorSubSystem_3, SYS_MON_OUT_System_Monitor_Failed_2);


	tel

	until true restart POINTSystemMonitorSubSystem_SystemMonitorSubSystem



	state SYSTEMMONITORSUBSYSTEM_SYSTEM_MONITOR_IDL:

	 var 	SYS_MON_OUT_System_Monitor_Failed_2:bool;
	let

		
	(SYS_MON_OUT_System_Monitor_Failed_2) 
	= SystemMonitorSubSystem_System_Monitor_du(SYS_MON_OUT_System_Monitor_Failed_1);

		


	(idSystemMonitorSubSystem_SystemMonitorSubSystem, SYS_MON_OUT_System_Monitor_Failed) 
	= (idSystemMonitorSubSystem_SystemMonitorSubSystem_1, SYS_MON_OUT_System_Monitor_Failed_2);
	

	tel

	until true restart POINTSystemMonitorSubSystem_SystemMonitorSubSystem



	state SYSTEMMONITORSUBSYSTEM_NOT_ON_IDL:

	 	let

		

	(idSystemMonitorSubSystem_SystemMonitorSubSystem, SYS_MON_OUT_System_Monitor_Failed) 
	= (idSystemMonitorSubSystem_SystemMonitorSubSystem_1, SYS_MON_OUT_System_Monitor_Failed_1);
	

	tel

	until true restart POINTSystemMonitorSubSystem_SystemMonitorSubSystem



tel


--***************************************************State :SystemMonitorSubSystem_SystemMonitorSubSystem Automaton***************************************************

node GPCA_System_Monitor_SystemMonitorSubSystem(TLM_MODE_IN_System_On:bool)

returns (SYS_MON_OUT_System_Monitor_Failed:bool);


var SYS_MON_OUT_System_Monitor_Failed_1: bool;

	idSystemMonitorSubSystem_SystemMonitorSubSystem, idSystemMonitorSubSystem_SystemMonitorSubSystem_1: int;

	let

	SYS_MON_OUT_System_Monitor_Failed_1 = false -> pre SYS_MON_OUT_System_Monitor_Failed;

	idSystemMonitorSubSystem_SystemMonitorSubSystem_1 = 0 -> pre idSystemMonitorSubSystem_SystemMonitorSubSystem;

	



	(idSystemMonitorSubSystem_SystemMonitorSubSystem, SYS_MON_OUT_System_Monitor_Failed)
	 = SystemMonitorSubSystem_SystemMonitorSubSystem_node(idSystemMonitorSubSystem_SystemMonitorSubSystem_1, TLM_MODE_IN_System_On, SYS_MON_OUT_System_Monitor_Failed_1);


--unused outputs
	

tel



node GPCA_System_Monitor (In1_1_1 : bool)
returns (Out1_1_1 : bool); 
var
	SystemMonitorSubSystem_1_1 : bool;
let 
	SystemMonitorSubSystem_1_1 =  GPCA_System_Monitor_SystemMonitorSubSystem(In1_1_1);
	Out1_1_1 = SystemMonitorSubSystem_1_1;
tel

