-- This file has been generated by cocoSim


-- System nodes
node minmax_test (In1_1_1 : real; In2_1_1 : real; In3_1_1 : real; In3_1_2 : real; In4_1_1 : real; In4_1_2 : real; In5_1_1 : real; In5_1_2 : real; In5_1_3 : real; In5_1_4 : real; In6_1_1 : real; In6_1_2 : real; In6_1_3 : real; In6_1_4 : real; In7_1_1 : real; In7_1_2 : real; In7_1_3 : real; In8_1_1 : real; In8_1_2 : real; In8_1_3 : real; In8_1_4 : real; In8_1_5 : real; In8_1_6 : real; In8_1_7 : real)
returns (Out1_1_1 : real;
	Out2_2_1 : real;
	Out3_3_1 : real; Out3_3_2 : real;
	Out4_4_1 : real; Out4_4_2 : real;
	Out5_5_1 : real; Out5_5_2 : real; Out5_5_3 : real; Out5_5_4 : real;
	Out6_6_1 : real; Out6_6_2 : real; Out6_6_3 : real; Out6_6_4 : real;
	Out7_7_1 : real;
	Out8_8_1 : real); 
var
	max_block_1_1 : real;
	max_block1_1_1 : real; max_block1_1_2 : real;
	max_block2_1_1 : real; max_block2_1_2 : real; max_block2_1_3 : real; max_block2_1_4 : real;
	min_block_1_1 : real;
	min_block1_1_1 : real; min_block1_1_2 : real;
	min_block2_1_1 : real; min_block2_1_2 : real; min_block2_1_3 : real; min_block2_1_4 : real;
	min_block3_1_1 : real;
	min_block4_1_1 : real;
	i_virtual_local : real;
	min_block3_tmp_1 : real; 
	min_block4_tmp_1 : real; min_block4_tmp_2 : real; min_block4_tmp_3 : real; min_block4_tmp_4 : real; min_block4_tmp_5 : real; 
let 
	max_block_1_1 = if In1_1_1 >= In2_1_1 then In1_1_1 else In2_1_1;
	max_block1_1_1 = if In3_1_1 >= In4_1_1 then In3_1_1 else In4_1_1;
	max_block1_1_2 = if In3_1_2 >= In4_1_2 then In3_1_2 else In4_1_2;
	max_block2_1_1 = if In5_1_1 >= In6_1_1 then In5_1_1 else In6_1_1;
	max_block2_1_2 = if In5_1_2 >= In6_1_2 then In5_1_2 else In6_1_2;
	max_block2_1_3 = if In5_1_3 >= In6_1_3 then In5_1_3 else In6_1_3;
	max_block2_1_4 = if In5_1_4 >= In6_1_4 then In5_1_4 else In6_1_4;
	min_block_1_1 = if In1_1_1 <= In2_1_1 then In1_1_1 else In2_1_1;
	min_block1_1_1 = if In3_1_1 <= In4_1_1 then In3_1_1 else In4_1_1;
	min_block1_1_2 = if In3_1_2 <= In4_1_2 then In3_1_2 else In4_1_2;
	min_block2_1_1 = if In5_1_1 <= In6_1_1 then In5_1_1 else In6_1_1;
	min_block2_1_2 = if In5_1_2 <= In6_1_2 then In5_1_2 else In6_1_2;
	min_block2_1_3 = if In5_1_3 <= In6_1_3 then In5_1_3 else In6_1_3;
	min_block2_1_4 = if In5_1_4 <= In6_1_4 then In5_1_4 else In6_1_4;
	min_block3_tmp_1 = if In7_1_1 <= In7_1_2 then In7_1_1 else In7_1_2;
	min_block3_1_1 = if min_block3_tmp_1 <= In7_1_3 then min_block3_tmp_1 else In7_1_3;
	min_block4_tmp_1 = if In8_1_1 >= In8_1_2 then In8_1_1 else In8_1_2;
	min_block4_tmp_2 = if min_block4_tmp_1 >= In8_1_3 then min_block4_tmp_1 else In8_1_3;
	min_block4_tmp_3 = if min_block4_tmp_2 >= In8_1_4 then min_block4_tmp_2 else In8_1_4;
	min_block4_tmp_4 = if min_block4_tmp_3 >= In8_1_5 then min_block4_tmp_3 else In8_1_5;
	min_block4_tmp_5 = if min_block4_tmp_4 >= In8_1_6 then min_block4_tmp_4 else In8_1_6;
	min_block4_1_1 = if min_block4_tmp_5 >= In8_1_7 then min_block4_tmp_5 else In8_1_7;
	Out1_1_1 = min_block_1_1;
	Out2_2_1 = max_block_1_1;
	Out3_3_1 = min_block1_1_1;
	Out3_3_2 = min_block1_1_2;
	Out4_4_1 = max_block1_1_1;
	Out4_4_2 = max_block1_1_2;
	Out5_5_1 = min_block2_1_1;
	Out5_5_2 = min_block2_1_2;
	Out5_5_3 = min_block2_1_3;
	Out5_5_4 = min_block2_1_4;
	Out6_6_1 = max_block2_1_1;
	Out6_6_2 = max_block2_1_2;
	Out6_6_3 = max_block2_1_3;
	Out6_6_4 = max_block2_1_4;
	Out7_7_1 = min_block3_1_1;
	Out8_8_1 = min_block4_1_1;
	i_virtual_local= 0.0 -> 1.0;
tel

