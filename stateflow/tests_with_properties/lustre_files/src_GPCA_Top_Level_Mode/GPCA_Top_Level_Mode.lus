-- This file has been generated by cocoSim


-- Properties nodes
node GPCA_Top_Level_Mode_not_system_start_implies_system_off (Sys_Start_1_1 : bool; Sys_Stop_1_1 : bool; Cancel_1_1 : bool; Max_Conf_Stop_Duration_1_1 : real)
returns (not_system_start_implies_system_off_1_1 : bool);
var
	LogicalOperator_1_1 : bool;
	LogicalOperator1_1_1 : bool;
	LogicalOperator2_1_1 : bool;
	LogicalOperator3_1_1 : bool;
	LogicalOperator4_1_1 : bool;
	Memory_1_1 : bool;
	System_On_1_1 : bool;
	Req_Confirm_Stop_1_1 : bool;
	GPCA_Top_Level_Mode_Log_Msg_ID_1_1 : int;
let
	LogicalOperator_1_1 = not Sys_Start_1_1;
	LogicalOperator1_1_1 = LogicalOperator_1_1 and Memory_1_1;
	LogicalOperator2_1_1 = not LogicalOperator1_1_1;
	LogicalOperator3_1_1 = not System_On_1_1;
	LogicalOperator4_1_1 = LogicalOperator2_1_1 or LogicalOperator3_1_1;
	Memory_1_1 = false -> pre Req_Confirm_Stop_1_1;
	not_system_start_implies_system_off_1_1 = LogicalOperator4_1_1;

	(System_On_1_1, Req_Confirm_Stop_1_1, GPCA_Top_Level_Mode_Log_Msg_ID_1_1) = GPCA_Top_Level_Mode(Sys_Start_1_1, Sys_Stop_1_1, Cancel_1_1, Max_Conf_Stop_Duration_1_1);
	--%PROPERTY not_system_start_implies_system_off_1_1; 
 
tel

node GPCA_Top_Level_Mode_prop3 (Sys_Start_1_1 : bool; Sys_Stop_1_1 : bool; Cancel_1_1 : bool; Max_Conf_Stop_Duration_1_1 : real)
returns (prop3_1_1 : bool);
var
	LogicalOperator_1_1 : bool;
	LogicalOperator1_1_1 : bool;
	LogicalOperator10_1_1 : bool;
	LogicalOperator12_1_1 : bool;
	LogicalOperator2_1_1 : bool;
	LogicalOperator3_1_1 : bool;
	LogicalOperator4_1_1 : bool;
	LogicalOperator5_1_1 : bool;
	LogicalOperator6_1_1 : bool;
	LogicalOperator7_1_1 : bool;
	LogicalOperator8_1_1 : bool;
	LogicalOperator9_1_1 : bool;
	Memory_1_1 : bool;
	Memory1_1_1 : bool;
	System_On_1_1 : bool;
	Req_Confirm_Stop_1_1 : bool;
	GPCA_Top_Level_Mode_Log_Msg_ID_1_1 : int;
let
	LogicalOperator_1_1 = not Sys_Start_1_1;
	LogicalOperator1_1_1 = LogicalOperator_1_1 and Sys_Stop_1_1;
	LogicalOperator10_1_1 = LogicalOperator8_1_1 or Req_Confirm_Stop_1_1;
	LogicalOperator12_1_1 = not Memory1_1_1;
	LogicalOperator2_1_1 = not LogicalOperator1_1_1;
	LogicalOperator3_1_1 = LogicalOperator5_1_1 or Req_Confirm_Stop_1_1;
	LogicalOperator4_1_1 = LogicalOperator2_1_1 or LogicalOperator3_1_1;
	LogicalOperator5_1_1 = not System_On_1_1;
	LogicalOperator6_1_1 = LogicalOperator7_1_1 and LogicalOperator12_1_1;
	LogicalOperator7_1_1 = Memory_1_1 and Sys_Stop_1_1;
	LogicalOperator8_1_1 = not LogicalOperator6_1_1;
	LogicalOperator9_1_1 = LogicalOperator4_1_1 and LogicalOperator10_1_1;
	Memory_1_1 = false -> pre System_On_1_1;
	Memory1_1_1 = false -> pre Req_Confirm_Stop_1_1;
	prop3_1_1 = LogicalOperator9_1_1;

	(System_On_1_1, Req_Confirm_Stop_1_1, GPCA_Top_Level_Mode_Log_Msg_ID_1_1) = GPCA_Top_Level_Mode(Sys_Start_1_1, Sys_Stop_1_1, Cancel_1_1, Max_Conf_Stop_Duration_1_1);
	--%PROPERTY prop3_1_1; 
 
tel

node GPCA_Top_Level_Mode_sys_start_implies_sys_on (In1_1_1 : bool; In2_1_1 : bool; In3_1_1 : bool; In4_1_1 : real)
returns (sys_start_implies_sys_on_1_1 : bool);
var
	LogicalOperator_1_1 : bool;
	LogicalOperator1_1_1 : bool;
	Out1_1_1 : bool;
	GPCA_Top_Level_Mode_Req_Confirm_Stop_1_1 : bool;
	GPCA_Top_Level_Mode_Log_Msg_ID_1_1 : int;
let
	LogicalOperator_1_1 = not In1_1_1;
	LogicalOperator1_1_1 = LogicalOperator_1_1 or Out1_1_1;
	sys_start_implies_sys_on_1_1 = LogicalOperator1_1_1;

	(Out1_1_1, GPCA_Top_Level_Mode_Req_Confirm_Stop_1_1, GPCA_Top_Level_Mode_Log_Msg_ID_1_1) = GPCA_Top_Level_Mode(In1_1_1, In2_1_1, In3_1_1, In4_1_1);
	--%PROPERTY sys_start_implies_sys_on_1_1; 
 
tel


-- System nodes




node POINT__To__Top_Level_Mode_Sub_System_Step_Scaling_FactorJunction416_1_Condition_Action(inputVal:real;
	step_size:real;
	returnVal_1:real)

returns (returnVal:real);


var 	returnVal_2:real;


let



	returnVal_2 
	= inputVal/step_size;
	

	(returnVal) 
	= (returnVal_2);
	

tel


--***************************************************State :Top_Level_Mode_Sub_System_Step_Scaling_Factor Automaton***************************************************

node Top_Level_Mode_Sub_System_Step_Scaling_Factor_node(idTop_Level_Mode_Sub_System_Step_Scaling_Factor_1:int;
	inputVal:real;
	returnVal_1:real;
	step_size:real)

returns (idTop_Level_Mode_Sub_System_Step_Scaling_Factor:int;
	returnVal:real);


let

	 automaton top_level_mode_sub_system_step_scaling_factor

	state POINTTop_Level_Mode_Sub_System_Step_Scaling_Factor:
	unless (idTop_Level_Mode_Sub_System_Step_Scaling_Factor_1=0) restart POINT__TO__TOP_LEVEL_MODE_SUB_SYSTEM_STEP_SCALING_FACTORJUNCTION416_1



	let

		(idTop_Level_Mode_Sub_System_Step_Scaling_Factor, returnVal) 
	= (idTop_Level_Mode_Sub_System_Step_Scaling_Factor_1, returnVal_1);
	

	tel



	state POINT__TO__TOP_LEVEL_MODE_SUB_SYSTEM_STEP_SCALING_FACTORJUNCTION416_1:

	 var 	returnVal_2:real;
	let

		-- transition trace :
	--POINT__To__Junction416_1
		-- condition Action : returnVal=inputVal/step_size;
		
		(returnVal_2) 
	= POINT__To__Top_Level_Mode_Sub_System_Step_Scaling_FactorJunction416_1_Condition_Action(inputVal, step_size, returnVal_1);
		

	(idTop_Level_Mode_Sub_System_Step_Scaling_Factor, returnVal) 
	=  (idTop_Level_Mode_Sub_System_Step_Scaling_Factor_1, returnVal_2);


	tel

	until true restart POINTTop_Level_Mode_Sub_System_Step_Scaling_Factor



tel


--***************************************************State :Top_Level_Mode_Sub_System_Step_Scaling_Factor Automaton***************************************************

node Step_Scaling_Factor(inputVal:real;
	step_size:real)

returns (returnVal:real);


var returnVal_1: real;

	idTop_Level_Mode_Sub_System_Step_Scaling_Factor, idTop_Level_Mode_Sub_System_Step_Scaling_Factor_1: int;

	let

	returnVal_1 = 0.0 -> pre returnVal;

	idTop_Level_Mode_Sub_System_Step_Scaling_Factor_1 = 0 -> pre idTop_Level_Mode_Sub_System_Step_Scaling_Factor;

	



	(idTop_Level_Mode_Sub_System_Step_Scaling_Factor, returnVal)
	 = Top_Level_Mode_Sub_System_Step_Scaling_Factor_node(idTop_Level_Mode_Sub_System_Step_Scaling_Factor_1, inputVal, returnVal_1, step_size);


--unused outputs
	

tel







node POINT__To__Top_Level_Mode_Sub_System_writeLogJunction419_1_Condition_Action(logEvent:int;
	tLM_MODE_OUT_Log_Message_ID_1:int)

returns (tLM_MODE_OUT_Log_Message_ID:int);


var 	tLM_MODE_OUT_Log_Message_ID_2:int;


let



	tLM_MODE_OUT_Log_Message_ID_2 
	= logEvent;
	

	(tLM_MODE_OUT_Log_Message_ID) 
	= (tLM_MODE_OUT_Log_Message_ID_2);
	

tel


--***************************************************State :Top_Level_Mode_Sub_System_writeLog Automaton***************************************************

node Top_Level_Mode_Sub_System_writeLog_node(idTop_Level_Mode_Sub_System_writeLog_1:int;
	logEvent:int;
	tLM_MODE_OUT_Log_Message_ID_1:int)

returns (idTop_Level_Mode_Sub_System_writeLog:int;
	tLM_MODE_OUT_Log_Message_ID:int);


let

	 automaton top_level_mode_sub_system_writelog

	state POINTTop_Level_Mode_Sub_System_writeLog:
	unless (idTop_Level_Mode_Sub_System_writeLog_1=0) restart POINT__TO__TOP_LEVEL_MODE_SUB_SYSTEM_WRITELOGJUNCTION419_1



	let

		(idTop_Level_Mode_Sub_System_writeLog, tLM_MODE_OUT_Log_Message_ID) 
	= (idTop_Level_Mode_Sub_System_writeLog_1, tLM_MODE_OUT_Log_Message_ID_1);
	

	tel



	state POINT__TO__TOP_LEVEL_MODE_SUB_SYSTEM_WRITELOGJUNCTION419_1:

	 var 	tLM_MODE_OUT_Log_Message_ID_2:int;
	let

		-- transition trace :
	--POINT__To__Junction419_1
		-- condition Action : tLM_MODE_OUT_Log_Message_ID=logEvent;
		
		(tLM_MODE_OUT_Log_Message_ID_2) 
	= POINT__To__Top_Level_Mode_Sub_System_writeLogJunction419_1_Condition_Action(logEvent, tLM_MODE_OUT_Log_Message_ID_1);
		

	(idTop_Level_Mode_Sub_System_writeLog, tLM_MODE_OUT_Log_Message_ID) 
	=  (idTop_Level_Mode_Sub_System_writeLog_1, tLM_MODE_OUT_Log_Message_ID_2);


	tel

	until true restart POINTTop_Level_Mode_Sub_System_writeLog



tel


--***************************************************State :Top_Level_Mode_Sub_System_writeLog Automaton***************************************************

node writeLog(logEvent:int;
	tLM_MODE_OUT_Log_Message_ID_1:int)

returns (tLM_MODE_OUT_Log_Message_ID:int);


var idTop_Level_Mode_Sub_System_writeLog, idTop_Level_Mode_Sub_System_writeLog_1: int;

	let

	idTop_Level_Mode_Sub_System_writeLog_1 = 0 -> pre idTop_Level_Mode_Sub_System_writeLog;

	



	(idTop_Level_Mode_Sub_System_writeLog, tLM_MODE_OUT_Log_Message_ID)
	 = Top_Level_Mode_Sub_System_writeLog_node(idTop_Level_Mode_Sub_System_writeLog_1, logEvent, tLM_MODE_OUT_Log_Message_ID_1);



tel








node Top_Level_Mode_Sub_System_NOT_ON__To__Top_Level_Mode_Sub_System_TOP_Level_Mode_1_Condition_Action(tLM_MODE_OUT_Log_Message_ID_1:int)

returns (tLM_MODE_OUT_Log_Message_ID:int);


var 	tLM_MODE_OUT_Log_Message_ID_2:int;


let



	(tLM_MODE_OUT_Log_Message_ID_2) 
	= writeLog(1, tLM_MODE_OUT_Log_Message_ID_1);
	

	(tLM_MODE_OUT_Log_Message_ID) 
	= (tLM_MODE_OUT_Log_Message_ID_2);
	

tel








node Confirm_Stop_ON__To__Top_Level_Mode_Sub_System_NOT_ON_1_Condition_Action(tLM_MODE_OUT_Log_Message_ID_1:int)

returns (tLM_MODE_OUT_Log_Message_ID:int);


var 	tLM_MODE_OUT_Log_Message_ID_2:int;


let



	(tLM_MODE_OUT_Log_Message_ID_2) 
	= writeLog(2, tLM_MODE_OUT_Log_Message_ID_1);
	

	(tLM_MODE_OUT_Log_Message_ID) 
	= (tLM_MODE_OUT_Log_Message_ID_2);
	

tel










-- Entry action for state :Confirm_Stop_OFF
node Confirm_Stop_OFF_en(idTOP_Level_Mode_Confirm_Stop_1:int;
	tLM_MODE_OUT_Request_Confirm_Stop_1:bool;
	confirmStopTimer_1:real;
	isInner:bool)

returns (idTOP_Level_Mode_Confirm_Stop:int;
	tLM_MODE_OUT_Request_Confirm_Stop:bool;
	confirmStopTimer:real);


var 	idTOP_Level_Mode_Confirm_Stop_2:int;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	confirmStopTimer_2:real;


let



	-- set state as active 
	idTOP_Level_Mode_Confirm_Stop_2 
	= 401;
	

	tLM_MODE_OUT_Request_Confirm_Stop_2 
	= if (not isInner) then false
	 else tLM_MODE_OUT_Request_Confirm_Stop_1;
	

	confirmStopTimer_2 
	= if (not isInner) then 0.
	 else confirmStopTimer_1;
	

	(idTOP_Level_Mode_Confirm_Stop, tLM_MODE_OUT_Request_Confirm_Stop, confirmStopTimer) 
	= (idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2, confirmStopTimer_2);
	

tel





-- Exit action for state :Confirm_Stop_OFF
node Confirm_Stop_OFF_ex(idTOP_Level_Mode_Confirm_Stop_1:int;
	isInner:bool)

returns (idTOP_Level_Mode_Confirm_Stop:int);


var 	idTOP_Level_Mode_Confirm_Stop_2:int;


let



	-- set state as inactive 
	idTOP_Level_Mode_Confirm_Stop_2
	 = if (not isInner) then 0 else idTOP_Level_Mode_Confirm_Stop_1;


	(idTOP_Level_Mode_Confirm_Stop) 
	= (idTOP_Level_Mode_Confirm_Stop_1);
	

tel






-- Entry action for state :Confirm_Stop_ON
node Confirm_Stop_ON_en(idTOP_Level_Mode_Confirm_Stop_1:int;
	tLM_MODE_OUT_Request_Confirm_Stop_1:bool;
	confirmStopTimer_1:real;
	isInner:bool)

returns (idTOP_Level_Mode_Confirm_Stop:int;
	tLM_MODE_OUT_Request_Confirm_Stop:bool;
	confirmStopTimer:real);


var 	idTOP_Level_Mode_Confirm_Stop_2:int;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	confirmStopTimer_2:real;


let



	-- set state as active 
	idTOP_Level_Mode_Confirm_Stop_2 
	= 402;
	

	tLM_MODE_OUT_Request_Confirm_Stop_2 
	= if (not isInner) then true
	 else tLM_MODE_OUT_Request_Confirm_Stop_1;
	

	confirmStopTimer_2 
	= if (not isInner) then  confirmStopTimer_1  + 1.
	 else confirmStopTimer_1;
	

	(idTOP_Level_Mode_Confirm_Stop, tLM_MODE_OUT_Request_Confirm_Stop, confirmStopTimer) 
	= (idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2, confirmStopTimer_2);
	

tel





--During action for state :Confirm_Stop_ON
node Confirm_Stop_ON_du(confirmStopTimer_1:real)

returns (confirmStopTimer:real);


var 	confirmStopTimer_2:real;


let



	confirmStopTimer_2 
	=  confirmStopTimer_1  + 1.;
	

	(confirmStopTimer) 
	= (confirmStopTimer_2);
	

tel





-- Exit action for state :Confirm_Stop_ON
node Confirm_Stop_ON_ex(idTOP_Level_Mode_Confirm_Stop_1:int;
	isInner:bool)

returns (idTOP_Level_Mode_Confirm_Stop:int);


var 	idTOP_Level_Mode_Confirm_Stop_2:int;


let



	-- set state as inactive 
	idTOP_Level_Mode_Confirm_Stop_2
	 = if (not isInner) then 0 else idTOP_Level_Mode_Confirm_Stop_1;


	(idTOP_Level_Mode_Confirm_Stop) 
	= (idTOP_Level_Mode_Confirm_Stop_1);
	

tel






-- Entry action for state :TOP_Level_Mode_Confirm_Stop
node TOP_Level_Mode_Confirm_Stop_en(idTOP_Level_Mode_Confirm_Stop_1:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_1:int;
	OP_CMD_IN_System_Stop:bool;
	confirmStopTimer_1:real;
	tLM_MODE_OUT_Request_Confirm_Stop_1:bool;
	isInner:bool)

returns (idTOP_Level_Mode_Confirm_Stop:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode:int;
	confirmStopTimer:real;
	tLM_MODE_OUT_Request_Confirm_Stop:bool);


var 	idTOP_Level_Mode_Confirm_Stop_2, idTOP_Level_Mode_Confirm_Stop_3, idTOP_Level_Mode_Confirm_Stop_4, idTOP_Level_Mode_Confirm_Stop_5, idTOP_Level_Mode_Confirm_Stop_6, idTOP_Level_Mode_Confirm_Stop_7:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_3, idTop_Level_Mode_Sub_System_TOP_Level_Mode_4:int;
	confirmStopTimer_2, confirmStopTimer_3, confirmStopTimer_4, confirmStopTimer_5, confirmStopTimer_6, confirmStopTimer_7:real;
	tLM_MODE_OUT_Request_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_3, tLM_MODE_OUT_Request_Confirm_Stop_4, tLM_MODE_OUT_Request_Confirm_Stop_5, tLM_MODE_OUT_Request_Confirm_Stop_6, tLM_MODE_OUT_Request_Confirm_Stop_7:bool;


let



	-- set state as active 
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2 
	= 400;
	

	
-- transition trace :
	--POINT__To__Confirm_Stop_ON_1
		(idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2, confirmStopTimer_2) 
	= 
		 if (( OP_CMD_IN_System_Stop )) then 
		Confirm_Stop_ON_en(idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, confirmStopTimer_1, false)
		 else (idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, confirmStopTimer_1);
		

-- transition trace :
	--POINT__To__Confirm_Stop_OFF_2
		(idTOP_Level_Mode_Confirm_Stop_3, tLM_MODE_OUT_Request_Confirm_Stop_3, confirmStopTimer_3) 
	= Confirm_Stop_OFF_en(idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2, confirmStopTimer_2, false);
		

	(idTOP_Level_Mode_Confirm_Stop_4, idTop_Level_Mode_Sub_System_TOP_Level_Mode_3, confirmStopTimer_4, tLM_MODE_OUT_Request_Confirm_Stop_4) 
	= 

	if ( idTOP_Level_Mode_Confirm_Stop_1 = 0) then

	
		 if (( OP_CMD_IN_System_Stop )) then 
		(idTOP_Level_Mode_Confirm_Stop_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, confirmStopTimer_2, tLM_MODE_OUT_Request_Confirm_Stop_2)
		 else (idTOP_Level_Mode_Confirm_Stop_3, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, confirmStopTimer_3, tLM_MODE_OUT_Request_Confirm_Stop_3)

	 else(idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, confirmStopTimer_1, tLM_MODE_OUT_Request_Confirm_Stop_1);

	

	(idTOP_Level_Mode_Confirm_Stop_5, tLM_MODE_OUT_Request_Confirm_Stop_5, confirmStopTimer_5) 
	= 
	if ( idTOP_Level_Mode_Confirm_Stop_1 = 401) then
	Confirm_Stop_OFF_en(idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, confirmStopTimer_1, false)
	 else (idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, confirmStopTimer_1);

	

	(idTOP_Level_Mode_Confirm_Stop_6, tLM_MODE_OUT_Request_Confirm_Stop_6, confirmStopTimer_6) 
	= 
	if ( idTOP_Level_Mode_Confirm_Stop_1 = 402) then
	Confirm_Stop_ON_en(idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, confirmStopTimer_1, false)
	 else (idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, confirmStopTimer_1);

	

	(idTOP_Level_Mode_Confirm_Stop_7, idTop_Level_Mode_Sub_System_TOP_Level_Mode_4, confirmStopTimer_7, tLM_MODE_OUT_Request_Confirm_Stop_7) 
	= 
		 if ( idTOP_Level_Mode_Confirm_Stop_1 = 0) then 
		(idTOP_Level_Mode_Confirm_Stop_4, idTop_Level_Mode_Sub_System_TOP_Level_Mode_3, confirmStopTimer_4, tLM_MODE_OUT_Request_Confirm_Stop_4)
		 else
		 if ( idTOP_Level_Mode_Confirm_Stop_1 = 401) then 
		(idTOP_Level_Mode_Confirm_Stop_5, idTop_Level_Mode_Sub_System_TOP_Level_Mode_3, confirmStopTimer_5, tLM_MODE_OUT_Request_Confirm_Stop_5)
		 else
		 if ( idTOP_Level_Mode_Confirm_Stop_1 = 402) then 
		(idTOP_Level_Mode_Confirm_Stop_6, idTop_Level_Mode_Sub_System_TOP_Level_Mode_3, confirmStopTimer_6, tLM_MODE_OUT_Request_Confirm_Stop_6)
		 else (idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, confirmStopTimer_1, tLM_MODE_OUT_Request_Confirm_Stop_1);


	(idTOP_Level_Mode_Confirm_Stop, idTop_Level_Mode_Sub_System_TOP_Level_Mode, confirmStopTimer, tLM_MODE_OUT_Request_Confirm_Stop) 
	= (idTOP_Level_Mode_Confirm_Stop_7, idTop_Level_Mode_Sub_System_TOP_Level_Mode_4, confirmStopTimer_7, tLM_MODE_OUT_Request_Confirm_Stop_7);
	

tel





-- Exit action for state :TOP_Level_Mode_Confirm_Stop
node TOP_Level_Mode_Confirm_Stop_ex(idTOP_Level_Mode_Confirm_Stop_1:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_1:int;
	isInner:bool)

returns (idTOP_Level_Mode_Confirm_Stop:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode:int);


var 	idTOP_Level_Mode_Confirm_Stop_2, idTOP_Level_Mode_Confirm_Stop_3, idTOP_Level_Mode_Confirm_Stop_4, idTOP_Level_Mode_Confirm_Stop_5:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2:int;


let



	
	(idTOP_Level_Mode_Confirm_Stop_2) 
	= 
	if ( idTOP_Level_Mode_Confirm_Stop_1 = 401) then
	Confirm_Stop_OFF_ex(idTOP_Level_Mode_Confirm_Stop_1, false)
	 else (idTOP_Level_Mode_Confirm_Stop_1);

	

	(idTOP_Level_Mode_Confirm_Stop_3) 
	= 
	if ( idTOP_Level_Mode_Confirm_Stop_1 = 402) then
	Confirm_Stop_ON_ex(idTOP_Level_Mode_Confirm_Stop_1, false)
	 else (idTOP_Level_Mode_Confirm_Stop_1);

	

	(idTOP_Level_Mode_Confirm_Stop_4) 
	= 
		 if ( idTOP_Level_Mode_Confirm_Stop_1 = 401) then 
		(idTOP_Level_Mode_Confirm_Stop_2)
		 else
		 if ( idTOP_Level_Mode_Confirm_Stop_1 = 402) then 
		(idTOP_Level_Mode_Confirm_Stop_3)
		 else (idTOP_Level_Mode_Confirm_Stop_1);


	-- set state as inactive 
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2
	 = if (not isInner) then 0 else idTop_Level_Mode_Sub_System_TOP_Level_Mode_1;

	idTOP_Level_Mode_Confirm_Stop_5 
	= 0;
	

	(idTOP_Level_Mode_Confirm_Stop, idTop_Level_Mode_Sub_System_TOP_Level_Mode) 
	= (idTOP_Level_Mode_Confirm_Stop_5, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1);
	

tel






-- Entry action for state :Top_Level_Mode_Sub_System_TOP_Level_Mode
node Top_Level_Mode_Sub_System_TOP_Level_Mode_en(idTop_Level_Mode_Sub_System_TOP_Level_Mode_1:int;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1:int;
	tLM_MODE_OUT_System_On_1:bool;
	OP_CMD_IN_System_Stop:bool;
	confirmStopTimer_1:real;
	idTOP_Level_Mode_Confirm_Stop_1:int;
	tLM_MODE_OUT_Request_Confirm_Stop_1:bool;
	isInner:bool)

returns (idTop_Level_Mode_Sub_System_TOP_Level_Mode:int;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System:int;
	tLM_MODE_OUT_System_On:bool;
	confirmStopTimer:real;
	idTOP_Level_Mode_Confirm_Stop:int;
	tLM_MODE_OUT_Request_Confirm_Stop:bool);


var 	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_3, idTop_Level_Mode_Sub_System_TOP_Level_Mode_4, idTop_Level_Mode_Sub_System_TOP_Level_Mode_5:int;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_3, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_4:int;
	tLM_MODE_OUT_System_On_2, tLM_MODE_OUT_System_On_3, tLM_MODE_OUT_System_On_4:bool;
	confirmStopTimer_2, confirmStopTimer_3, confirmStopTimer_4, confirmStopTimer_5:real;
	idTOP_Level_Mode_Confirm_Stop_2, idTOP_Level_Mode_Confirm_Stop_3, idTOP_Level_Mode_Confirm_Stop_4, idTOP_Level_Mode_Confirm_Stop_5:int;
	tLM_MODE_OUT_Request_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_3, tLM_MODE_OUT_Request_Confirm_Stop_4, tLM_MODE_OUT_Request_Confirm_Stop_5:bool;


let



	-- set state as active 
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2 
	= 399;
	

	tLM_MODE_OUT_System_On_2 
	= if (not isInner) then true
	 else tLM_MODE_OUT_System_On_1;
	

	
-- transition trace :
	--POINT__To__TOP_Level_Mode_Confirm_Stop_1
		(idTOP_Level_Mode_Confirm_Stop_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, confirmStopTimer_2, tLM_MODE_OUT_Request_Confirm_Stop_2) 
	= TOP_Level_Mode_Confirm_Stop_en(idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, OP_CMD_IN_System_Stop, confirmStopTimer_1, tLM_MODE_OUT_Request_Confirm_Stop_1, false);
		

	(idTop_Level_Mode_Sub_System_TOP_Level_Mode_3, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_3, tLM_MODE_OUT_System_On_3, confirmStopTimer_3, idTOP_Level_Mode_Confirm_Stop_3, tLM_MODE_OUT_Request_Confirm_Stop_3) 
	= 

	if ( idTop_Level_Mode_Sub_System_TOP_Level_Mode_1 = 0) then

	 (idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_System_On_2, confirmStopTimer_2, idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2)

	 else(idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_System_On_2, confirmStopTimer_1, idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1);

	

	(idTOP_Level_Mode_Confirm_Stop_4, idTop_Level_Mode_Sub_System_TOP_Level_Mode_4, confirmStopTimer_4, tLM_MODE_OUT_Request_Confirm_Stop_4) 
	= 
	if ( idTop_Level_Mode_Sub_System_TOP_Level_Mode_1 = 400) then
	TOP_Level_Mode_Confirm_Stop_en(idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, OP_CMD_IN_System_Stop, confirmStopTimer_1, tLM_MODE_OUT_Request_Confirm_Stop_1, false)
	 else (idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, confirmStopTimer_1, tLM_MODE_OUT_Request_Confirm_Stop_1);

	

	(idTop_Level_Mode_Sub_System_TOP_Level_Mode_5, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_4, tLM_MODE_OUT_System_On_4, confirmStopTimer_5, idTOP_Level_Mode_Confirm_Stop_5, tLM_MODE_OUT_Request_Confirm_Stop_5) 
	= 
		 if ( idTop_Level_Mode_Sub_System_TOP_Level_Mode_1 = 0) then 
		(idTop_Level_Mode_Sub_System_TOP_Level_Mode_3, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_3, tLM_MODE_OUT_System_On_3, confirmStopTimer_3, idTOP_Level_Mode_Confirm_Stop_3, tLM_MODE_OUT_Request_Confirm_Stop_3)
		 else
		 if ( idTop_Level_Mode_Sub_System_TOP_Level_Mode_1 = 400) then 
		(idTop_Level_Mode_Sub_System_TOP_Level_Mode_4, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_3, tLM_MODE_OUT_System_On_3, confirmStopTimer_4, idTOP_Level_Mode_Confirm_Stop_4, tLM_MODE_OUT_Request_Confirm_Stop_4)
		 else (idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_System_On_2, confirmStopTimer_1, idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1);


	(idTop_Level_Mode_Sub_System_TOP_Level_Mode, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_System_On, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, tLM_MODE_OUT_Request_Confirm_Stop) 
	= (idTop_Level_Mode_Sub_System_TOP_Level_Mode_5, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_4, tLM_MODE_OUT_System_On_4, confirmStopTimer_5, idTOP_Level_Mode_Confirm_Stop_5, tLM_MODE_OUT_Request_Confirm_Stop_5);
	

tel





--During action for state :Top_Level_Mode_Sub_System_TOP_Level_Mode
node Top_Level_Mode_Sub_System_TOP_Level_Mode_du(tLM_MODE_OUT_System_On_1:bool)

returns (tLM_MODE_OUT_System_On:bool);


var 	tLM_MODE_OUT_System_On_2:bool;


let



	tLM_MODE_OUT_System_On_2 
	= true;
	

	(tLM_MODE_OUT_System_On) 
	= (tLM_MODE_OUT_System_On_2);
	

tel





-- Exit action for state :Top_Level_Mode_Sub_System_TOP_Level_Mode
node Top_Level_Mode_Sub_System_TOP_Level_Mode_ex(idTOP_Level_Mode_Confirm_Stop_1:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_1:int;
	tLM_MODE_OUT_System_On_1:bool;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1:int;
	isInner:bool)

returns (idTOP_Level_Mode_Confirm_Stop:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode:int;
	tLM_MODE_OUT_System_On:bool;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System:int);


var 	idTOP_Level_Mode_Confirm_Stop_2, idTOP_Level_Mode_Confirm_Stop_3:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_3, idTop_Level_Mode_Sub_System_TOP_Level_Mode_4:int;
	tLM_MODE_OUT_System_On_2:bool;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2:int;


let



	
	(idTOP_Level_Mode_Confirm_Stop_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2) 
	= 
	if ( idTop_Level_Mode_Sub_System_TOP_Level_Mode_1 = 400) then
	TOP_Level_Mode_Confirm_Stop_ex(idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, false)
	 else (idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1);

	

	(idTOP_Level_Mode_Confirm_Stop_3, idTop_Level_Mode_Sub_System_TOP_Level_Mode_3) 
	= 
		 if ( idTop_Level_Mode_Sub_System_TOP_Level_Mode_1 = 400) then 
		(idTOP_Level_Mode_Confirm_Stop_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2)
		 else (idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1);


	tLM_MODE_OUT_System_On_2 
	= if (not isInner) then true
	 else tLM_MODE_OUT_System_On_1;
	

	-- set state as inactive 
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2
	 = if (not isInner) then 0 else idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1;

	idTop_Level_Mode_Sub_System_TOP_Level_Mode_4 
	= 0;
	

	(idTOP_Level_Mode_Confirm_Stop, idTop_Level_Mode_Sub_System_TOP_Level_Mode, tLM_MODE_OUT_System_On, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System) 
	= (idTOP_Level_Mode_Confirm_Stop_3, idTop_Level_Mode_Sub_System_TOP_Level_Mode_4, tLM_MODE_OUT_System_On_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1);
	

tel






-- Entry action for state :Top_Level_Mode_Sub_System_NOT_ON
node Top_Level_Mode_Sub_System_NOT_ON_en(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1:int;
	tLM_MODE_OUT_System_On_1:bool;
	isInner:bool)

returns (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System:int;
	tLM_MODE_OUT_System_On:bool);


var 	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2:int;
	tLM_MODE_OUT_System_On_2:bool;


let



	-- set state as active 
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2 
	= 403;
	

	tLM_MODE_OUT_System_On_2 
	= if (not isInner) then false
	 else tLM_MODE_OUT_System_On_1;
	

	(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_System_On) 
	= (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_System_On_2);
	

tel





--During action for state :Top_Level_Mode_Sub_System_NOT_ON
node Top_Level_Mode_Sub_System_NOT_ON_du(tLM_MODE_OUT_System_On_1:bool)

returns (tLM_MODE_OUT_System_On:bool);


var 	tLM_MODE_OUT_System_On_2:bool;


let



	tLM_MODE_OUT_System_On_2 
	= false;
	

	(tLM_MODE_OUT_System_On) 
	= (tLM_MODE_OUT_System_On_2);
	

tel





-- Exit action for state :Top_Level_Mode_Sub_System_NOT_ON
node Top_Level_Mode_Sub_System_NOT_ON_ex(tLM_MODE_OUT_System_On_1:bool;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1:int;
	isInner:bool)

returns (tLM_MODE_OUT_System_On:bool;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System:int);


var 	tLM_MODE_OUT_System_On_2:bool;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2:int;


let



	tLM_MODE_OUT_System_On_2 
	= if (not isInner) then false
	 else tLM_MODE_OUT_System_On_1;
	

	-- set state as inactive 
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2
	 = if (not isInner) then 0 else idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1;


	(tLM_MODE_OUT_System_On, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System) 
	= (tLM_MODE_OUT_System_On_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1);
	

tel


--***************************************************State :TOP_Level_Mode_Confirm_Stop Automaton***************************************************

node TOP_Level_Mode_Confirm_Stop_node(idTOP_Level_Mode_Confirm_Stop_1:int;
	OP_CMD_IN_System_Stop:bool;
	confirmStopTimer_1:real;
	tLM_MODE_OUT_Request_Confirm_Stop_1:bool;
	OP_CMD_IN_System_Start:bool;
	tLM_MODE_OUT_Log_Message_ID_1:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_1:int;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1:int;
	tLM_MODE_OUT_System_On_1:bool;
	OP_CMD_IN_Cancel:bool;
	CONST_IN_Max_Confirm_Stop_Duration:real;
	step_size:real)

returns (idTOP_Level_Mode_Confirm_Stop:int;
	confirmStopTimer:real;
	tLM_MODE_OUT_Request_Confirm_Stop:bool;
	tLM_MODE_OUT_Log_Message_ID:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode:int;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System:int;
	tLM_MODE_OUT_System_On:bool);


let

	 automaton top_level_mode_confirm_stop

	state POINTTOP_Level_Mode_Confirm_Stop:
	unless (idTOP_Level_Mode_Confirm_Stop_1=0) and ( OP_CMD_IN_System_Stop ) restart POINT__TO__CONFIRM_STOP_ON_1



	unless (idTOP_Level_Mode_Confirm_Stop_1=0) restart POINT__TO__CONFIRM_STOP_OFF_2



	unless (idTOP_Level_Mode_Confirm_Stop_1=401) and ( OP_CMD_IN_System_Stop ) restart CONFIRM_STOP_OFF__TO__CONFIRM_STOP_ON_1



	unless (idTOP_Level_Mode_Confirm_Stop_1=402) and ( not OP_CMD_IN_System_Start ) restart CONFIRM_STOP_ON__TO__TOP_LEVEL_MODE_SUB_SYSTEM_NOT_ON_1



	unless (idTOP_Level_Mode_Confirm_Stop_1=402) and ( OP_CMD_IN_Cancel or  confirmStopTimer_1 >Step_Scaling_Factor(CONST_IN_Max_Confirm_Stop_Duration,step_size) ) restart CONFIRM_STOP_ON__TO__CONFIRM_STOP_OFF_2



	unless (idTOP_Level_Mode_Confirm_Stop_1=401) restart CONFIRM_STOP_OFF_IDL

	unless (idTOP_Level_Mode_Confirm_Stop_1=402) restart CONFIRM_STOP_ON_IDL

	let

		(idTOP_Level_Mode_Confirm_Stop, confirmStopTimer, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_Log_Message_ID, idTop_Level_Mode_Sub_System_TOP_Level_Mode, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_System_On) 
	= (idTOP_Level_Mode_Confirm_Stop_1, confirmStopTimer_1, tLM_MODE_OUT_Request_Confirm_Stop_1, tLM_MODE_OUT_Log_Message_ID_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_System_On_1);
	

	tel



	state POINT__TO__CONFIRM_STOP_ON_1:

	 var 	idTOP_Level_Mode_Confirm_Stop_2:int;
	confirmStopTimer_2:real;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	let

		-- transition trace :
	--POINT__To__Confirm_Stop_ON_1
		(idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2, confirmStopTimer_2) 
	= Confirm_Stop_ON_en(idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, confirmStopTimer_1, false);
		

	(idTOP_Level_Mode_Confirm_Stop, confirmStopTimer, tLM_MODE_OUT_Request_Confirm_Stop) 
	=  (idTOP_Level_Mode_Confirm_Stop_2, confirmStopTimer_2, tLM_MODE_OUT_Request_Confirm_Stop_2);

	--add unused variables
	(idTop_Level_Mode_Sub_System_TOP_Level_Mode, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_Log_Message_ID, tLM_MODE_OUT_System_On) 
	= (idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_Log_Message_ID_1, tLM_MODE_OUT_System_On_1);
	

	tel

	until true restart POINTTOP_Level_Mode_Confirm_Stop



	state POINT__TO__CONFIRM_STOP_OFF_2:

	 var 	idTOP_Level_Mode_Confirm_Stop_2:int;
	confirmStopTimer_2:real;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	let

		-- transition trace :
	--POINT__To__Confirm_Stop_OFF_2
		(idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2, confirmStopTimer_2) 
	= Confirm_Stop_OFF_en(idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, confirmStopTimer_1, false);
		

	(idTOP_Level_Mode_Confirm_Stop, confirmStopTimer, tLM_MODE_OUT_Request_Confirm_Stop) 
	=  (idTOP_Level_Mode_Confirm_Stop_2, confirmStopTimer_2, tLM_MODE_OUT_Request_Confirm_Stop_2);

	--add unused variables
	(idTop_Level_Mode_Sub_System_TOP_Level_Mode, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_Log_Message_ID, tLM_MODE_OUT_System_On) 
	= (idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_Log_Message_ID_1, tLM_MODE_OUT_System_On_1);
	

	tel

	until true restart POINTTOP_Level_Mode_Confirm_Stop



	state CONFIRM_STOP_OFF__TO__CONFIRM_STOP_ON_1:

	 var 	idTOP_Level_Mode_Confirm_Stop_2, idTOP_Level_Mode_Confirm_Stop_3:int;
	confirmStopTimer_2:real;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	let

		-- transition trace :
	--Confirm_Stop_OFF__To__Confirm_Stop_ON_1
		(idTOP_Level_Mode_Confirm_Stop_2) 
	= Confirm_Stop_OFF_ex(idTOP_Level_Mode_Confirm_Stop_1, false);
		

		(idTOP_Level_Mode_Confirm_Stop_3, tLM_MODE_OUT_Request_Confirm_Stop_2, confirmStopTimer_2) 
	= Confirm_Stop_ON_en(idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_1, confirmStopTimer_1, false);
		

	(idTOP_Level_Mode_Confirm_Stop, confirmStopTimer, tLM_MODE_OUT_Request_Confirm_Stop) 
	=  (idTOP_Level_Mode_Confirm_Stop_3, confirmStopTimer_2, tLM_MODE_OUT_Request_Confirm_Stop_2);

	--add unused variables
	(idTop_Level_Mode_Sub_System_TOP_Level_Mode, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_Log_Message_ID, tLM_MODE_OUT_System_On) 
	= (idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_Log_Message_ID_1, tLM_MODE_OUT_System_On_1);
	

	tel

	until true restart POINTTOP_Level_Mode_Confirm_Stop



	state CONFIRM_STOP_ON__TO__TOP_LEVEL_MODE_SUB_SYSTEM_NOT_ON_1:

	 var 	idTOP_Level_Mode_Confirm_Stop_2:int;
	tLM_MODE_OUT_Log_Message_ID_2:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2:int;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_3:int;
	tLM_MODE_OUT_System_On_2, tLM_MODE_OUT_System_On_3:bool;
	let

		-- transition trace :
	--Confirm_Stop_ON__To__Top_Level_Mode_Sub_System_NOT_ON_1
		-- condition Action : writeLog(2);
		
		(tLM_MODE_OUT_Log_Message_ID_2) 
	= Confirm_Stop_ON__To__Top_Level_Mode_Sub_System_NOT_ON_1_Condition_Action(tLM_MODE_OUT_Log_Message_ID_1);
		

		(idTOP_Level_Mode_Confirm_Stop_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, tLM_MODE_OUT_System_On_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2) 
	= Top_Level_Mode_Sub_System_TOP_Level_Mode_ex(idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, tLM_MODE_OUT_System_On_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, false);
		

		(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_3, tLM_MODE_OUT_System_On_3) 
	= Top_Level_Mode_Sub_System_NOT_ON_en(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_System_On_2, false);
		

	(idTOP_Level_Mode_Confirm_Stop, confirmStopTimer, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_Log_Message_ID, idTop_Level_Mode_Sub_System_TOP_Level_Mode, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_System_On) 
	=  (idTOP_Level_Mode_Confirm_Stop_2, confirmStopTimer_1, tLM_MODE_OUT_Request_Confirm_Stop_1, tLM_MODE_OUT_Log_Message_ID_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_3, tLM_MODE_OUT_System_On_3);


	tel

	until true restart POINTTOP_Level_Mode_Confirm_Stop



	state CONFIRM_STOP_ON__TO__CONFIRM_STOP_OFF_2:

	 var 	idTOP_Level_Mode_Confirm_Stop_2, idTOP_Level_Mode_Confirm_Stop_3:int;
	confirmStopTimer_2:real;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	let

		-- transition trace :
	--Confirm_Stop_ON__To__Confirm_Stop_OFF_2
		(idTOP_Level_Mode_Confirm_Stop_2) 
	= Confirm_Stop_ON_ex(idTOP_Level_Mode_Confirm_Stop_1, false);
		

		(idTOP_Level_Mode_Confirm_Stop_3, tLM_MODE_OUT_Request_Confirm_Stop_2, confirmStopTimer_2) 
	= Confirm_Stop_OFF_en(idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_1, confirmStopTimer_1, false);
		

	(idTOP_Level_Mode_Confirm_Stop, confirmStopTimer, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_Log_Message_ID, idTop_Level_Mode_Sub_System_TOP_Level_Mode, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_System_On) 
	=  (idTOP_Level_Mode_Confirm_Stop_3, confirmStopTimer_2, tLM_MODE_OUT_Request_Confirm_Stop_2, tLM_MODE_OUT_Log_Message_ID_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_System_On_1);


	tel

	until true restart POINTTOP_Level_Mode_Confirm_Stop



	state CONFIRM_STOP_OFF_IDL:

	 	let

		

	(idTOP_Level_Mode_Confirm_Stop, confirmStopTimer, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_Log_Message_ID, idTop_Level_Mode_Sub_System_TOP_Level_Mode, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_System_On) 
	= (idTOP_Level_Mode_Confirm_Stop_1, confirmStopTimer_1, tLM_MODE_OUT_Request_Confirm_Stop_1, tLM_MODE_OUT_Log_Message_ID_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_System_On_1);
	

	tel

	until true restart POINTTOP_Level_Mode_Confirm_Stop



	state CONFIRM_STOP_ON_IDL:

	 var 	confirmStopTimer_2:real;
	let

		
	(confirmStopTimer_2) 
	= Confirm_Stop_ON_du(confirmStopTimer_1);

		


	(idTOP_Level_Mode_Confirm_Stop, confirmStopTimer, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_Log_Message_ID, idTop_Level_Mode_Sub_System_TOP_Level_Mode, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_System_On) 
	= (idTOP_Level_Mode_Confirm_Stop_1, confirmStopTimer_2, tLM_MODE_OUT_Request_Confirm_Stop_1, tLM_MODE_OUT_Log_Message_ID_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_System_On_1);
	

	tel

	until true restart POINTTOP_Level_Mode_Confirm_Stop



tel


--***************************************************State :Top_Level_Mode_Sub_System_TOP_Level_Mode Automaton***************************************************

node Top_Level_Mode_Sub_System_TOP_Level_Mode_node(idTop_Level_Mode_Sub_System_TOP_Level_Mode_1:int;
	OP_CMD_IN_System_Stop:bool;
	confirmStopTimer_1:real;
	idTOP_Level_Mode_Confirm_Stop_1:int;
	tLM_MODE_OUT_Request_Confirm_Stop_1:bool;
	CONST_IN_Max_Confirm_Stop_Duration:real;
	OP_CMD_IN_Cancel:bool;
	OP_CMD_IN_System_Start:bool;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1:int;
	step_size:real;
	tLM_MODE_OUT_Log_Message_ID_1:int;
	tLM_MODE_OUT_System_On_1:bool)

returns (idTop_Level_Mode_Sub_System_TOP_Level_Mode:int;
	confirmStopTimer:real;
	idTOP_Level_Mode_Confirm_Stop:int;
	tLM_MODE_OUT_Request_Confirm_Stop:bool;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System:int;
	tLM_MODE_OUT_Log_Message_ID:int;
	tLM_MODE_OUT_System_On:bool);


let

	 automaton top_level_mode_sub_system_top_level_mode

	state POINTTop_Level_Mode_Sub_System_TOP_Level_Mode:
	unless (idTop_Level_Mode_Sub_System_TOP_Level_Mode_1=0) restart POINT__TO__TOP_LEVEL_MODE_CONFIRM_STOP_1



	unless (idTop_Level_Mode_Sub_System_TOP_Level_Mode_1=400) restart TOP_LEVEL_MODE_CONFIRM_STOP_IDL

	let

		(idTop_Level_Mode_Sub_System_TOP_Level_Mode, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, tLM_MODE_OUT_Request_Confirm_Stop, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_Log_Message_ID, tLM_MODE_OUT_System_On) 
	= (idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, confirmStopTimer_1, idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_Log_Message_ID_1, tLM_MODE_OUT_System_On_1);
	

	tel



	state POINT__TO__TOP_LEVEL_MODE_CONFIRM_STOP_1:

	 var 	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2:int;
	confirmStopTimer_2:real;
	idTOP_Level_Mode_Confirm_Stop_2:int;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	let

		-- transition trace :
	--POINT__To__TOP_Level_Mode_Confirm_Stop_1
		(idTOP_Level_Mode_Confirm_Stop_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, confirmStopTimer_2, tLM_MODE_OUT_Request_Confirm_Stop_2) 
	= TOP_Level_Mode_Confirm_Stop_en(idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, OP_CMD_IN_System_Stop, confirmStopTimer_1, tLM_MODE_OUT_Request_Confirm_Stop_1, false);
		

	(idTop_Level_Mode_Sub_System_TOP_Level_Mode, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, tLM_MODE_OUT_Request_Confirm_Stop) 
	=  (idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, confirmStopTimer_2, idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2);

	--add unused variables
	(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_Log_Message_ID, tLM_MODE_OUT_System_On) 
	= (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_Log_Message_ID_1, tLM_MODE_OUT_System_On_1);
	

	tel

	until true restart POINTTop_Level_Mode_Sub_System_TOP_Level_Mode



	state TOP_LEVEL_MODE_CONFIRM_STOP_IDL:

	 var 	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2:int;
	confirmStopTimer_2:real;
	idTOP_Level_Mode_Confirm_Stop_2:int;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2:int;
	tLM_MODE_OUT_Log_Message_ID_2:int;
	tLM_MODE_OUT_System_On_2:bool;
	let

		
	(idTOP_Level_Mode_Confirm_Stop_2, confirmStopTimer_2, tLM_MODE_OUT_Request_Confirm_Stop_2, tLM_MODE_OUT_Log_Message_ID_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_System_On_2) 
	= TOP_Level_Mode_Confirm_Stop_node(idTOP_Level_Mode_Confirm_Stop_1, OP_CMD_IN_System_Stop, confirmStopTimer_1, tLM_MODE_OUT_Request_Confirm_Stop_1, OP_CMD_IN_System_Start, tLM_MODE_OUT_Log_Message_ID_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_System_On_1, OP_CMD_IN_Cancel, CONST_IN_Max_Confirm_Stop_Duration, step_size);

		


	(idTop_Level_Mode_Sub_System_TOP_Level_Mode, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, tLM_MODE_OUT_Request_Confirm_Stop, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, tLM_MODE_OUT_Log_Message_ID, tLM_MODE_OUT_System_On) 
	= (idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, confirmStopTimer_2, idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_Log_Message_ID_2, tLM_MODE_OUT_System_On_2);
	

	tel

	until true restart POINTTop_Level_Mode_Sub_System_TOP_Level_Mode



tel


--***************************************************State :Top_Level_Mode_Sub_System_Top_Level_Mode_Sub_System Automaton***************************************************

node Top_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_node(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1:int;
	OP_CMD_IN_System_Start:bool;
	OP_CMD_IN_System_Stop:bool;
	confirmStopTimer_1:real;
	idTOP_Level_Mode_Confirm_Stop_1:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_1:int;
	tLM_MODE_OUT_Request_Confirm_Stop_1:bool;
	tLM_MODE_OUT_System_On_1:bool;
	tLM_MODE_OUT_Log_Message_ID_1:int;
	CONST_IN_Max_Confirm_Stop_Duration:real;
	OP_CMD_IN_Cancel:bool;
	step_size:real)

returns (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System:int;
	confirmStopTimer:real;
	idTOP_Level_Mode_Confirm_Stop:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode:int;
	tLM_MODE_OUT_Request_Confirm_Stop:bool;
	tLM_MODE_OUT_System_On:bool;
	tLM_MODE_OUT_Log_Message_ID:int);


let

	 automaton top_level_mode_sub_system_top_level_mode_sub_system

	state POINTTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System:
	unless (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1=0) and ( OP_CMD_IN_System_Start ) restart POINT__TO__TOP_LEVEL_MODE_SUB_SYSTEM_TOP_LEVEL_MODE_1



	unless (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1=0) restart POINT__TO__TOP_LEVEL_MODE_SUB_SYSTEM_NOT_ON_2



	unless (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1=403) and ( OP_CMD_IN_System_Start ) restart TOP_LEVEL_MODE_SUB_SYSTEM_NOT_ON__TO__TOP_LEVEL_MODE_SUB_SYSTEM_TOP_LEVEL_MODE_1



	unless (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1=399) restart TOP_LEVEL_MODE_SUB_SYSTEM_TOP_LEVEL_MODE_IDL

	unless (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1=403) restart TOP_LEVEL_MODE_SUB_SYSTEM_NOT_ON_IDL

	let

		(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, idTop_Level_Mode_Sub_System_TOP_Level_Mode, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_System_On, tLM_MODE_OUT_Log_Message_ID) 
	= (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, confirmStopTimer_1, idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, tLM_MODE_OUT_Request_Confirm_Stop_1, tLM_MODE_OUT_System_On_1, tLM_MODE_OUT_Log_Message_ID_1);
	

	tel



	state POINT__TO__TOP_LEVEL_MODE_SUB_SYSTEM_TOP_LEVEL_MODE_1:

	 var 	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2:int;
	confirmStopTimer_2:real;
	idTOP_Level_Mode_Confirm_Stop_2:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2:int;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	tLM_MODE_OUT_System_On_2:bool;
	let

		-- transition trace :
	--POINT__To__Top_Level_Mode_Sub_System_TOP_Level_Mode_1
		(idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_System_On_2, confirmStopTimer_2, idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2) 
	= Top_Level_Mode_Sub_System_TOP_Level_Mode_en(idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_System_On_1, OP_CMD_IN_System_Stop, confirmStopTimer_1, idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, false);
		

	(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, idTop_Level_Mode_Sub_System_TOP_Level_Mode, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_System_On) 
	=  (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, confirmStopTimer_2, idTOP_Level_Mode_Confirm_Stop_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, tLM_MODE_OUT_Request_Confirm_Stop_2, tLM_MODE_OUT_System_On_2);

	--add unused variables
	(tLM_MODE_OUT_Log_Message_ID) 
	= (tLM_MODE_OUT_Log_Message_ID_1);
	

	tel

	until true restart POINTTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System



	state POINT__TO__TOP_LEVEL_MODE_SUB_SYSTEM_NOT_ON_2:

	 var 	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2:int;
	tLM_MODE_OUT_System_On_2:bool;
	let

		-- transition trace :
	--POINT__To__Top_Level_Mode_Sub_System_NOT_ON_2
		(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_System_On_2) 
	= Top_Level_Mode_Sub_System_NOT_ON_en(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, tLM_MODE_OUT_System_On_1, false);
		

	(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, idTop_Level_Mode_Sub_System_TOP_Level_Mode, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_System_On) 
	=  (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, confirmStopTimer_1, idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, tLM_MODE_OUT_Request_Confirm_Stop_1, tLM_MODE_OUT_System_On_2);

	--add unused variables
	(tLM_MODE_OUT_Log_Message_ID) 
	= (tLM_MODE_OUT_Log_Message_ID_1);
	

	tel

	until true restart POINTTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System



	state TOP_LEVEL_MODE_SUB_SYSTEM_NOT_ON__TO__TOP_LEVEL_MODE_SUB_SYSTEM_TOP_LEVEL_MODE_1:

	 var 	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_3:int;
	confirmStopTimer_2:real;
	idTOP_Level_Mode_Confirm_Stop_2:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2:int;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	tLM_MODE_OUT_System_On_2, tLM_MODE_OUT_System_On_3:bool;
	tLM_MODE_OUT_Log_Message_ID_2:int;
	let

		-- transition trace :
	--Top_Level_Mode_Sub_System_NOT_ON__To__Top_Level_Mode_Sub_System_TOP_Level_Mode_1
		-- condition Action : writeLog(1);
		
		(tLM_MODE_OUT_Log_Message_ID_2) 
	= Top_Level_Mode_Sub_System_NOT_ON__To__Top_Level_Mode_Sub_System_TOP_Level_Mode_1_Condition_Action(tLM_MODE_OUT_Log_Message_ID_1);
		

		(tLM_MODE_OUT_System_On_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2) 
	= Top_Level_Mode_Sub_System_NOT_ON_ex(tLM_MODE_OUT_System_On_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, false);
		

		(idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_3, tLM_MODE_OUT_System_On_3, confirmStopTimer_2, idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2) 
	= Top_Level_Mode_Sub_System_TOP_Level_Mode_en(idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_System_On_2, OP_CMD_IN_System_Stop, confirmStopTimer_1, idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, false);
		

	(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, idTop_Level_Mode_Sub_System_TOP_Level_Mode, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_System_On, tLM_MODE_OUT_Log_Message_ID) 
	=  (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_3, confirmStopTimer_2, idTOP_Level_Mode_Confirm_Stop_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, tLM_MODE_OUT_Request_Confirm_Stop_2, tLM_MODE_OUT_System_On_3, tLM_MODE_OUT_Log_Message_ID_2);


	tel

	until true restart POINTTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System



	state TOP_LEVEL_MODE_SUB_SYSTEM_TOP_LEVEL_MODE_IDL:

	 var 	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2:int;
	confirmStopTimer_2:real;
	idTOP_Level_Mode_Confirm_Stop_2:int;
	idTop_Level_Mode_Sub_System_TOP_Level_Mode_2:int;
	tLM_MODE_OUT_Request_Confirm_Stop_2:bool;
	tLM_MODE_OUT_System_On_2, tLM_MODE_OUT_System_On_3:bool;
	tLM_MODE_OUT_Log_Message_ID_2:int;
	let

		
	(tLM_MODE_OUT_System_On_2) 
	= Top_Level_Mode_Sub_System_TOP_Level_Mode_du(tLM_MODE_OUT_System_On_1);

		

	(idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, confirmStopTimer_2, idTOP_Level_Mode_Confirm_Stop_2, tLM_MODE_OUT_Request_Confirm_Stop_2, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, tLM_MODE_OUT_Log_Message_ID_2, tLM_MODE_OUT_System_On_3) 
	= Top_Level_Mode_Sub_System_TOP_Level_Mode_node(idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, OP_CMD_IN_System_Stop, confirmStopTimer_1, idTOP_Level_Mode_Confirm_Stop_1, tLM_MODE_OUT_Request_Confirm_Stop_1, CONST_IN_Max_Confirm_Stop_Duration, OP_CMD_IN_Cancel, OP_CMD_IN_System_Start, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, step_size, tLM_MODE_OUT_Log_Message_ID_1, tLM_MODE_OUT_System_On_2);

		


	(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, idTop_Level_Mode_Sub_System_TOP_Level_Mode, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_System_On, tLM_MODE_OUT_Log_Message_ID) 
	= (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_2, confirmStopTimer_2, idTOP_Level_Mode_Confirm_Stop_2, idTop_Level_Mode_Sub_System_TOP_Level_Mode_2, tLM_MODE_OUT_Request_Confirm_Stop_2, tLM_MODE_OUT_System_On_3, tLM_MODE_OUT_Log_Message_ID_2);
	

	tel

	until true restart POINTTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System



	state TOP_LEVEL_MODE_SUB_SYSTEM_NOT_ON_IDL:

	 var 	tLM_MODE_OUT_System_On_2:bool;
	let

		
	(tLM_MODE_OUT_System_On_2) 
	= Top_Level_Mode_Sub_System_NOT_ON_du(tLM_MODE_OUT_System_On_1);

		


	(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, idTop_Level_Mode_Sub_System_TOP_Level_Mode, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_System_On, tLM_MODE_OUT_Log_Message_ID) 
	= (idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, confirmStopTimer_1, idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, tLM_MODE_OUT_Request_Confirm_Stop_1, tLM_MODE_OUT_System_On_2, tLM_MODE_OUT_Log_Message_ID_1);
	

	tel

	until true restart POINTTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System



tel


--***************************************************State :Top_Level_Mode_Sub_System_Top_Level_Mode_Sub_System Automaton***************************************************

node GPCA_Top_Level_Mode_Top_Level_Mode_Sub_System(OP_CMD_IN_System_Start:bool;
	OP_CMD_IN_System_Stop:bool;
	OP_CMD_IN_Cancel:bool;
	CONST_IN_Max_Confirm_Stop_Duration:real)

returns (tLM_MODE_OUT_System_On:bool;
	tLM_MODE_OUT_Request_Confirm_Stop:bool;
	tLM_MODE_OUT_Log_Message_ID:int);


var tLM_MODE_OUT_System_On_1: bool;

	tLM_MODE_OUT_Request_Confirm_Stop_1: bool;

	tLM_MODE_OUT_Log_Message_ID_1: int;

	confirmStopTimer, confirmStopTimer_1: real;

	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1: int;

	idTOP_Level_Mode_Confirm_Stop, idTOP_Level_Mode_Confirm_Stop_1: int;

	idTop_Level_Mode_Sub_System_TOP_Level_Mode, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1: int;

		step_size: real;

	let

	tLM_MODE_OUT_System_On_1 = false -> pre tLM_MODE_OUT_System_On;

	tLM_MODE_OUT_Request_Confirm_Stop_1 = false -> pre tLM_MODE_OUT_Request_Confirm_Stop;

	tLM_MODE_OUT_Log_Message_ID_1 = 0 -> pre tLM_MODE_OUT_Log_Message_ID;

	confirmStopTimer_1 = 0.0 -> pre confirmStopTimer;

	idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1 = 0 -> pre idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System;

	idTOP_Level_Mode_Confirm_Stop_1 = 0 -> pre idTOP_Level_Mode_Confirm_Stop;

	idTop_Level_Mode_Sub_System_TOP_Level_Mode_1 = 0 -> pre idTop_Level_Mode_Sub_System_TOP_Level_Mode;

	step_size = 1.000000;

	



	(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System, confirmStopTimer, idTOP_Level_Mode_Confirm_Stop, idTop_Level_Mode_Sub_System_TOP_Level_Mode, tLM_MODE_OUT_Request_Confirm_Stop, tLM_MODE_OUT_System_On, tLM_MODE_OUT_Log_Message_ID)
	 = Top_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_node(idTop_Level_Mode_Sub_System_Top_Level_Mode_Sub_System_1, OP_CMD_IN_System_Start, OP_CMD_IN_System_Stop, confirmStopTimer_1, idTOP_Level_Mode_Confirm_Stop_1, idTop_Level_Mode_Sub_System_TOP_Level_Mode_1, tLM_MODE_OUT_Request_Confirm_Stop_1, tLM_MODE_OUT_System_On_1, tLM_MODE_OUT_Log_Message_ID_1, CONST_IN_Max_Confirm_Stop_Duration, OP_CMD_IN_Cancel, step_size);


--unused outputs
	

tel



node GPCA_Top_Level_Mode (Sys_Start_1_1 : bool; Sys_Stop_1_1 : bool; Cancel_1_1 : bool; Max_Conf_Stop_Duration_1_1 : real)
returns (System_On_1_1 : bool;
	Req_Confirm_Stop_2_1 : bool;
	Log_Msg_ID_3_1 : int); 
var
	Top_Level_Mode_Sub_System_1_1 : bool; Top_Level_Mode_Sub_System_2_1 : bool; Top_Level_Mode_Sub_System_3_1 : int;
let 
	(Top_Level_Mode_Sub_System_1_1, Top_Level_Mode_Sub_System_2_1, Top_Level_Mode_Sub_System_3_1) =  GPCA_Top_Level_Mode_Top_Level_Mode_Sub_System(Sys_Start_1_1, Sys_Stop_1_1, Cancel_1_1, Max_Conf_Stop_Duration_1_1);
	System_On_1_1 = Top_Level_Mode_Sub_System_1_1;
	Req_Confirm_Stop_2_1 = Top_Level_Mode_Sub_System_2_1;
	Log_Msg_ID_3_1 = Top_Level_Mode_Sub_System_3_1;
tel

