-- This file has been generated by CoCoSim


-- System nodes
node if_test_PP_IfActionSubsystem8 (In2_1_1 : real; In3_1_1 : bool)
returns (Out2_1_1 : bool;
	Out3_2_1 : real;
	Out4_3_1 : bool); 
var
	LogicalOperator_1_1 : bool;
	RelationalOperator_1_1 : bool;
let 
	LogicalOperator_1_1 = RelationalOperator_1_1 and In3_1_1;
	RelationalOperator_1_1 = In2_1_1 <= In2_1_1;
	Out2_1_1 = RelationalOperator_1_1;
	Out3_2_1 = In2_1_1;
	Out4_3_1 = LogicalOperator_1_1;
tel

node if_test_PP_IfActionSubsystem7 (In1_1_1 : real; In1_1_2 : real; In1_1_3 : real; In1_1_4 : real)
returns (Out1_1_1 : real; Out1_1_2 : real; Out1_1_3 : real; Out1_1_4 : real); 
let 
	Out1_1_1 = In1_1_1;
	Out1_1_2 = In1_1_2;
	Out1_1_3 = In1_1_3;
	Out1_1_4 = In1_1_4;
tel

node if_test_PP_IfActionSubsystem6 (In1_1_1 : bool)
returns (Out1_1_1 : bool); 
let 
	Out1_1_1 = In1_1_1;
tel

node if_test_PP_IfActionSubsystem5 (In1_1_1 : real; In1_1_2 : real; In1_1_3 : real)
returns (Out1_1_1 : real; Out1_1_2 : real; Out1_1_3 : real); 
let 
	Out1_1_1 = In1_1_1;
	Out1_1_2 = In1_1_2;
	Out1_1_3 = In1_1_3;
tel

node if_test_PP_IfActionSubsystem4 (In2_1_1 : real; In2_1_2 : real; In2_1_3 : real; In3_1_1 : bool)
returns (Out2_1_1 : bool; Out2_1_2 : bool; Out2_1_3 : bool;
	Out3_2_1 : real; Out3_2_2 : real; Out3_2_3 : real;
	Out4_3_1 : bool; Out4_3_2 : bool; Out4_3_3 : bool); 
var
	LogicalOperator_1_1 : bool; LogicalOperator_1_2 : bool; LogicalOperator_1_3 : bool;
	RelationalOperator_1_1 : bool; RelationalOperator_1_2 : bool; RelationalOperator_1_3 : bool;
let 
	LogicalOperator_1_1 = RelationalOperator_1_1 and In3_1_1;
	LogicalOperator_1_2 = RelationalOperator_1_2 and In3_1_1;
	LogicalOperator_1_3 = RelationalOperator_1_3 and In3_1_1;
	RelationalOperator_1_1 = In2_1_1 <= In2_1_1;
	RelationalOperator_1_2 = In2_1_2 <= In2_1_2;
	RelationalOperator_1_3 = In2_1_3 <= In2_1_3;
	Out2_1_1 = RelationalOperator_1_1;
	Out2_1_2 = RelationalOperator_1_2;
	Out2_1_3 = RelationalOperator_1_3;
	Out3_2_1 = In2_1_1;
	Out3_2_2 = In2_1_2;
	Out3_2_3 = In2_1_3;
	Out4_3_1 = LogicalOperator_1_1;
	Out4_3_2 = LogicalOperator_1_2;
	Out4_3_3 = LogicalOperator_1_3;
tel

node if_test_PP_IfActionSubsystem3 (In1_1_1 : real)
returns (Out1_1_1 : real); 
let 
	Out1_1_1 = In1_1_1;
tel

node if_test_PP_IfActionSubsystem2 (In1_1_1 : bool)
returns (Out1_1_1 : bool); 
let 
	Out1_1_1 = In1_1_1;
tel

node if_test_PP_IfActionSubsystem11 (In2_1_1 : real; In3_1_1 : bool)
returns (Out2_1_1 : bool;
	Out3_2_1 : real;
	Out4_3_1 : bool); 
var
	LogicalOperator_1_1 : bool;
	RelationalOperator_1_1 : bool;
let 
	LogicalOperator_1_1 = RelationalOperator_1_1 and In3_1_1;
	RelationalOperator_1_1 = In2_1_1 <= In2_1_1;
	Out2_1_1 = RelationalOperator_1_1;
	Out3_2_1 = In2_1_1;
	Out4_3_1 = LogicalOperator_1_1;
tel

node if_test_PP_IfActionSubsystem10 (In1_1_1 : bool)
returns (Out1_1_1 : bool); 
let 
	Out1_1_1 = In1_1_1;
tel

node if_test_PP_IfActionSubsystem1 (In1_1_1 : real)
returns (Out1_1_1 : real); 
let 
	Out1_1_1 = In1_1_1;
tel

node if_test_PP_IfActionSubsystem (In2_1_1 : real; In3_1_1 : bool)
returns (Out2_1_1 : bool;
	Out3_2_1 : real;
	Out4_3_1 : bool); 
var
	LogicalOperator_1_1 : bool;
	RelationalOperator_1_1 : bool;
let 
	LogicalOperator_1_1 = RelationalOperator_1_1 and In3_1_1;
	RelationalOperator_1_1 = In2_1_1 <= In2_1_1;
	Out2_1_1 = RelationalOperator_1_1;
	Out3_2_1 = In2_1_1;
	Out4_3_1 = LogicalOperator_1_1;
tel

node if_test_PP (In1_1_1 : real; In7_1_1 : bool; In2_1_1 : real; In3_1_1 : real; In3_1_2 : real; In3_1_3 : real; In4_1_1 : bool; In5_1_1 : real; In5_1_2 : real; In5_1_3 : real; In5_1_4 : real; In6_1_1 : real; In8_1_1 : bool; In9_1_1 : real; In10_1_1 : real; In11_1_1 : bool; In12_1_1 : real)
returns (Out1_1_1 : bool;
	Out2_2_1 : real;
	Out14_3_1 : real;
	Out15_4_1 : bool;
	Out3_5_1 : bool;
	Out4_6_1 : real;
	Out5_7_1 : bool; Out5_7_2 : bool; Out5_7_3 : bool;
	Out6_8_1 : real; Out6_8_2 : real; Out6_8_3 : real;
	Out7_9_1 : real; Out7_9_2 : real; Out7_9_3 : real;
	Out8_10_1 : bool; Out8_10_2 : bool; Out8_10_3 : bool;
	Out9_11_1 : bool;
	Out10_12_1 : real; Out10_12_2 : real; Out10_12_3 : real; Out10_12_4 : real;
	Out11_13_1 : bool;
	Out13_14_1 : real;
	Out16_15_1 : bool;
	Out17_16_1 : bool;
	Out12_17_1 : bool;
	Out18_18_1 : real;
	Out19_19_1 : bool); 
var
	If_1_1 : bool; If_2_1 : bool; If_3_1 : bool; If_4_1 : bool;
	IfActionSubsystem_1_1 : bool; IfActionSubsystem_2_1 : real; IfActionSubsystem_3_1 : bool;
	IfActionSubsystem1_1_1 : real;
	IfActionSubsystem10_1_1 : bool;
	IfActionSubsystem11_1_1 : bool; IfActionSubsystem11_2_1 : real; IfActionSubsystem11_3_1 : bool;
	IfActionSubsystem2_1_1 : bool;
	IfActionSubsystem3_1_1 : real;
	IfActionSubsystem4_1_1 : bool; IfActionSubsystem4_1_2 : bool; IfActionSubsystem4_1_3 : bool; IfActionSubsystem4_2_1 : real; IfActionSubsystem4_2_2 : real; IfActionSubsystem4_2_3 : real; IfActionSubsystem4_3_1 : bool; IfActionSubsystem4_3_2 : bool; IfActionSubsystem4_3_3 : bool;
	IfActionSubsystem5_1_1 : real; IfActionSubsystem5_1_2 : real; IfActionSubsystem5_1_3 : real;
	IfActionSubsystem6_1_1 : bool;
	IfActionSubsystem7_1_1 : real; IfActionSubsystem7_1_2 : real; IfActionSubsystem7_1_3 : real; IfActionSubsystem7_1_4 : real;
	IfActionSubsystem8_1_1 : bool; IfActionSubsystem8_2_1 : real; IfActionSubsystem8_3_1 : bool;
	If1_1_1 : bool; If1_2_1 : bool; If1_3_1 : bool; If1_4_1 : bool;
	If2_1_1 : bool; If2_2_1 : bool;
	If3_1_1 : bool;
	i_virtual_local : real;
let 
	(If_1_1, If_2_1, If_3_1, If_4_1) = if not (In2_1_1 = 0.0) then (true, false, false, false) else if In2_1_1 < 3.0 then (false, true, false, false) else if (-In2_1_1 > In1_1_1) and In2_1_1 > 0.0 then (false, false, true, false) else (false, false, false, true);
	(IfActionSubsystem_1_1, IfActionSubsystem_2_1, IfActionSubsystem_3_1) = if (If_1_1) then if_test_PP_IfActionSubsystem(In1_1_1, In7_1_1) else (pre IfActionSubsystem_1_1, pre IfActionSubsystem_2_1, pre IfActionSubsystem_3_1);
	IfActionSubsystem1_1_1 = if (If_4_1) then if_test_PP_IfActionSubsystem1(In1_1_1) else pre IfActionSubsystem1_1_1;
	IfActionSubsystem10_1_1 = if (If2_2_1) then if_test_PP_IfActionSubsystem10(In8_1_1) else pre IfActionSubsystem10_1_1;
	(IfActionSubsystem11_1_1, IfActionSubsystem11_2_1, IfActionSubsystem11_3_1) = if (If3_1_1) then if_test_PP_IfActionSubsystem11(In10_1_1, In11_1_1) else (pre IfActionSubsystem11_1_1, pre IfActionSubsystem11_2_1, pre IfActionSubsystem11_3_1);
	IfActionSubsystem2_1_1 = if (If_2_1) then if_test_PP_IfActionSubsystem2(In7_1_1) else pre IfActionSubsystem2_1_1;
	IfActionSubsystem3_1_1 = if (If_3_1) then if_test_PP_IfActionSubsystem3(In2_1_1) else pre IfActionSubsystem3_1_1;
	(IfActionSubsystem4_1_1, IfActionSubsystem4_1_2, IfActionSubsystem4_1_3, IfActionSubsystem4_2_1, IfActionSubsystem4_2_2, IfActionSubsystem4_2_3, IfActionSubsystem4_3_1, IfActionSubsystem4_3_2, IfActionSubsystem4_3_3) = if (If1_1_1) then if_test_PP_IfActionSubsystem4(In3_1_1, In3_1_2, In3_1_3, In4_1_1) else (pre IfActionSubsystem4_1_1, pre IfActionSubsystem4_1_2, pre IfActionSubsystem4_1_3, pre IfActionSubsystem4_2_1, pre IfActionSubsystem4_2_2, pre IfActionSubsystem4_2_3, pre IfActionSubsystem4_3_1, pre IfActionSubsystem4_3_2, pre IfActionSubsystem4_3_3);
	(IfActionSubsystem5_1_1, IfActionSubsystem5_1_2, IfActionSubsystem5_1_3) = if (If1_4_1) then if_test_PP_IfActionSubsystem5(In3_1_1, In3_1_2, In3_1_3) else (pre IfActionSubsystem5_1_1, pre IfActionSubsystem5_1_2, pre IfActionSubsystem5_1_3);
	IfActionSubsystem6_1_1 = if (If1_2_1) then if_test_PP_IfActionSubsystem6(In4_1_1) else pre IfActionSubsystem6_1_1;
	(IfActionSubsystem7_1_1, IfActionSubsystem7_1_2, IfActionSubsystem7_1_3, IfActionSubsystem7_1_4) = if (If1_3_1) then if_test_PP_IfActionSubsystem7(In5_1_1, In5_1_2, In5_1_3, In5_1_4) else (pre IfActionSubsystem7_1_1, pre IfActionSubsystem7_1_2, pre IfActionSubsystem7_1_3, pre IfActionSubsystem7_1_4);
	(IfActionSubsystem8_1_1, IfActionSubsystem8_2_1, IfActionSubsystem8_3_1) = if (If2_1_1) then if_test_PP_IfActionSubsystem8(In6_1_1, In8_1_1) else (pre IfActionSubsystem8_1_1, pre IfActionSubsystem8_2_1, pre IfActionSubsystem8_3_1);
	(If1_1_1, If1_2_1, If1_3_1, If1_4_1) = if In3_1_2 = 0.0 then (true, false, false, false) else if In5_1_2 < 3.0 then (false, true, false, false) else if (-In5_1_1 > In3_1_3) and In5_1_2 > 0.0 then (false, false, true, false) else (false, false, false, true);
	(If2_1_1, If2_2_1) = if not (In9_1_1 = 0.0) then (true, false) else if (-In9_1_1 > In6_1_1) or In9_1_1 > 0.0 then (false, true) else (false, false);
	If3_1_1 = if not (In12_1_1 = 0.0) then true else (false);
	Out1_1_1 = IfActionSubsystem_1_1;
	Out2_2_1 = IfActionSubsystem1_1_1;
	Out14_3_1 = IfActionSubsystem_2_1;
	Out15_4_1 = IfActionSubsystem_3_1;
	Out3_5_1 = IfActionSubsystem2_1_1;
	Out4_6_1 = IfActionSubsystem3_1_1;
	Out5_7_1 = IfActionSubsystem4_1_1;
	Out5_7_2 = IfActionSubsystem4_1_2;
	Out5_7_3 = IfActionSubsystem4_1_3;
	Out6_8_1 = IfActionSubsystem5_1_1;
	Out6_8_2 = IfActionSubsystem5_1_2;
	Out6_8_3 = IfActionSubsystem5_1_3;
	Out7_9_1 = IfActionSubsystem4_2_1;
	Out7_9_2 = IfActionSubsystem4_2_2;
	Out7_9_3 = IfActionSubsystem4_2_3;
	Out8_10_1 = IfActionSubsystem4_3_1;
	Out8_10_2 = IfActionSubsystem4_3_2;
	Out8_10_3 = IfActionSubsystem4_3_3;
	Out9_11_1 = IfActionSubsystem6_1_1;
	Out10_12_1 = IfActionSubsystem7_1_1;
	Out10_12_2 = IfActionSubsystem7_1_2;
	Out10_12_3 = IfActionSubsystem7_1_3;
	Out10_12_4 = IfActionSubsystem7_1_4;
	Out11_13_1 = IfActionSubsystem8_1_1;
	Out13_14_1 = IfActionSubsystem8_2_1;
	Out16_15_1 = IfActionSubsystem8_3_1;
	Out17_16_1 = IfActionSubsystem10_1_1;
	Out12_17_1 = IfActionSubsystem11_1_1;
	Out18_18_1 = IfActionSubsystem11_2_1;
	Out19_19_1 = IfActionSubsystem11_3_1;
	i_virtual_local= 0.0 -> 1.0;
tel

