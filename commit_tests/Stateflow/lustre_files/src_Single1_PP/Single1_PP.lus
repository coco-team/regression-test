-- This file has been generated by CoCoSim


-- System nodes




--During action for state :Single1_A747
node Single1_A747_du(x_1:real)

returns (x:real);


var 	x_2:real;


let



	x_2 
	=  x_1  + 1.;
	

	(x) 
	= (x_2);
	

tel





-- Entry action for state :Single1_A747
node Single1_A747_en(idSingle1_Single1746_1:int;
	isInner:bool)

returns (idSingle1_Single1746:int);


var 	idSingle1_Single1746_2:int;


let



	-- set state as active 
	idSingle1_Single1746_2 
	= 747;
	

	(idSingle1_Single1746) 
	= (idSingle1_Single1746_2);
	

tel





-- Exit action for state :Single1_A747
node Single1_A747_ex(idSingle1_Single1746_1:int;
	isInner:bool)

returns (idSingle1_Single1746:int);


var 	idSingle1_Single1746_2:int;


let



	-- set state as inactive 
	idSingle1_Single1746_2
	 = if (not isInner) then 0 else idSingle1_Single1746_1;


	(idSingle1_Single1746) 
	= (idSingle1_Single1746_1);
	

tel


--***************************************************State :Single1_Single1746 Automaton***************************************************

node Single1_Single1746_node(idSingle1_Single1746_1:int;
	x_1:real)

returns (idSingle1_Single1746:int;
	x:real);


let

	 automaton single1_single1746

	state POINTSingle1_Single1746:
	unless (idSingle1_Single1746_1=0) restart POINT__TO__SINGLE1_A747_1



	unless (idSingle1_Single1746_1=747) restart SINGLE1_A747_IDL

	let

		(idSingle1_Single1746, x) 
	= (idSingle1_Single1746_1, x_1);
	

	tel



	state POINT__TO__SINGLE1_A747_1:

	 var 	idSingle1_Single1746_2:int;
	let

		-- transition trace :
	--POINT__To__Single1_A747_1
		(idSingle1_Single1746_2) 
	= Single1_A747_en(idSingle1_Single1746_1, false);
		

	(idSingle1_Single1746) 
	=  (idSingle1_Single1746_2);

	--add unused variables
	(x) 
	= (x_1);
	

	tel

	until true restart POINTSingle1_Single1746



	state SINGLE1_A747_IDL:

	 var 	x_2:real;
	let

		
	(x_2) 
	= Single1_A747_du(x_1);

		


	(idSingle1_Single1746, x) 
	= (idSingle1_Single1746_1, x_2);
	

	tel

	until true restart POINTSingle1_Single1746



tel


--***************************************************State :Single1_Single1746 Automaton***************************************************

node Single1_PP_Single1(noInput :bool)

returns (x:real);


var x_1: real;

	idSingle1_Single1746, idSingle1_Single1746_1: int;

	let

	x_1 = 0.0 -> pre x;

	idSingle1_Single1746_1 = 0 -> pre idSingle1_Single1746;

	



	(idSingle1_Single1746, x)
	 = Single1_Single1746_node(idSingle1_Single1746_1, x_1);


--unused outputs
	

tel



node Single1_PP (i_virtual : real)
returns (x_1_1 : real); 
var
	Single1_1_1 : real;
	i_virtual_local : real;
let 
	Single1_1_1 =  Single1_PP_Single1(true);
	x_1_1 = Single1_1_1;
	i_virtual_local= 0.0 -> 1.0;
tel

