-- This file has been generated by cocoSim


-- System nodes






-- Entry action for state :Hierarchy4_B
node Hierarchy4_B_en(idHierarchy4_Hierarchy4_1:int;
	y_1:int;
	isInner:bool)

returns (idHierarchy4_Hierarchy4:int;
	y:int);


var 	idHierarchy4_Hierarchy4_2:int;
	y_2:int;


let



	-- set state as active 
	idHierarchy4_Hierarchy4_2 
	= 1054;
	

	y_2 
	= if (not isInner) then 2
	 else y_1;
	

	(idHierarchy4_Hierarchy4, y) 
	= (idHierarchy4_Hierarchy4_2, y_2);
	

tel





-- Exit action for state :Hierarchy4_B
node Hierarchy4_B_ex(idHierarchy4_Hierarchy4_1:int;
	isInner:bool)

returns (idHierarchy4_Hierarchy4:int);


var 	idHierarchy4_Hierarchy4_2:int;


let



	-- set state as inactive 
	idHierarchy4_Hierarchy4_2
	 = if (not isInner) then 0 else idHierarchy4_Hierarchy4_1;


	(idHierarchy4_Hierarchy4) 
	= (idHierarchy4_Hierarchy4_1);
	

tel






-- Entry action for state :Hierarchy4_A
node Hierarchy4_A_en(idHierarchy4_Hierarchy4_1:int;
	y_1:int;
	isInner:bool)

returns (idHierarchy4_Hierarchy4:int;
	y:int);


var 	idHierarchy4_Hierarchy4_2:int;
	y_2:int;


let



	-- set state as active 
	idHierarchy4_Hierarchy4_2 
	= 1053;
	

	y_2 
	= if (not isInner) then 1
	 else y_1;
	

	(idHierarchy4_Hierarchy4, y) 
	= (idHierarchy4_Hierarchy4_2, y_2);
	

tel





-- Exit action for state :Hierarchy4_A
node Hierarchy4_A_ex(idHierarchy4_Hierarchy4_1:int;
	isInner:bool)

returns (idHierarchy4_Hierarchy4:int);


var 	idHierarchy4_Hierarchy4_2:int;


let



	-- set state as inactive 
	idHierarchy4_Hierarchy4_2
	 = if (not isInner) then 0 else idHierarchy4_Hierarchy4_1;


	(idHierarchy4_Hierarchy4) 
	= (idHierarchy4_Hierarchy4_1);
	

tel


--***************************************************State :Hierarchy4_Hierarchy4 Automaton***************************************************

node Hierarchy4_Hierarchy4_node(idHierarchy4_Hierarchy4_1:int;
	x:int;
	y_1:int)

returns (idHierarchy4_Hierarchy4:int;
	y:int);


let

	 automaton hierarchy4_hierarchy4

	state POINTHierarchy4_Hierarchy4:
	unless (idHierarchy4_Hierarchy4_1=0) and ( x=0 ) restart POINT__TO__HIERARCHY4_A_1



	unless (idHierarchy4_Hierarchy4_1=0) and ( x!=0 ) restart POINT__TO__HIERARCHY4_B_2



	unless (idHierarchy4_Hierarchy4_1=1053) restart HIERARCHY4_A_IDL

	unless (idHierarchy4_Hierarchy4_1=1054) restart HIERARCHY4_B_IDL

	let

		(idHierarchy4_Hierarchy4, y) 
	= (idHierarchy4_Hierarchy4_1, y_1);
	

	tel



	state POINT__TO__HIERARCHY4_A_1:

	 var 	idHierarchy4_Hierarchy4_2:int;
	y_2:int;
	let

		-- transition trace :
	--POINT__To__Hierarchy4_A_1
		(idHierarchy4_Hierarchy4_2, y_2) 
	= Hierarchy4_A_en(idHierarchy4_Hierarchy4_1, y_1, false);
		

	(idHierarchy4_Hierarchy4, y) 
	=  (idHierarchy4_Hierarchy4_2, y_2);


	tel

	until true restart POINTHierarchy4_Hierarchy4



	state POINT__TO__HIERARCHY4_B_2:

	 var 	idHierarchy4_Hierarchy4_2:int;
	y_2:int;
	let

		-- transition trace :
	--POINT__To__Hierarchy4_B_2
		(idHierarchy4_Hierarchy4_2, y_2) 
	= Hierarchy4_B_en(idHierarchy4_Hierarchy4_1, y_1, false);
		

	(idHierarchy4_Hierarchy4, y) 
	=  (idHierarchy4_Hierarchy4_2, y_2);


	tel

	until true restart POINTHierarchy4_Hierarchy4



	state HIERARCHY4_A_IDL:

	 	let

		

	(idHierarchy4_Hierarchy4, y) 
	= (idHierarchy4_Hierarchy4_1, y_1);
	

	tel

	until true restart POINTHierarchy4_Hierarchy4



	state HIERARCHY4_B_IDL:

	 	let

		

	(idHierarchy4_Hierarchy4, y) 
	= (idHierarchy4_Hierarchy4_1, y_1);
	

	tel

	until true restart POINTHierarchy4_Hierarchy4



tel


--***************************************************State :Hierarchy4_Hierarchy4 Automaton***************************************************

node Hierarchy4_Hierarchy4(x:int)

returns (y:int);


var y_1: int;

	idHierarchy4_Hierarchy4, idHierarchy4_Hierarchy4_1: int;

	let

	y_1 = 0 -> pre y;

	idHierarchy4_Hierarchy4_1 = 0 -> pre idHierarchy4_Hierarchy4;

	



	(idHierarchy4_Hierarchy4, y)
	 = Hierarchy4_Hierarchy4_node(idHierarchy4_Hierarchy4_1, x, y_1);


--unused outputs
	

tel



node Hierarchy4 (In1_1_1 : int)
returns (Out1_1_1 : int); 
var
	Hierarchy4_1_1 : int;
let 
	Hierarchy4_1_1 =  Hierarchy4_Hierarchy4(In1_1_1);
	Out1_1_1 = Hierarchy4_1_1;
tel

