-- This file has been generated by CoCoSim


-- System nodes







-- Entry action for state :SetReset_On730
node SetReset_On730_en(idSetReset_SetReset728_1:int;
	x_1:int;
	isInner:bool)

returns (idSetReset_SetReset728:int;
	x:int);


var 	idSetReset_SetReset728_2:int;
	x_2:int;


let



	-- set state as active 
	idSetReset_SetReset728_2 
	= 730;
	

	x_2 
	= if (not isInner) then 1
	 else x_1;
	

	(idSetReset_SetReset728, x) 
	= (idSetReset_SetReset728_2, x_2);
	

tel





-- Exit action for state :SetReset_On730
node SetReset_On730_ex(idSetReset_SetReset728_1:int;
	isInner:bool)

returns (idSetReset_SetReset728:int);


var 	idSetReset_SetReset728_2:int;


let



	-- set state as inactive 
	idSetReset_SetReset728_2
	 = if (not isInner) then 0 else idSetReset_SetReset728_1;


	(idSetReset_SetReset728) 
	= (idSetReset_SetReset728_1);
	

tel






-- Entry action for state :SetReset_Off729
node SetReset_Off729_en(idSetReset_SetReset728_1:int;
	x_1:int;
	isInner:bool)

returns (idSetReset_SetReset728:int;
	x:int);


var 	idSetReset_SetReset728_2:int;
	x_2:int;


let



	-- set state as active 
	idSetReset_SetReset728_2 
	= 729;
	

	x_2 
	= if (not isInner) then 0
	 else x_1;
	

	(idSetReset_SetReset728, x) 
	= (idSetReset_SetReset728_2, x_2);
	

tel





-- Exit action for state :SetReset_Off729
node SetReset_Off729_ex(idSetReset_SetReset728_1:int;
	isInner:bool)

returns (idSetReset_SetReset728:int);


var 	idSetReset_SetReset728_2:int;


let



	-- set state as inactive 
	idSetReset_SetReset728_2
	 = if (not isInner) then 0 else idSetReset_SetReset728_1;


	(idSetReset_SetReset728) 
	= (idSetReset_SetReset728_1);
	

tel


--***************************************************State :SetReset_SetReset728 Automaton***************************************************

node SetReset_SetReset728_node(idSetReset_SetReset728_1:int;
	x_1:int;
	Set:bool;
	Reset:bool)

returns (idSetReset_SetReset728:int;
	x:int);


let

	 automaton setreset_setreset728

	state POINTSetReset_SetReset728:
	unless (idSetReset_SetReset728_1=0) restart POINT__TO__SETRESET_OFF729_1



	unless (idSetReset_SetReset728_1=729) and Set restart SETRESET_OFF729__TO__SETRESET_ON730_1



	unless (idSetReset_SetReset728_1=730) and Reset restart SETRESET_ON730__TO__SETRESET_OFF729_1



	unless (idSetReset_SetReset728_1=729) restart SETRESET_OFF729_IDL

	unless (idSetReset_SetReset728_1=730) restart SETRESET_ON730_IDL

	let

		(idSetReset_SetReset728, x) 
	= (idSetReset_SetReset728_1, x_1);
	

	tel



	state POINT__TO__SETRESET_OFF729_1:

	 var 	idSetReset_SetReset728_2:int;
	x_2:int;
	let

		-- transition trace :
	--POINT__To__SetReset_Off729_1
		(idSetReset_SetReset728_2, x_2) 
	= SetReset_Off729_en(idSetReset_SetReset728_1, x_1, false);
		

	(idSetReset_SetReset728, x) 
	=  (idSetReset_SetReset728_2, x_2);


	tel

	until true restart POINTSetReset_SetReset728



	state SETRESET_OFF729__TO__SETRESET_ON730_1:

	 var 	idSetReset_SetReset728_2, idSetReset_SetReset728_3:int;
	x_2:int;
	let

		-- transition trace :
	--SetReset_Off729__To__SetReset_On730_1
		(idSetReset_SetReset728_2) 
	= SetReset_Off729_ex(idSetReset_SetReset728_1, false);
		

		(idSetReset_SetReset728_3, x_2) 
	= SetReset_On730_en(idSetReset_SetReset728_2, x_1, false);
		

	(idSetReset_SetReset728, x) 
	=  (idSetReset_SetReset728_3, x_2);


	tel

	until true restart POINTSetReset_SetReset728



	state SETRESET_ON730__TO__SETRESET_OFF729_1:

	 var 	idSetReset_SetReset728_2, idSetReset_SetReset728_3:int;
	x_2:int;
	let

		-- transition trace :
	--SetReset_On730__To__SetReset_Off729_1
		(idSetReset_SetReset728_2) 
	= SetReset_On730_ex(idSetReset_SetReset728_1, false);
		

		(idSetReset_SetReset728_3, x_2) 
	= SetReset_Off729_en(idSetReset_SetReset728_2, x_1, false);
		

	(idSetReset_SetReset728, x) 
	=  (idSetReset_SetReset728_3, x_2);


	tel

	until true restart POINTSetReset_SetReset728



	state SETRESET_OFF729_IDL:

	 	let

		

	(idSetReset_SetReset728, x) 
	= (idSetReset_SetReset728_1, x_1);
	

	tel

	until true restart POINTSetReset_SetReset728



	state SETRESET_ON730_IDL:

	 	let

		

	(idSetReset_SetReset728, x) 
	= (idSetReset_SetReset728_1, x_1);
	

	tel

	until true restart POINTSetReset_SetReset728



tel


--***************************************************State :SetReset_SetReset728 Automaton***************************************************

node SetReset_PP_SetReset(Set:bool;
	Reset:bool)

returns (x:int);


var x_1: int;

	idSetReset_SetReset728, idSetReset_SetReset728_1: int;

		idSetReset_SetReset728_2:int;
	x_2:int;
let

	x_1 = 0 -> pre x;

	idSetReset_SetReset728_1 = 0 -> pre idSetReset_SetReset728;

	



	(idSetReset_SetReset728_2, x_2)
	 = 

	 if Set then SetReset_SetReset728_node(idSetReset_SetReset728_1, x_1, Set, false)

	 else (idSetReset_SetReset728_1, x_1);

	



	(idSetReset_SetReset728, x)
	 = 

	 if Reset then SetReset_SetReset728_node(idSetReset_SetReset728_2, x_2, false, Reset)

	 else (idSetReset_SetReset728_2, x_2);

	


--unused outputs
	

tel



node SetReset_PP (Set_1_1 : real; Reset_1_1 : real)
returns (output_1_1 : int); 
var
	Mux_1_1 : real; Mux_1_2 : real;
	SetReset_1_1 : int;
	i_virtual_local : real;
	SetResetMux_1_1_event: bool;
	SetResetMux_1_2_event: bool;
let 
	Mux_1_1 = Set_1_1 ;
	Mux_1_2 = Reset_1_1 ;
	SetResetMux_1_1_event = false -> (pre(Mux_1_1) <= 0.0 and Mux_1_1 > 0.0);
	SetResetMux_1_2_event = false -> (pre(Mux_1_2) <= 0.0 and Mux_1_2 > 0.0);
	SetReset_1_1 =  SetReset_PP_SetReset(SetResetMux_1_1_event, SetResetMux_1_2_event);
	output_1_1 = SetReset_1_1;
	i_virtual_local= 0.0 -> 1.0;
tel

