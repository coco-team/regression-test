-- This file has been generated by cocoSim


-- System nodes
node logic_test (In1_1_1 : bool; In4_1_1 : real; In5_1_1 : int; In6_1_1 : real; In6_1_2 : real; In7_1_1 : int; In7_1_2 : int; In7_1_3 : int; In7_1_4 : int; In7_1_5 : int; In7_1_6 : int; In8_1_1 : real; In8_1_2 : real; In9_1_1 : real; In9_1_2 : real; In10_1_1 : int; In10_1_2 : int; In10_1_3 : int; In10_1_4 : int; In10_1_5 : int; In10_1_6 : int; In11_1_1 : int; In11_1_2 : int; In11_1_3 : int; In11_1_4 : int; In11_1_5 : int; In11_1_6 : int; In12_1_1 : real; In12_1_2 : real; In13_1_1 : real; In13_1_2 : real; In14_1_1 : int; In14_1_2 : int; In14_1_3 : int; In14_1_4 : int; In14_1_5 : int; In14_1_6 : int; In15_1_1 : int; In15_1_2 : int; In15_1_3 : int; In15_1_4 : int; In15_1_5 : int; In15_1_6 : int; In16_1_1 : real; In16_1_2 : real; In17_1_1 : real; In17_1_2 : real; In18_1_1 : int; In18_1_2 : int; In18_1_3 : int; In18_1_4 : int; In18_1_5 : int; In18_1_6 : int; In19_1_1 : int; In19_1_2 : int; In19_1_3 : int; In19_1_4 : int; In19_1_5 : int; In19_1_6 : int; In20_1_1 : real; In20_1_2 : real; In21_1_1 : real; In21_1_2 : real; In22_1_1 : int; In22_1_2 : int; In22_1_3 : int; In22_1_4 : int; In22_1_5 : int; In22_1_6 : int; In23_1_1 : int; In23_1_2 : int; In23_1_3 : int; In23_1_4 : int; In23_1_5 : int; In23_1_6 : int; In24_1_1 : real; In24_1_2 : real; In25_1_1 : real; In25_1_2 : real; In26_1_1 : int; In26_1_2 : int; In26_1_3 : int; In26_1_4 : int; In26_1_5 : int; In26_1_6 : int; In27_1_1 : int; In27_1_2 : int; In27_1_3 : int; In27_1_4 : int; In27_1_5 : int; In27_1_6 : int; In2_1_1 : bool; In2_1_2 : bool; In3_1_1 : bool; In3_1_2 : bool; In3_1_3 : bool; In3_1_4 : bool)
returns (Out1_1_1 : bool;
	Out7_2_1 : bool;
	Out8_3_1 : bool;
	Out9_4_1 : bool; Out9_4_2 : bool;
	Out10_5_1 : bool; Out10_5_2 : bool; Out10_5_3 : bool; Out10_5_4 : bool; Out10_5_5 : bool; Out10_5_6 : bool;
	Out11_6_1 : bool; Out11_6_2 : bool;
	Out12_7_1 : bool; Out12_7_2 : bool; Out12_7_3 : bool; Out12_7_4 : bool; Out12_7_5 : bool; Out12_7_6 : bool;
	Out13_8_1 : bool; Out13_8_2 : bool;
	Out14_9_1 : bool; Out14_9_2 : bool; Out14_9_3 : bool; Out14_9_4 : bool; Out14_9_5 : bool; Out14_9_6 : bool;
	Out15_10_1 : bool; Out15_10_2 : bool;
	Out16_11_1 : bool; Out16_11_2 : bool; Out16_11_3 : bool; Out16_11_4 : bool; Out16_11_5 : bool; Out16_11_6 : bool;
	Out17_12_1 : bool; Out17_12_2 : bool;
	Out18_13_1 : bool; Out18_13_2 : bool; Out18_13_3 : bool; Out18_13_4 : bool; Out18_13_5 : bool; Out18_13_6 : bool;
	Out19_14_1 : bool; Out19_14_2 : bool;
	Out20_15_1 : bool; Out20_15_2 : bool; Out20_15_3 : bool; Out20_15_4 : bool; Out20_15_5 : bool; Out20_15_6 : bool;
	Out2_16_1 : bool; Out2_16_2 : bool;
	Out3_17_1 : bool; Out3_17_2 : bool;
	Out4_18_1 : bool; Out4_18_2 : bool; Out4_18_3 : bool; Out4_18_4 : bool;
	Out5_19_1 : bool; Out5_19_2 : bool;
	Out6_20_1 : bool; Out6_20_2 : bool; Out6_20_3 : bool; Out6_20_4 : bool;
	Out21_21_1 : bool; Out21_21_2 : bool; Out21_21_3 : bool; Out21_21_4 : bool); 
var
	LogicalOperator_1_1 : bool;
	LogicalOperator1_1_1 : bool; LogicalOperator1_1_2 : bool;
	LogicalOperator10_1_1 : bool; LogicalOperator10_1_2 : bool;
	LogicalOperator11_1_1 : bool; LogicalOperator11_1_2 : bool; LogicalOperator11_1_3 : bool; LogicalOperator11_1_4 : bool; LogicalOperator11_1_5 : bool; LogicalOperator11_1_6 : bool;
	LogicalOperator12_1_1 : bool; LogicalOperator12_1_2 : bool;
	LogicalOperator13_1_1 : bool; LogicalOperator13_1_2 : bool; LogicalOperator13_1_3 : bool; LogicalOperator13_1_4 : bool; LogicalOperator13_1_5 : bool; LogicalOperator13_1_6 : bool;
	LogicalOperator14_1_1 : bool; LogicalOperator14_1_2 : bool;
	LogicalOperator15_1_1 : bool; LogicalOperator15_1_2 : bool; LogicalOperator15_1_3 : bool; LogicalOperator15_1_4 : bool; LogicalOperator15_1_5 : bool; LogicalOperator15_1_6 : bool;
	LogicalOperator16_1_1 : bool; LogicalOperator16_1_2 : bool;
	LogicalOperator17_1_1 : bool; LogicalOperator17_1_2 : bool; LogicalOperator17_1_3 : bool; LogicalOperator17_1_4 : bool; LogicalOperator17_1_5 : bool; LogicalOperator17_1_6 : bool;
	LogicalOperator18_1_1 : bool; LogicalOperator18_1_2 : bool;
	LogicalOperator19_1_1 : bool; LogicalOperator19_1_2 : bool; LogicalOperator19_1_3 : bool; LogicalOperator19_1_4 : bool; LogicalOperator19_1_5 : bool; LogicalOperator19_1_6 : bool;
	LogicalOperator2_1_1 : bool; LogicalOperator2_1_2 : bool;
	LogicalOperator20_1_1 : bool; LogicalOperator20_1_2 : bool; LogicalOperator20_1_3 : bool; LogicalOperator20_1_4 : bool;
	LogicalOperator3_1_1 : bool; LogicalOperator3_1_2 : bool; LogicalOperator3_1_3 : bool; LogicalOperator3_1_4 : bool;
	LogicalOperator4_1_1 : bool; LogicalOperator4_1_2 : bool;
	LogicalOperator5_1_1 : bool; LogicalOperator5_1_2 : bool; LogicalOperator5_1_3 : bool; LogicalOperator5_1_4 : bool;
	LogicalOperator6_1_1 : bool;
	LogicalOperator7_1_1 : bool;
	LogicalOperator8_1_1 : bool; LogicalOperator8_1_2 : bool;
	LogicalOperator9_1_1 : bool; LogicalOperator9_1_2 : bool; LogicalOperator9_1_3 : bool; LogicalOperator9_1_4 : bool; LogicalOperator9_1_5 : bool; LogicalOperator9_1_6 : bool;
	i_virtual_local : real;
let 
	LogicalOperator_1_1 = not In1_1_1;
	LogicalOperator1_1_1 = In2_1_1 and In2_1_1 and In2_1_1;
	LogicalOperator1_1_2 = In2_1_2 and In2_1_2 and In2_1_2;
	LogicalOperator10_1_1 = (if In8_1_1 = 0.0 then false else true) and (if In9_1_1 = 0.0 then false else true);
	LogicalOperator10_1_2 = (if In8_1_2 = 0.0 then false else true) and (if In9_1_2 = 0.0 then false else true);
	LogicalOperator11_1_1 = (if In10_1_1 = 0 then false else true) and (if In11_1_1 = 0 then false else true);
	LogicalOperator11_1_2 = (if In10_1_2 = 0 then false else true) and (if In11_1_2 = 0 then false else true);
	LogicalOperator11_1_3 = (if In10_1_3 = 0 then false else true) and (if In11_1_3 = 0 then false else true);
	LogicalOperator11_1_4 = (if In10_1_4 = 0 then false else true) and (if In11_1_4 = 0 then false else true);
	LogicalOperator11_1_5 = (if In10_1_5 = 0 then false else true) and (if In11_1_5 = 0 then false else true);
	LogicalOperator11_1_6 = (if In10_1_6 = 0 then false else true) and (if In11_1_6 = 0 then false else true);
	LogicalOperator12_1_1 = (if In12_1_1 = 0.0 then false else true) or (if In13_1_1 = 0.0 then false else true);
	LogicalOperator12_1_2 = (if In12_1_2 = 0.0 then false else true) or (if In13_1_2 = 0.0 then false else true);
	LogicalOperator13_1_1 = (if In14_1_1 = 0 then false else true) or (if In15_1_1 = 0 then false else true);
	LogicalOperator13_1_2 = (if In14_1_2 = 0 then false else true) or (if In15_1_2 = 0 then false else true);
	LogicalOperator13_1_3 = (if In14_1_3 = 0 then false else true) or (if In15_1_3 = 0 then false else true);
	LogicalOperator13_1_4 = (if In14_1_4 = 0 then false else true) or (if In15_1_4 = 0 then false else true);
	LogicalOperator13_1_5 = (if In14_1_5 = 0 then false else true) or (if In15_1_5 = 0 then false else true);
	LogicalOperator13_1_6 = (if In14_1_6 = 0 then false else true) or (if In15_1_6 = 0 then false else true);
	LogicalOperator14_1_1 = not((if In16_1_1 = 0.0 then false else true) and (if In17_1_1 = 0.0 then false else true));
	LogicalOperator14_1_2 = not((if In16_1_2 = 0.0 then false else true) and (if In17_1_2 = 0.0 then false else true));
	LogicalOperator15_1_1 = not((if In18_1_1 = 0 then false else true) and (if In19_1_1 = 0 then false else true));
	LogicalOperator15_1_2 = not((if In18_1_2 = 0 then false else true) and (if In19_1_2 = 0 then false else true));
	LogicalOperator15_1_3 = not((if In18_1_3 = 0 then false else true) and (if In19_1_3 = 0 then false else true));
	LogicalOperator15_1_4 = not((if In18_1_4 = 0 then false else true) and (if In19_1_4 = 0 then false else true));
	LogicalOperator15_1_5 = not((if In18_1_5 = 0 then false else true) and (if In19_1_5 = 0 then false else true));
	LogicalOperator15_1_6 = not((if In18_1_6 = 0 then false else true) and (if In19_1_6 = 0 then false else true));
	LogicalOperator16_1_1 = not((if In20_1_1 = 0.0 then false else true) or (if In21_1_1 = 0.0 then false else true));
	LogicalOperator16_1_2 = not((if In20_1_2 = 0.0 then false else true) or (if In21_1_2 = 0.0 then false else true));
	LogicalOperator17_1_1 = not((if In22_1_1 = 0 then false else true) or (if In23_1_1 = 0 then false else true));
	LogicalOperator17_1_2 = not((if In22_1_2 = 0 then false else true) or (if In23_1_2 = 0 then false else true));
	LogicalOperator17_1_3 = not((if In22_1_3 = 0 then false else true) or (if In23_1_3 = 0 then false else true));
	LogicalOperator17_1_4 = not((if In22_1_4 = 0 then false else true) or (if In23_1_4 = 0 then false else true));
	LogicalOperator17_1_5 = not((if In22_1_5 = 0 then false else true) or (if In23_1_5 = 0 then false else true));
	LogicalOperator17_1_6 = not((if In22_1_6 = 0 then false else true) or (if In23_1_6 = 0 then false else true));
	LogicalOperator18_1_1 = (if In24_1_1 = 0.0 then false else true) xor (if In25_1_1 = 0.0 then false else true);
	LogicalOperator18_1_2 = (if In24_1_2 = 0.0 then false else true) xor (if In25_1_2 = 0.0 then false else true);
	LogicalOperator19_1_1 = (if In26_1_1 = 0 then false else true) xor (if In27_1_1 = 0 then false else true);
	LogicalOperator19_1_2 = (if In26_1_2 = 0 then false else true) xor (if In27_1_2 = 0 then false else true);
	LogicalOperator19_1_3 = (if In26_1_3 = 0 then false else true) xor (if In27_1_3 = 0 then false else true);
	LogicalOperator19_1_4 = (if In26_1_4 = 0 then false else true) xor (if In27_1_4 = 0 then false else true);
	LogicalOperator19_1_5 = (if In26_1_5 = 0 then false else true) xor (if In27_1_5 = 0 then false else true);
	LogicalOperator19_1_6 = (if In26_1_6 = 0 then false else true) xor (if In27_1_6 = 0 then false else true);
	LogicalOperator2_1_1 = In2_1_1 or In2_1_1 or In2_1_1;
	LogicalOperator2_1_2 = In2_1_2 or In2_1_2 or In2_1_2;
	LogicalOperator20_1_1 = not(In3_1_1 xor In3_1_1 xor In3_1_1);
	LogicalOperator20_1_2 = not(In3_1_2 xor In3_1_2 xor In3_1_2);
	LogicalOperator20_1_3 = not(In3_1_3 xor In3_1_3 xor In3_1_3);
	LogicalOperator20_1_4 = not(In3_1_4 xor In3_1_4 xor In3_1_4);
	LogicalOperator3_1_1 = In3_1_1 xor In3_1_1 xor In3_1_1;
	LogicalOperator3_1_2 = In3_1_2 xor In3_1_2 xor In3_1_2;
	LogicalOperator3_1_3 = In3_1_3 xor In3_1_3 xor In3_1_3;
	LogicalOperator3_1_4 = In3_1_4 xor In3_1_4 xor In3_1_4;
	LogicalOperator4_1_1 = not(In2_1_1 and not(In2_1_1 and In2_1_1));
	LogicalOperator4_1_2 = not(In2_1_2 and not(In2_1_2 and In2_1_2));
	LogicalOperator5_1_1 = not(In3_1_1 or not(In3_1_1 or In3_1_1));
	LogicalOperator5_1_2 = not(In3_1_2 or not(In3_1_2 or In3_1_2));
	LogicalOperator5_1_3 = not(In3_1_3 or not(In3_1_3 or In3_1_3));
	LogicalOperator5_1_4 = not(In3_1_4 or not(In3_1_4 or In3_1_4));
	LogicalOperator6_1_1 = not (if In4_1_1 = 0.0 then false else true);
	LogicalOperator7_1_1 = not (if In5_1_1 = 0 then false else true);
	LogicalOperator8_1_1 = not (if In6_1_1 = 0.0 then false else true);
	LogicalOperator8_1_2 = not (if In6_1_2 = 0.0 then false else true);
	LogicalOperator9_1_1 = not (if In7_1_1 = 0 then false else true);
	LogicalOperator9_1_2 = not (if In7_1_2 = 0 then false else true);
	LogicalOperator9_1_3 = not (if In7_1_3 = 0 then false else true);
	LogicalOperator9_1_4 = not (if In7_1_4 = 0 then false else true);
	LogicalOperator9_1_5 = not (if In7_1_5 = 0 then false else true);
	LogicalOperator9_1_6 = not (if In7_1_6 = 0 then false else true);
	Out1_1_1 = LogicalOperator_1_1;
	Out7_2_1 = LogicalOperator6_1_1;
	Out8_3_1 = LogicalOperator7_1_1;
	Out9_4_1 = LogicalOperator8_1_1;
	Out9_4_2 = LogicalOperator8_1_2;
	Out10_5_1 = LogicalOperator9_1_1;
	Out10_5_2 = LogicalOperator9_1_2;
	Out10_5_3 = LogicalOperator9_1_3;
	Out10_5_4 = LogicalOperator9_1_4;
	Out10_5_5 = LogicalOperator9_1_5;
	Out10_5_6 = LogicalOperator9_1_6;
	Out11_6_1 = LogicalOperator10_1_1;
	Out11_6_2 = LogicalOperator10_1_2;
	Out12_7_1 = LogicalOperator11_1_1;
	Out12_7_2 = LogicalOperator11_1_2;
	Out12_7_3 = LogicalOperator11_1_3;
	Out12_7_4 = LogicalOperator11_1_4;
	Out12_7_5 = LogicalOperator11_1_5;
	Out12_7_6 = LogicalOperator11_1_6;
	Out13_8_1 = LogicalOperator12_1_1;
	Out13_8_2 = LogicalOperator12_1_2;
	Out14_9_1 = LogicalOperator13_1_1;
	Out14_9_2 = LogicalOperator13_1_2;
	Out14_9_3 = LogicalOperator13_1_3;
	Out14_9_4 = LogicalOperator13_1_4;
	Out14_9_5 = LogicalOperator13_1_5;
	Out14_9_6 = LogicalOperator13_1_6;
	Out15_10_1 = LogicalOperator14_1_1;
	Out15_10_2 = LogicalOperator14_1_2;
	Out16_11_1 = LogicalOperator15_1_1;
	Out16_11_2 = LogicalOperator15_1_2;
	Out16_11_3 = LogicalOperator15_1_3;
	Out16_11_4 = LogicalOperator15_1_4;
	Out16_11_5 = LogicalOperator15_1_5;
	Out16_11_6 = LogicalOperator15_1_6;
	Out17_12_1 = LogicalOperator16_1_1;
	Out17_12_2 = LogicalOperator16_1_2;
	Out18_13_1 = LogicalOperator17_1_1;
	Out18_13_2 = LogicalOperator17_1_2;
	Out18_13_3 = LogicalOperator17_1_3;
	Out18_13_4 = LogicalOperator17_1_4;
	Out18_13_5 = LogicalOperator17_1_5;
	Out18_13_6 = LogicalOperator17_1_6;
	Out19_14_1 = LogicalOperator18_1_1;
	Out19_14_2 = LogicalOperator18_1_2;
	Out20_15_1 = LogicalOperator19_1_1;
	Out20_15_2 = LogicalOperator19_1_2;
	Out20_15_3 = LogicalOperator19_1_3;
	Out20_15_4 = LogicalOperator19_1_4;
	Out20_15_5 = LogicalOperator19_1_5;
	Out20_15_6 = LogicalOperator19_1_6;
	Out2_16_1 = LogicalOperator1_1_1;
	Out2_16_2 = LogicalOperator1_1_2;
	Out3_17_1 = LogicalOperator2_1_1;
	Out3_17_2 = LogicalOperator2_1_2;
	Out4_18_1 = LogicalOperator3_1_1;
	Out4_18_2 = LogicalOperator3_1_2;
	Out4_18_3 = LogicalOperator3_1_3;
	Out4_18_4 = LogicalOperator3_1_4;
	Out5_19_1 = LogicalOperator4_1_1;
	Out5_19_2 = LogicalOperator4_1_2;
	Out6_20_1 = LogicalOperator5_1_1;
	Out6_20_2 = LogicalOperator5_1_2;
	Out6_20_3 = LogicalOperator5_1_3;
	Out6_20_4 = LogicalOperator5_1_4;
	Out21_21_1 = LogicalOperator20_1_1;
	Out21_21_2 = LogicalOperator20_1_2;
	Out21_21_3 = LogicalOperator20_1_3;
	Out21_21_4 = LogicalOperator20_1_4;
	i_virtual_local= 0.0 -> 1.0;
tel

