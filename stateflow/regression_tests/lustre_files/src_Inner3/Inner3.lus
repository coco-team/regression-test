-- This file has been generated by cocoSim


-- System nodes










-- Entry action for state :A_A3
node A_A3_en(idInner3_A_1:int;
	enA3cnt_1:int;
	isInner:bool)

returns (idInner3_A:int;
	enA3cnt:int);


var 	idInner3_A_2:int;
	enA3cnt_2:int;


let



	-- set state as active 
	idInner3_A_2 
	= 239;
	

	enA3cnt_2 
	= if (not isInner) then  enA3cnt_1  + 1
	 else enA3cnt_1;
	

	(idInner3_A, enA3cnt) 
	= (idInner3_A_2, enA3cnt_2);
	

tel





--During action for state :A_A3
node A_A3_du(duA3cnt_1:int)

returns (duA3cnt:int);


var 	duA3cnt_2:int;


let



	duA3cnt_2 
	=  duA3cnt_1  + 1;
	

	(duA3cnt) 
	= (duA3cnt_2);
	

tel





-- Exit action for state :A_A3
node A_A3_ex(exA3cnt_1:int;
	idInner3_A_1:int;
	isInner:bool)

returns (exA3cnt:int;
	idInner3_A:int);


var 	exA3cnt_2:int;
	idInner3_A_2:int;


let



	exA3cnt_2 
	= if (not isInner) then  exA3cnt_1  + 1
	 else exA3cnt_1;
	

	-- set state as inactive 
	idInner3_A_2
	 = if (not isInner) then 0 else idInner3_A_1;


	(exA3cnt, idInner3_A) 
	= (exA3cnt_2, idInner3_A_2);
	

tel






-- Entry action for state :A_A2
node A_A2_en(idInner3_A_1:int;
	enA2cnt_1:int;
	isInner:bool)

returns (idInner3_A:int;
	enA2cnt:int);


var 	idInner3_A_2:int;
	enA2cnt_2:int;


let



	-- set state as active 
	idInner3_A_2 
	= 238;
	

	enA2cnt_2 
	= if (not isInner) then  enA2cnt_1  + 1
	 else enA2cnt_1;
	

	(idInner3_A, enA2cnt) 
	= (idInner3_A_2, enA2cnt_2);
	

tel





--During action for state :A_A2
node A_A2_du(duA2cnt_1:int)

returns (duA2cnt:int);


var 	duA2cnt_2:int;


let



	duA2cnt_2 
	=  duA2cnt_1  + 1;
	

	(duA2cnt) 
	= (duA2cnt_2);
	

tel





-- Exit action for state :A_A2
node A_A2_ex(exA2cnt_1:int;
	idInner3_A_1:int;
	isInner:bool)

returns (exA2cnt:int;
	idInner3_A:int);


var 	exA2cnt_2:int;
	idInner3_A_2:int;


let



	exA2cnt_2 
	= if (not isInner) then  exA2cnt_1  + 1
	 else exA2cnt_1;
	

	-- set state as inactive 
	idInner3_A_2
	 = if (not isInner) then 0 else idInner3_A_1;


	(exA2cnt, idInner3_A) 
	= (exA2cnt_2, idInner3_A_2);
	

tel






-- Entry action for state :A_A1
node A_A1_en(idInner3_A_1:int;
	enA1cnt_1:int;
	isInner:bool)

returns (idInner3_A:int;
	enA1cnt:int);


var 	idInner3_A_2:int;
	enA1cnt_2:int;


let



	-- set state as active 
	idInner3_A_2 
	= 237;
	

	enA1cnt_2 
	= if (not isInner) then  enA1cnt_1  + 1
	 else enA1cnt_1;
	

	(idInner3_A, enA1cnt) 
	= (idInner3_A_2, enA1cnt_2);
	

tel





--During action for state :A_A1
node A_A1_du(duA1cnt_1:int)

returns (duA1cnt:int);


var 	duA1cnt_2:int;


let



	duA1cnt_2 
	=  duA1cnt_1  + 1;
	

	(duA1cnt) 
	= (duA1cnt_2);
	

tel





-- Exit action for state :A_A1
node A_A1_ex(exA1cnt_1:int;
	idInner3_A_1:int;
	isInner:bool)

returns (exA1cnt:int;
	idInner3_A:int);


var 	exA1cnt_2:int;
	idInner3_A_2:int;


let



	exA1cnt_2 
	= if (not isInner) then  exA1cnt_1  + 1
	 else exA1cnt_1;
	

	-- set state as inactive 
	idInner3_A_2
	 = if (not isInner) then 0 else idInner3_A_1;


	(exA1cnt, idInner3_A) 
	= (exA1cnt_2, idInner3_A_2);
	

tel






-- Entry action for state :Inner3_A
node Inner3_A_en(idInner3_A_1:int;
	idInner3_Inner3_1:int;
	enAcnt_1:int;
	enA1cnt_1:int;
	enA2cnt_1:int;
	enA3cnt_1:int;
	isInner:bool)

returns (idInner3_A:int;
	idInner3_Inner3:int;
	enAcnt:int;
	enA1cnt:int;
	enA2cnt:int;
	enA3cnt:int);


var 	idInner3_A_2, idInner3_A_3, idInner3_A_4, idInner3_A_5, idInner3_A_6, idInner3_A_7:int;
	idInner3_Inner3_2, idInner3_Inner3_3, idInner3_Inner3_4:int;
	enAcnt_2, enAcnt_3, enAcnt_4:int;
	enA1cnt_2, enA1cnt_3, enA1cnt_4, enA1cnt_5:int;
	enA2cnt_2, enA2cnt_3:int;
	enA3cnt_2, enA3cnt_3:int;


let



	-- set state as active 
	idInner3_Inner3_2 
	= 236;
	

	enAcnt_2 
	= if (not isInner) then  enAcnt_1  + 1
	 else enAcnt_1;
	

	
-- transition trace :
	--POINT__To__A_A1_1
		(idInner3_A_2, enA1cnt_2) 
	= A_A1_en(idInner3_A_1, enA1cnt_1, false);
		

	(idInner3_A_3, idInner3_Inner3_3, enAcnt_3, enA1cnt_3) 
	= 

	if ( idInner3_A_1 = 0) then

	 (idInner3_A_2, idInner3_Inner3_2, enAcnt_2, enA1cnt_2)

	 else(idInner3_A_1, idInner3_Inner3_2, enAcnt_2, enA1cnt_1);

	

	(idInner3_A_4, enA2cnt_2) 
	= 
	if ( idInner3_A_1 = 238) then
	A_A2_en(idInner3_A_1, enA2cnt_1, false)
	 else (idInner3_A_1, enA2cnt_1);

	

	(idInner3_A_5, enA3cnt_2) 
	= 
	if ( idInner3_A_1 = 239) then
	A_A3_en(idInner3_A_1, enA3cnt_1, false)
	 else (idInner3_A_1, enA3cnt_1);

	

	(idInner3_A_6, enA1cnt_4) 
	= 
	if ( idInner3_A_1 = 237) then
	A_A1_en(idInner3_A_1, enA1cnt_1, false)
	 else (idInner3_A_1, enA1cnt_1);

	

	(idInner3_A_7, idInner3_Inner3_4, enAcnt_4, enA1cnt_5, enA2cnt_3, enA3cnt_3) 
	= 
		 if ( idInner3_A_1 = 0) then 
		(idInner3_A_3, idInner3_Inner3_3, enAcnt_3, enA1cnt_3, enA2cnt_1, enA3cnt_1)
		 else
		 if ( idInner3_A_1 = 238) then 
		(idInner3_A_4, idInner3_Inner3_3, enAcnt_3, enA1cnt_3, enA2cnt_2, enA3cnt_1)
		 else
		 if ( idInner3_A_1 = 239) then 
		(idInner3_A_5, idInner3_Inner3_3, enAcnt_3, enA1cnt_3, enA2cnt_2, enA3cnt_2)
		 else
		 if ( idInner3_A_1 = 237) then 
		(idInner3_A_6, idInner3_Inner3_3, enAcnt_3, enA1cnt_4, enA2cnt_2, enA3cnt_2)
		 else (idInner3_A_1, idInner3_Inner3_2, enAcnt_2, enA1cnt_1, enA2cnt_1, enA3cnt_1);


	(idInner3_A, idInner3_Inner3, enAcnt, enA1cnt, enA2cnt, enA3cnt) 
	= (idInner3_A_7, idInner3_Inner3_4, enAcnt_4, enA1cnt_5, enA2cnt_3, enA3cnt_3);
	

tel





--During action for state :Inner3_A
node Inner3_A_du(duAcnt_1:int)

returns (duAcnt:int);


var 	duAcnt_2:int;


let



	duAcnt_2 
	=  duAcnt_1  + 1;
	

	(duAcnt) 
	= (duAcnt_2);
	

tel





-- Exit action for state :Inner3_A
node Inner3_A_ex(exA2cnt_1:int;
	idInner3_A_1:int;
	exA3cnt_1:int;
	exA1cnt_1:int;
	exAcnt_1:int;
	idInner3_Inner3_1:int;
	isInner:bool)

returns (exA2cnt:int;
	idInner3_A:int;
	exA3cnt:int;
	exA1cnt:int;
	exAcnt:int;
	idInner3_Inner3:int);


var 	exA2cnt_2, exA2cnt_3:int;
	idInner3_A_2, idInner3_A_3, idInner3_A_4, idInner3_A_5, idInner3_A_6:int;
	exA3cnt_2, exA3cnt_3:int;
	exA1cnt_2, exA1cnt_3:int;
	exAcnt_2:int;
	idInner3_Inner3_2:int;


let



	
	(exA2cnt_2, idInner3_A_2) 
	= 
	if ( idInner3_A_1 = 238) then
	A_A2_ex(exA2cnt_1, idInner3_A_1, false)
	 else (exA2cnt_1, idInner3_A_1);

	

	(exA3cnt_2, idInner3_A_3) 
	= 
	if ( idInner3_A_1 = 239) then
	A_A3_ex(exA3cnt_1, idInner3_A_1, false)
	 else (exA3cnt_1, idInner3_A_1);

	

	(exA1cnt_2, idInner3_A_4) 
	= 
	if ( idInner3_A_1 = 237) then
	A_A1_ex(exA1cnt_1, idInner3_A_1, false)
	 else (exA1cnt_1, idInner3_A_1);

	

	(exA2cnt_3, idInner3_A_5, exA3cnt_3, exA1cnt_3) 
	= 
		 if ( idInner3_A_1 = 238) then 
		(exA2cnt_2, idInner3_A_2, exA3cnt_1, exA1cnt_1)
		 else
		 if ( idInner3_A_1 = 239) then 
		(exA2cnt_2, idInner3_A_3, exA3cnt_2, exA1cnt_1)
		 else
		 if ( idInner3_A_1 = 237) then 
		(exA2cnt_2, idInner3_A_4, exA3cnt_2, exA1cnt_2)
		 else (exA2cnt_1, idInner3_A_1, exA3cnt_1, exA1cnt_1);


	exAcnt_2 
	= if (not isInner) then  exAcnt_1  + 1
	 else exAcnt_1;
	

	-- set state as inactive 
	idInner3_Inner3_2
	 = if (not isInner) then 0 else idInner3_Inner3_1;

	idInner3_A_6 
	= 0;
	

	(exA2cnt, idInner3_A, exA3cnt, exA1cnt, exAcnt, idInner3_Inner3) 
	= (exA2cnt_3, idInner3_A_6, exA3cnt_3, exA1cnt_3, exAcnt_2, idInner3_Inner3_2);
	

tel


--***************************************************State :Inner3_A Automaton***************************************************

node Inner3_A_node(idInner3_A_1:int;
	enA1cnt_1:int;
	E:bool;
	duAcnt_1:int;
	exA1cnt_1:int;
	exA2cnt_1:int;
	exA3cnt_1:int;
	exAcnt_1:int;
	idInner3_Inner3_1:int;
	enA3cnt_1:int;
	enA2cnt_1:int;
	duA2cnt_1:int;
	duA3cnt_1:int;
	duA1cnt_1:int)

returns (idInner3_A:int;
	enA1cnt:int;
	exA1cnt:int;
	exA2cnt:int;
	exA3cnt:int;
	exAcnt:int;
	idInner3_Inner3:int;
	enA3cnt:int;
	enA2cnt:int;
	duA2cnt:int;
	duA3cnt:int;
	duA1cnt:int);


let

	 automaton inner3_a

	state POINTInner3_A:
	unless (idInner3_A_1=0) restart POINT__TO__A_A1_1



	unless true and E restart INNER3_A__TO__INNER3_INNER3JUNCTION240_1



	unless (idInner3_A_1=238) restart A_A2_IDL

	unless (idInner3_A_1=239) restart A_A3_IDL

	unless (idInner3_A_1=237) restart A_A1_IDL

	let

		(idInner3_A, enA1cnt, exA1cnt, exA2cnt, exA3cnt, exAcnt, idInner3_Inner3, enA3cnt, enA2cnt, duA2cnt, duA3cnt, duA1cnt) 
	= (idInner3_A_1, enA1cnt_1, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1, idInner3_Inner3_1, enA3cnt_1, enA2cnt_1, duA2cnt_1, duA3cnt_1, duA1cnt_1);
	

	tel



	state POINT__TO__A_A1_1:

	 var 	idInner3_A_2:int;
	enA1cnt_2:int;
	let

		-- transition trace :
	--POINT__To__A_A1_1
		(idInner3_A_2, enA1cnt_2) 
	= A_A1_en(idInner3_A_1, enA1cnt_1, false);
		

	(idInner3_A, enA1cnt) 
	=  (idInner3_A_2, enA1cnt_2);

	--add unused variables
	(duA1cnt, duA2cnt, duA3cnt, enA2cnt, enA3cnt, exA1cnt, exA2cnt, exA3cnt, exAcnt, idInner3_Inner3) 
	= (duA1cnt_1, duA2cnt_1, duA3cnt_1, enA2cnt_1, enA3cnt_1, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1, idInner3_Inner3_1);
	

	tel

	until true restart POINTInner3_A



	state INNER3_A__TO__INNER3_INNER3JUNCTION240_1:

	 var 	idInner3_A_2, idInner3_A_3, idInner3_A_4, idInner3_A_5, idInner3_A_6, idInner3_A_7:int;
	enA1cnt_2:int;
	exA1cnt_2, exA1cnt_3, exA1cnt_4:int;
	exA2cnt_2, exA2cnt_3, exA2cnt_4:int;
	exA3cnt_2, exA3cnt_3, exA3cnt_4:int;
	exAcnt_2, exAcnt_3, exAcnt_4:int;
	idInner3_Inner3_2, idInner3_Inner3_3, idInner3_Inner3_4:int;
	enA3cnt_2:int;
	enA2cnt_2:int;
	let

		

-- transition trace :
	--Inner3_A__To__Junction240_1, Junction240__To__A_A3_1
		(exA2cnt_2, idInner3_A_2, exA3cnt_2, exA1cnt_2, exAcnt_2, idInner3_Inner3_2) 
	= 
		 if ((  duAcnt_1  mod 3=2 )) then 
		Inner3_A_ex(exA2cnt_1, idInner3_A_1, exA3cnt_1, exA1cnt_1, exAcnt_1, idInner3_Inner3_1, true)
		 else (exA2cnt_1, idInner3_A_1, exA3cnt_1, exA1cnt_1, exAcnt_1, idInner3_Inner3_1);
		

		(idInner3_A_3, enA3cnt_2) 
	= 
		 if ((  duAcnt_1  mod 3=2 )) then 
		A_A3_en(idInner3_A_2, enA3cnt_1, false)
		 else (idInner3_A_2, enA3cnt_1);
		


-- transition trace :
	--Inner3_A__To__Junction240_1, Junction240__To__A_A2_2
		(exA2cnt_3, idInner3_A_4, exA3cnt_3, exA1cnt_3, exAcnt_3, idInner3_Inner3_3) 
	= 
		 if ((  duAcnt_1  mod 3=1 )) then 
		Inner3_A_ex(exA2cnt_1, idInner3_A_1, exA3cnt_1, exA1cnt_1, exAcnt_1, idInner3_Inner3_1, true)
		 else (exA2cnt_1, idInner3_A_1, exA3cnt_1, exA1cnt_1, exAcnt_1, idInner3_Inner3_1);
		

		(idInner3_A_5, enA2cnt_2) 
	= 
		 if ((  duAcnt_1  mod 3=1 )) then 
		A_A2_en(idInner3_A_4, enA2cnt_1, false)
		 else (idInner3_A_4, enA2cnt_1);
		


-- transition trace :
	--Inner3_A__To__Junction240_1, Junction240__To__A_A1_3
		(exA2cnt_4, idInner3_A_6, exA3cnt_4, exA1cnt_4, exAcnt_4, idInner3_Inner3_4) 
	= 
		 if ((  duAcnt_1  mod 3=0 )) then 
		Inner3_A_ex(exA2cnt_1, idInner3_A_1, exA3cnt_1, exA1cnt_1, exAcnt_1, idInner3_Inner3_1, true)
		 else (exA2cnt_1, idInner3_A_1, exA3cnt_1, exA1cnt_1, exAcnt_1, idInner3_Inner3_1);
		

		(idInner3_A_7, enA1cnt_2) 
	= 
		 if ((  duAcnt_1  mod 3=0 )) then 
		A_A1_en(idInner3_A_6, enA1cnt_1, false)
		 else (idInner3_A_6, enA1cnt_1);
		

	(idInner3_A, enA1cnt, exA1cnt, exA2cnt, exA3cnt, exAcnt, idInner3_Inner3, enA3cnt, enA2cnt) 
	= 
		 if ((  duAcnt_1  mod 3=2 )) then 
		(idInner3_A_3, enA1cnt_1, exA1cnt_2, exA2cnt_2, exA3cnt_2, exAcnt_2, idInner3_Inner3_2, enA3cnt_2, enA2cnt_1)
		 else
		 if ((  duAcnt_1  mod 3=1 )) then 
		(idInner3_A_5, enA1cnt_1, exA1cnt_3, exA2cnt_3, exA3cnt_3, exAcnt_3, idInner3_Inner3_3, enA3cnt_2, enA2cnt_2)
		 else
		 if ((  duAcnt_1  mod 3=0 )) then 
		(idInner3_A_7, enA1cnt_2, exA1cnt_4, exA2cnt_4, exA3cnt_4, exAcnt_4, idInner3_Inner3_4, enA3cnt_2, enA2cnt_2)
		 else (idInner3_A_1, enA1cnt_1, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1, idInner3_Inner3_1, enA3cnt_1, enA2cnt_1);

	--add unused variables
	(duA1cnt, duA2cnt, duA3cnt) 
	= (duA1cnt_1, duA2cnt_1, duA3cnt_1);
	

	tel

	until true restart POINTInner3_A



	state A_A2_IDL:

	 var 	duA2cnt_2:int;
	let

		
	(duA2cnt_2) 
	= A_A2_du(duA2cnt_1);

		


	(idInner3_A, enA1cnt, exA1cnt, exA2cnt, exA3cnt, exAcnt, idInner3_Inner3, enA3cnt, enA2cnt, duA2cnt) 
	= (idInner3_A_1, enA1cnt_1, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1, idInner3_Inner3_1, enA3cnt_1, enA2cnt_1, duA2cnt_2);
	
	--add unused variables
	(duA1cnt, duA3cnt) 
	= (duA1cnt_1, duA3cnt_1);
	

	tel

	until true restart POINTInner3_A



	state A_A3_IDL:

	 var 	duA3cnt_2:int;
	let

		
	(duA3cnt_2) 
	= A_A3_du(duA3cnt_1);

		


	(idInner3_A, enA1cnt, exA1cnt, exA2cnt, exA3cnt, exAcnt, idInner3_Inner3, enA3cnt, enA2cnt, duA2cnt, duA3cnt) 
	= (idInner3_A_1, enA1cnt_1, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1, idInner3_Inner3_1, enA3cnt_1, enA2cnt_1, duA2cnt_1, duA3cnt_2);
	
	--add unused variables
	(duA1cnt) 
	= (duA1cnt_1);
	

	tel

	until true restart POINTInner3_A



	state A_A1_IDL:

	 var 	duA1cnt_2:int;
	let

		
	(duA1cnt_2) 
	= A_A1_du(duA1cnt_1);

		


	(idInner3_A, enA1cnt, exA1cnt, exA2cnt, exA3cnt, exAcnt, idInner3_Inner3, enA3cnt, enA2cnt, duA2cnt, duA3cnt, duA1cnt) 
	= (idInner3_A_1, enA1cnt_1, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1, idInner3_Inner3_1, enA3cnt_1, enA2cnt_1, duA2cnt_1, duA3cnt_1, duA1cnt_2);
	

	tel

	until true restart POINTInner3_A



tel


--***************************************************State :Inner3_Inner3 Automaton***************************************************

node Inner3_Inner3_node(idInner3_Inner3_1:int;
	enA1cnt_1:int;
	enA2cnt_1:int;
	enA3cnt_1:int;
	enAcnt_1:int;
	idInner3_A_1:int;
	duAcnt_1:int;
	E:bool;
	duA1cnt_1:int;
	duA2cnt_1:int;
	duA3cnt_1:int;
	exA1cnt_1:int;
	exA2cnt_1:int;
	exA3cnt_1:int;
	exAcnt_1:int)

returns (idInner3_Inner3:int;
	enA1cnt:int;
	enA2cnt:int;
	enA3cnt:int;
	enAcnt:int;
	idInner3_A:int;
	duAcnt:int;
	duA1cnt:int;
	duA2cnt:int;
	duA3cnt:int;
	exA1cnt:int;
	exA2cnt:int;
	exA3cnt:int;
	exAcnt:int);


let

	 automaton inner3_inner3

	state POINTInner3_Inner3:
	unless (idInner3_Inner3_1=0) restart POINT__TO__INNER3_A_1



	unless (idInner3_Inner3_1=236) restart INNER3_A_IDL

	let

		(idInner3_Inner3, enA1cnt, enA2cnt, enA3cnt, enAcnt, idInner3_A, duAcnt, duA1cnt, duA2cnt, duA3cnt, exA1cnt, exA2cnt, exA3cnt, exAcnt) 
	= (idInner3_Inner3_1, enA1cnt_1, enA2cnt_1, enA3cnt_1, enAcnt_1, idInner3_A_1, duAcnt_1, duA1cnt_1, duA2cnt_1, duA3cnt_1, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1);
	

	tel



	state POINT__TO__INNER3_A_1:

	 var 	idInner3_Inner3_2:int;
	enA1cnt_2:int;
	enA2cnt_2:int;
	enA3cnt_2:int;
	enAcnt_2:int;
	idInner3_A_2:int;
	let

		-- transition trace :
	--POINT__To__Inner3_A_1
		(idInner3_A_2, idInner3_Inner3_2, enAcnt_2, enA1cnt_2, enA2cnt_2, enA3cnt_2) 
	= Inner3_A_en(idInner3_A_1, idInner3_Inner3_1, enAcnt_1, enA1cnt_1, enA2cnt_1, enA3cnt_1, false);
		

	(idInner3_Inner3, enA1cnt, enA2cnt, enA3cnt, enAcnt, idInner3_A) 
	=  (idInner3_Inner3_2, enA1cnt_2, enA2cnt_2, enA3cnt_2, enAcnt_2, idInner3_A_2);

	--add unused variables
	(duA1cnt, duA2cnt, duA3cnt, duAcnt, exA1cnt, exA2cnt, exA3cnt, exAcnt) 
	= (duA1cnt_1, duA2cnt_1, duA3cnt_1, duAcnt_1, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1);
	

	tel

	until true restart POINTInner3_Inner3



	state INNER3_A_IDL:

	 var 	idInner3_Inner3_2:int;
	enA1cnt_2:int;
	enA2cnt_2:int;
	enA3cnt_2:int;
	idInner3_A_2:int;
	duAcnt_2:int;
	duA1cnt_2:int;
	duA2cnt_2:int;
	duA3cnt_2:int;
	exA1cnt_2:int;
	exA2cnt_2:int;
	exA3cnt_2:int;
	exAcnt_2:int;
	let

		
	(duAcnt_2) 
	= Inner3_A_du(duAcnt_1);

		

	(idInner3_A_2, enA1cnt_2, exA1cnt_2, exA2cnt_2, exA3cnt_2, exAcnt_2, idInner3_Inner3_2, enA3cnt_2, enA2cnt_2, duA2cnt_2, duA3cnt_2, duA1cnt_2) 
	= Inner3_A_node(idInner3_A_1, enA1cnt_1, E, duAcnt_2, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1, idInner3_Inner3_1, enA3cnt_1, enA2cnt_1, duA2cnt_1, duA3cnt_1, duA1cnt_1);

		


	(idInner3_Inner3, enA1cnt, enA2cnt, enA3cnt, enAcnt, idInner3_A, duAcnt, duA1cnt, duA2cnt, duA3cnt, exA1cnt, exA2cnt, exA3cnt, exAcnt) 
	= (idInner3_Inner3_2, enA1cnt_2, enA2cnt_2, enA3cnt_2, enAcnt_1, idInner3_A_2, duAcnt_2, duA1cnt_2, duA2cnt_2, duA3cnt_2, exA1cnt_2, exA2cnt_2, exA3cnt_2, exAcnt_2);
	

	tel

	until true restart POINTInner3_Inner3



tel


--***************************************************State :Inner3_Inner3 Automaton***************************************************

node Inner3_Inner3(E:bool)

returns (exAcnt:int;
	enAcnt:int;
	duAcnt:int;
	enA1cnt:int;
	duA1cnt:int;
	exA1cnt:int;
	enA2cnt:int;
	duA2cnt:int;
	exA2cnt:int;
	enA3cnt:int;
	duA3cnt:int;
	exA3cnt:int);


var exAcnt_1: int;

	enAcnt_1: int;

	duAcnt_1: int;

	enA1cnt_1: int;

	duA1cnt_1: int;

	exA1cnt_1: int;

	enA2cnt_1: int;

	duA2cnt_1: int;

	exA2cnt_1: int;

	enA3cnt_1: int;

	duA3cnt_1: int;

	exA3cnt_1: int;

	idInner3_Inner3, idInner3_Inner3_1: int;

	idInner3_A, idInner3_A_1: int;

	let

	exAcnt_1 = 0 -> pre exAcnt;

	enAcnt_1 = 0 -> pre enAcnt;

	duAcnt_1 = 0 -> pre duAcnt;

	enA1cnt_1 = 0 -> pre enA1cnt;

	duA1cnt_1 = 0 -> pre duA1cnt;

	exA1cnt_1 = 0 -> pre exA1cnt;

	enA2cnt_1 = 0 -> pre enA2cnt;

	duA2cnt_1 = 0 -> pre duA2cnt;

	exA2cnt_1 = 0 -> pre exA2cnt;

	enA3cnt_1 = 0 -> pre enA3cnt;

	duA3cnt_1 = 0 -> pre duA3cnt;

	exA3cnt_1 = 0 -> pre exA3cnt;

	idInner3_Inner3_1 = 0 -> pre idInner3_Inner3;

	idInner3_A_1 = 0 -> pre idInner3_A;

	



	(idInner3_Inner3, enA1cnt, enA2cnt, enA3cnt, enAcnt, idInner3_A, duAcnt, duA1cnt, duA2cnt, duA3cnt, exA1cnt, exA2cnt, exA3cnt, exAcnt)
	 = 

	 if E then Inner3_Inner3_node(idInner3_Inner3_1, enA1cnt_1, enA2cnt_1, enA3cnt_1, enAcnt_1, idInner3_A_1, duAcnt_1, E, duA1cnt_1, duA2cnt_1, duA3cnt_1, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1)

	 else (idInner3_Inner3_1, enA1cnt_1, enA2cnt_1, enA3cnt_1, enAcnt_1, idInner3_A_1, duAcnt_1, duA1cnt_1, duA2cnt_1, duA3cnt_1, exA1cnt_1, exA2cnt_1, exA3cnt_1, exAcnt_1);

	


--unused outputs
	

tel



node Inner3 (E_1_1 : real)
returns (exAcnt_1_1 : int;
	enAcnt_2_1 : int;
	duAcnt_3_1 : int;
	enA1cnt_4_1 : int;
	duA1cnt_5_1 : int;
	exA1cnt_6_1 : int;
	enA2cnt_7_1 : int;
	duA2cnt_8_1 : int;
	exA2cnt_9_1 : int;
	enA3cnt_10_1 : int;
	duA3cnt_11_1 : int;
	exA3cnt_12_1 : int); 
var
	Inner3_1_1 : int; Inner3_2_1 : int; Inner3_3_1 : int; Inner3_4_1 : int; Inner3_5_1 : int; Inner3_6_1 : int; Inner3_7_1 : int; Inner3_8_1 : int; Inner3_9_1 : int; Inner3_10_1 : int; Inner3_11_1 : int; Inner3_12_1 : int;
	E_1_1_event: bool;
let 
	E_1_1_event = false -> ((pre(E_1_1) > 0.0 and E_1_1 <= 0.0) or (pre(E_1_1) <= 0.0 and E_1_1 > 0.0));
	(Inner3_1_1, Inner3_2_1, Inner3_3_1, Inner3_4_1, Inner3_5_1, Inner3_6_1, Inner3_7_1, Inner3_8_1, Inner3_9_1, Inner3_10_1, Inner3_11_1, Inner3_12_1) =  Inner3_Inner3(E_1_1_event);
	exAcnt_1_1 = Inner3_1_1;
	enAcnt_2_1 = Inner3_2_1;
	duAcnt_3_1 = Inner3_3_1;
	enA1cnt_4_1 = Inner3_4_1;
	duA1cnt_5_1 = Inner3_5_1;
	exA1cnt_6_1 = Inner3_6_1;
	enA2cnt_7_1 = Inner3_7_1;
	duA2cnt_8_1 = Inner3_8_1;
	exA2cnt_9_1 = Inner3_9_1;
	enA3cnt_10_1 = Inner3_10_1;
	duA3cnt_11_1 = Inner3_11_1;
	exA3cnt_12_1 = Inner3_12_1;
tel

